<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>解决hexo-matery主题站内搜索异常问题</title>
      <link href="2020/111917267.html"/>
      <url>2020/111917267.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>在群里看到群友说搜索功能有问题，最开始我也没发现，搜索功能在主页没有问题在其他页面会因为添加这个页面的地址导致404.但是在观察友链其他人的网站没有发现问题，而我和群友的确实有问题。  </p></blockquote><h2 id="解决过程"><a href="#解决过程" class="headerlink" title="解决过程"></a>解决过程</h2><p>解决过程首先我怀疑是我的search.js文件的问题替换了友链其他人的，还是不行。<br>然后开始f12慢慢调试排查，我发现在searchlist里面显示的链接为不完整的链接如2020/111623576.html这样在主页没有问题在其他页面如 <a href="https://hesifan.top/contact/">https://hesifan.top/contact/</a>  就会因为补全为 <a href="https://hesifan.top/contact/2020/111623576.html">https://hesifan.top/contact/2020/111623576.html</a> 导致404，我就开始改search.js文件将增加了一个 <code>/</code></p><pre><code>if (isMatch) {                        str += "&lt;li&gt;&lt;a href='/" + data_url + "' class='search-result-title'&gt;" + data_title + "&lt;/a&gt;";</code></pre><p>hexo d 之后正常，应该算是解决了吧，暂时还未出错。<br>贴上改后完整的js文件  </p><pre><code>var searchFunc = function (path, search_id, content_id) {    'use strict';    $.ajax({        url: path,        dataType: "xml",        success: function (xmlResponse) {            // get the contents from search data            var datas = $("entry", xmlResponse).map(function () {                return {                    title: $("title", this).text(),                    content: $("content", this).text(),                    url: $("url", this).text()                };            }).get();            var $input = document.getElementById(search_id);            var $resultContent = document.getElementById(content_id);            $input.addEventListener('input', function () {                var str = '&lt;ul class=\"search-result-list\"&gt;';                var keywords = this.value.trim().toLowerCase().split(/[\s\-]+/);                $resultContent.innerHTML = "";                if (this.value.trim().length &lt;= 0) {                    return;                }                // perform local searching                datas.forEach(function (data) {                    var isMatch = true;                    var content_index = [];                    var data_title = data.title.trim().toLowerCase();                    var data_content = data.content.trim().replace(/&lt;[^&gt;]+&gt;/g, "").toLowerCase();                    var data_url = data.url;                    var index_title = -1;                    var index_content = -1;                    var first_occur = -1;                    // only match artiles with not empty titles and contents                    if (data_title != '' &amp;&amp; data_content != '') {                        keywords.forEach(function (keyword, i) {                            index_title = data_title.indexOf(keyword);                            index_content = data_content.indexOf(keyword);                            if (index_title &lt; 0 &amp;&amp; index_content &lt; 0) {                                isMatch = false;                            } else {                                if (index_content &lt; 0) {                                    index_content = 0;                                }                                if (i == 0) {                                    first_occur = index_content;                                }                            }                        });                    }                    // show search results                    if (isMatch) {                        str += "&lt;li&gt;&lt;a href='/" + data_url + "' class='search-result-title'&gt;" + data_title + "&lt;/a&gt;";                        var content = data.content.trim().replace(/&lt;[^&gt;]+&gt;/g, "");                        if (first_occur &gt;= 0) {                            // cut out 100 characters                            var start = first_occur - 20;                            var end = first_occur + 80;                            if (start &lt; 0) {                                start = 0;                            }                            if (start == 0) {                                end = 100;                            }                            if (end &gt; content.length) {                                end = content.length;                            }                            var match_content = content.substr(start, end);                            // highlight all keywords                            keywords.forEach(function (keyword) {                                var regS = new RegExp(keyword, "gi");                                match_content = match_content.replace(regS, "&lt;em class=\"search-keyword\"&gt;" + keyword + "&lt;/em&gt;");                            });                            str += "&lt;p class=\"search-result\"&gt;" + match_content + "...&lt;/p&gt;"                        }                        str += "&lt;/li&gt;";                    }                });                str += "&lt;/ul&gt;";                $resultContent.innerHTML = str;            });        }    });}</code></pre><h2 id="思考原因"><a href="#思考原因" class="headerlink" title="思考原因"></a>思考原因</h2><p>这里是胡乱猜测，可能是因为我使用的生成链接是全数字，我发现其他人是随机或者拼音都没问题。  </p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于我的实验室</title>
      <link href="2020/111623576.html"/>
      <url>2020/111623576.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>关于我的实验室：<br>1.实验室内大部分页面都是我平时浏览大佬的博客发现的有趣的页面，然后用F12扒下来的。<br>2.这些页面大多为开源项目，可以按照其说明自由引用，本人崇尚开源精神，但是你在把别人页面的时候最好保留原作者的相关信息这是对原作者最基本的尊重，当然你可以注释掉原作者加上自己的信息但请不要删掉原作者留下的信息。<br>3.你如果对我实验室里的某个页面感兴趣欢迎联系我要源码。<br>4.这个教程是matery主题的，其他主题类比操作，小白向。  </p></blockquote><h2 id="直接跳过hexo渲染添加的单页"><a href="#直接跳过hexo渲染添加的单页" class="headerlink" title="直接跳过hexo渲染添加的单页"></a>直接跳过hexo渲染添加的单页</h2><h3 id="1-跳过渲染"><a href="#1-跳过渲染" class="headerlink" title="1.跳过渲染"></a>1.跳过渲染</h3><p>博客根目录yaml文件里找到<code>skip_render:</code>这个是设置跳过渲染的文件或者文件夹的配置项<br>格式示例</p><pre><code>skip_render:   - 'ex/*'  - 'ex/**'</code></pre><p>注意缩进和空格，解释一下：<code>'ex/*'</code> 表示在目录 source/ex夹 下的文件全部跳过渲染，<code>'ex/**'</code> 表示在目录 source/ex/文件夹下的文件全部跳过渲染（例如页面的 js、css 在另一个文件夹中）。这里有点重复了，只为了你能看明白。<br>当然如果是单一HTML不涉及过于复杂的css js的可以直接通过在html文件前加如下片段跳过渲染.</p><pre><code>---layout: false---</code></pre><p>建议统一使用第一种稳定不会出错，第二种可以使用在谷歌或者百度的验证文件中比较方便。  </p><h3 id="2-创建文件夹"><a href="#2-创建文件夹" class="headerlink" title="2.创建文件夹"></a>2.创建文件夹</h3><p>在source文件夹里创建文件夹放入页面源码，如我的实验室里的mikutap 烟花秀 我的flag 雷达 音乐隧道 液体 樱花雨 都是通过这个方法构造的，你可以直接问我要源码，<code>也可以根据下面的教程自行扒取。</code>  </p><h3 id="3-hexo三连即可"><a href="#3-hexo三连即可" class="headerlink" title="3.hexo三连即可"></a>3.hexo三连即可</h3><p>检查有没有成功添加有没有什么错误，没有就OK啦。  </p><h2 id="如何扒大佬网站上的页面（狗头保命）"><a href="#如何扒大佬网站上的页面（狗头保命）" class="headerlink" title="如何扒大佬网站上的页面（狗头保命）"></a>如何扒大佬网站上的页面（狗头保命）</h2><h3 id="1-f12检查进入开发者页面"><a href="#1-f12检查进入开发者页面" class="headerlink" title="1.f12检查进入开发者页面"></a>1.f12检查进入开发者页面</h3><h3 id="2-右键下载"><a href="#2-右键下载" class="headerlink" title="2.右键下载"></a>2.右键下载</h3><p>source右键下载对应html文件css文件js文件到本地文件夹，一般简单的页面只有html文件，复杂一点的页面包含单独css文件js文件。  </p><blockquote><p>注意事项：<br>1.要创建相同的文件夹目录路径如f12source路径如下test/css/stely.css那么你在本地下载的路径也要保持一致在本地应该也为test/css/stely.css<br>当然你可以在HTML文件里面改css js文件路径。<br>2.注意检查html文件里涉及的css，js文件是否齐全否则一定会有问题。<br>3.注意检查有时候你需要的文件可能在cdn里  </p></blockquote><p>hexo三连，检查没有错误就可以啦，有错误就只能慢慢找了。  </p><h3 id="3-扒取同主题大佬页面"><a href="#3-扒取同主题大佬页面" class="headerlink" title="3.扒取同主题大佬页面"></a>3.扒取同主题大佬页面</h3><p>当你需要和你相同主题的大佬的某个页面的内容是可以选择该段文字或者图片右键检查，在elements中复制片段到对应你自己的页面的该位置，注意如果有css文件也要一起扒下来放在主题的css文件中。  </p><h2 id="关于谷歌小恐龙"><a href="#关于谷歌小恐龙" class="headerlink" title="关于谷歌小恐龙"></a>关于谷歌小恐龙</h2><p>由于谷歌恐龙和实验室里其他页面差异较大将在另一篇文章我的matery主题折腾日志里介绍。  </p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 实验室 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给你的网站添加小锁头（安装ssl证书）</title>
      <link href="2020/102948118.html"/>
      <url>2020/102948118.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>之前一直没能给我的网站安装上小锁头，作为一个有强迫症的boy怎么能没有一个锁头呢，安装过程虽然有些曲折但是其实很简单的，只在没部署到服务器上时难度确实很大，主要原因在于GitHub提供的域名本身的证书会和你自己安装的证书冲突导致出现证书信息不一致等问题，较难解决就一直搁置了。</p></blockquote><h2 id="http和https的区别："><a href="#http和https的区别：" class="headerlink" title="http和https的区别："></a>http和https的区别：</h2><p>未安装ssl证书的网站采用http协议用户和站点服务器之间数据传输未加密容易被其他攻击者盗取信息浏览器会提示不安全，其实问题不大没有利益冲突谁会来盗取你站点的信息，如果人家有技术想盗去你信息，加了ssl证书也没意义。<br>安装ssl证书的好处浏览器会提示用户安全，用户在和服务器信息交换时进行加密更加安全，拥有高贵的小锁头，但是网页加载速度可能会变慢个人感觉，而且https有利于seo会拥有更高的排名。  </p><h2 id="centos-nginx服务器安装ssl证书："><a href="#centos-nginx服务器安装ssl证书：" class="headerlink" title="centos nginx服务器安装ssl证书："></a>centos nginx服务器安装ssl证书：</h2><blockquote><p>由于我自己目前使用的时centos nginx的服务器所以就简介一下安装过程。  </p></blockquote><ol><li>向域名商申请免费的ssl证书</li><li>下载ssl证书里面有对应服务器的密匙文件</li><li>将密匙文件复制到nginx安装路径里新建一个文件夹cert用于存放这两个文件。有时候并不会像域名商提供的文档里的默认安装路径，而是你自己的安装路径比如腾讯提供的路径是usr/local/nginx/conf而我自己的路径却是etc/nginx  </li><li>最重要的一步就是修改配置文件nginx.conf主要修改你自己密匙文件路径位置和网站根目录  </li></ol><pre><code>#你的这段代码可能已经存在你只需要将前面注释的#号去除并修改对应信息即可Settings for a TLS enabled server.    server {        listen       443 ssl http2 default_server;        listen       [::]:443 ssl http2 default_server;        server_name  _;        root         /home/hexo;            #网站根目录        ssl_certificate "/etc/nginx/cert/1_www.hesifan.top_bundle.crt";  #填你自己的路径文件名        ssl_certificate_key "/etc/nginx/cert/2_www.hesifan.top.key";         #填你自己的路径文件名        ssl_session_cache shared:SSL:1m;        ssl_session_timeout  10m;        ssl_ciphers HIGH:!aNULL:!MD5;        ssl_prefer_server_ciphers on;#        # Load configuration files for the default server block.        include /etc/nginx/default.d/*.conf;        location / {       }        error_page 404 /404.html;         location = /404.html {        }         error_page 500 502 503 504 /50x.html;        location = /50x.html {        }    }    }  </code></pre><blockquote><p>可选：设置HTTP请求自动跳转HTTPS。<br>在需要跳转的HTTP站点下添加以下rewrite语句，实现HTTP访问自动跳转到HTTPS页面。这个是添加在nginx.conf文件里关于http站点的设定里的而不是新加在HTTPs设定后面  </p></blockquote><pre><code>server { listen 443; server_name www.hesifan.top; #将www.hesifan.top修改为您证书绑定的域名，例如：www.hesifan.top。rewrite ^(.*)$ https://$host$1 permanent;   #将所有HTTP请求通过rewrite重定向到HTTPS。 location / {index index.html index.htm;}}</code></pre><p>5.重启nginx服务器</p><pre><code>systemctl restart nginx.service  </code></pre><p>6.访问新的地址<a href="https://hesifan.top/">https://hesifan.top</a> 无误即可<br>7.这是我nginx文件全部相关信息  </p><pre><code>http {    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '                      '$status $body_bytes_sent "$http_referer" '                      '"$http_user_agent" "$http_x_forwarded_for"';    access_log  /var/log/nginx/access.log  main;    sendfile            on;    tcp_nopush          on;    tcp_nodelay         on;    keepalive_timeout   65;    types_hash_max_size 2048;    include             /etc/nginx/mime.types;    default_type        application/octet-stream;    # Load modular configuration files from the /etc/nginx/conf.d directory.    # See http://nginx.org/en/docs/ngx_core_module.html#include    # for more information.    include /etc/nginx/conf.d/*.conf;    server {        listen       80 default_server;        listen       [::]:80 default_server;        server_name www.hesifan.top_;        root         /home/hexo;        listen 443;        rewrite ^(.*)$ https://$host$1 permanent;   #将所有HTTP请求通过rewrite重定向到HTTPS。        # Load configuration files for the default server block.        include /etc/nginx/default.d/*.conf;        location / {        }        error_page 404 /404.html;        location = /404.html {        }        error_page 500 502 503 504 /50x.html;        location = /50x.html {        }    }# Settings for a TLS enabled server.    server {        listen       443 ssl http2 default_server;        listen       [::]:443 ssl http2 default_server;        server_name  _;        root         /home/hexo;        ssl_certificate "/etc/nginx/cert/1_www.hesifan.top_bundle.crt";        ssl_certificate_key "/etc/nginx/cert/2_www.hesifan.top.key";        ssl_session_cache shared:SSL:1m;        ssl_session_timeout  10m;        ssl_ciphers HIGH:!aNULL:!MD5;        ssl_prefer_server_ciphers on;#        # Load configuration files for the default server block.        include /etc/nginx/default.d/*.conf;        location / {       }        error_page 404 /404.html;         location = /404.html {        }         error_page 500 502 503 504 /50x.html;        location = /50x.html {        }    }}</code></pre>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> ssl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>送给自己的话</title>
      <link href="2020/102646933.html"/>
      <url>2020/102646933.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>人生难免有时迷茫困顿失去航向，难免有时有些感触，难免有些想法，在这里写下想要对自己说的话，别人写给我的话。  </p></blockquote><hr><p>我希望上天一直对我不公平，像以前那样，让我过的不如意，这样，我能更坚强。——友人赠 </p><hr><p>世界上只有一种英雄主义，就是发现了生活的真相，依旧热爱它。</p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> 碎语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c语言笔记</title>
      <link href="2020/102449769.html"/>
      <url>2020/102449769.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="C语言课程准备"><a href="#C语言课程准备" class="headerlink" title="C语言课程准备"></a>C语言课程准备</h2><h3 id="1-博客"><a href="#1-博客" class="headerlink" title="1. 博客"></a>1. 博客</h3><pre><code>    a. 写博客是对所学知识的总结    b.  写博客是记录学习的过程和心得，给面试官了解你的机会增加面试谈资    c. 注册博客（技术博客）        i. Csdn（用户多，但多为学生）        ii. 51cto（推荐）        iii. 博客园        iv. 开源中国</code></pre><h3 id="2-GitHub（www-github-com）"><a href="#2-GitHub（www-github-com）" class="headerlink" title="2. GitHub（www.github.com）"></a>2. GitHub（<a href="http://www.github.com)/">www.github.com）</a></h3><pre><code>    a. GitHub注册账户创建代码仓库例如c-code自己写代码上传，公开后其他人可以调用    b. 简历中可以贴上GitHub简介可以查看每天代码记录一天代码就是一个绿点，日积月累</code></pre><h3 id="3-笔记软件OneNote"><a href="#3-笔记软件OneNote" class="headerlink" title="3. 笔记软件OneNote"></a>3. 笔记软件OneNote</h3><pre><code>a. 方便检索b. 便于携带c. 不易丢失</code></pre><h3 id="4-思维导图Xmind"><a href="#4-思维导图Xmind" class="headerlink" title="4. 思维导图Xmind"></a>4. 思维导图Xmind</h3><pre><code>    a. 便于总结串联知识    b. 生动形象展示知识点</code></pre><h3 id="5-编程"><a href="#5-编程" class="headerlink" title="5. 编程"></a>5. 编程</h3><pre><code>    a. 语言:C/C++/Java    b. 算法    c. 数据结构Ds    d. 操作系统    e. 计算机网络   </code></pre><h2 id="C语言初识"><a href="#C语言初识" class="headerlink" title="C语言初识"></a>C语言初识</h2><h3 id="1-什么是C语言"><a href="#1-什么是C语言" class="headerlink" title="1. 什么是C语言"></a>1. 什么是C语言</h3><pre><code>    a. C语言是一种计算机程序设计语言。它既有高级语言的特点，又具有汇编语言的特点。它可以作为系统设计语言，编写工作系统应用程序，也可以作为应用程序设计语言，编写不依赖计算机硬件的应用程序    b. 语言发展    二进制语言---&gt;B语言----&gt;C语言----&gt;C++ java    c. C语言标准        i. C89 /C90 （ISO国际标准）很接近        ii. C99/ C11    （不少编译器不支持）    d. 常见C语言编译器    Clang / Gcc /win-tc/SUBLIME/MSVC/Turbo C</code></pre><h3 id="2-第一个C语言程序"><a href="#2-第一个C语言程序" class="headerlink" title="2. 第一个C语言程序"></a>2. 第一个C语言程序</h3><pre><code>未完</code></pre>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ps笔记</title>
      <link href="2020/102459229.html"/>
      <url>2020/102459229.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="ps1工作区"><a href="#ps1工作区" class="headerlink" title="ps1工作区"></a>ps1工作区</h2><h3 id="1-保存自己工作区"><a href="#1-保存自己工作区" class="headerlink" title="1. 保存自己工作区"></a>1. 保存自己工作区</h3><h3 id="2-打开方法"><a href="#2-打开方法" class="headerlink" title="2. 打开方法"></a>2. 打开方法</h3><pre><code>    a. 直接打开    b. 拖动    c. 图片打开方式ps</code></pre><h3 id="3-一个工作簿打开多个图片，第二张起文件中选择置入嵌入对象"><a href="#3-一个工作簿打开多个图片，第二张起文件中选择置入嵌入对象" class="headerlink" title="3. 一个工作簿打开多个图片，第二张起文件中选择置入嵌入对象"></a>3. 一个工作簿打开多个图片，第二张起文件中选择置入嵌入对象</h3><h3 id="4-新建画布用于海报图片的设计"><a href="#4-新建画布用于海报图片的设计" class="headerlink" title="4. 新建画布用于海报图片的设计"></a>4. 新建画布用于海报图片的设计</h3><pre><code>    a. 确定大小（常用像素为单位）一般整个电脑1920*1080    b. 分辨率ppi（决定清晰度）        i. 不用于打印，电脑手机等电子设备72ppi        ii. 印刷打印，300ppi    c. 颜色模式        i. RGB三色光用于电子设备        ii. CMYK四种印刷染料的简称，用于印刷</code></pre><h3 id="5-常用保存格式"><a href="#5-常用保存格式" class="headerlink" title="5. 常用保存格式"></a>5. 常用保存格式</h3><pre><code>    a. Psd pdd 可以保存图层，便于以后修改    b. jpg图片常用格式    c. png与jpg相比可以识别透明图层，jpg格式会自动填充颜色    d. TIFF喷绘写真专用    e. 导出时降低品质目的减小内存，无特殊要求时保持最高品质  </code></pre><h2 id="ps2图层概念及选择工具"><a href="#ps2图层概念及选择工具" class="headerlink" title="ps2图层概念及选择工具"></a>ps2图层概念及选择工具</h2><h3 id="1-图层"><a href="#1-图层" class="headerlink" title="1. 图层"></a>1. 图层</h3><pre><code>    a. 图层概念图像效果由各个图层依次顺序叠加而成    b. 复制图层CTRL+D 右键单击文字空白复制图层    c. 删除图层delete    d. 新建图层右下角工具栏    e. 填充颜色左工具栏前景色，alt+delete填充颜色    f. 按住图层拖动调整图层顺序</code></pre><h3 id="2-选择工具（使用工具先设置参数）"><a href="#2-选择工具（使用工具先设置参数）" class="headerlink" title="2. 选择工具（使用工具先设置参数）"></a>2. 选择工具（使用工具先设置参数）</h3><pre><code>    a. 目的移动图层上某个内容,先选择图层，再移动    b. 选择工具窗口栏参数        i. 自动选择便于选择内容可以自动识别内容所在图层，默认开启。快捷键Ctrl        ii. 显示变换控件，可以在图层内容外显示变换框以调节内容大小角度透明度等参数，        但是一般关闭，开启容易改变图像需要使用时先选择图层用快捷键CTRL+T开启，        调整好参数后双击内容保存或在窗口栏保存        注：新版本ps默认等比放缩，按住shift可自由变换，老版相反        iii. 组,可以将多个图层放到一个组，这时选择组即选择该组全部图层，共同调整        多选图层按CTRL点击图层名称或后面留白，不能点击缩略图        iv. 对齐和分布，对齐是横向校准，分布是纵向校准，默认按选中分区校准，        可调为画布为基准  </code></pre><h2 id="ps3-选区概念及选区工具"><a href="#ps3-选区概念及选区工具" class="headerlink" title="ps3 选区概念及选区工具"></a>ps3 选区概念及选区工具</h2><h3 id="1-选区"><a href="#1-选区" class="headerlink" title="1. 选区"></a>1. 选区</h3><pre><code>    a. 选区作用 只对特定区域进行编辑调整    b. 选中区域有虚线闪烁框    c. 先选择目标所在图层再拷贝内容</code></pre><h3 id="2-羽化和消除锯齿"><a href="#2-羽化和消除锯齿" class="headerlink" title="2. 羽化和消除锯齿"></a>2. 羽化和消除锯齿</h3><pre><code>    a.  羽化和消除锯齿是为了与背景更自然的融合    b. 羽化窗口栏默认关闭，需要使用时打开调整    而消除锯齿默认打开</code></pre><h3 id="3-矩形选框工具和椭圆选框工具"><a href="#3-矩形选框工具和椭圆选框工具" class="headerlink" title="3. 矩形选框工具和椭圆选框工具"></a>3. 矩形选框工具和椭圆选框工具</h3><pre><code>    a. 正圆与正方形按住shift拖动，按alt拖动可以定点改变大小    b. 已选区后，shift拖动加选区， CTRL拖动减选区     shift+CTRL交叉选区，CTRL+d取消选区    c. 利用椭圆选框工具抠圆可利用alt定点放大和右键自由变换选取</code></pre><h3 id="4-单行画框工具和单列画框工具"><a href="#4-单行画框工具和单列画框工具" class="headerlink" title="4. 单行画框工具和单列画框工具"></a>4. 单行画框工具和单列画框工具</h3><pre><code>    a. 作用便于在图层上画线，先选区，再填色</code></pre><h3 id="5-套索工具多边形索工具和磁力套索工具"><a href="#5-套索工具多边形索工具和磁力套索工具" class="headerlink" title="5. 套索工具多边形索工具和磁力套索工具"></a>5. 套索工具多边形索工具和磁力套索工具</h3><pre><code>    a. 套索工具可以方便的选取不规则区域，但精度不高    b. 多边形索工具方便选取直线规则多边形    c. 随鼠标移动自动按色差识别选择内容，色差较小区域处    手动点击辅助引导    d. alt+滚轮调节大小  空格鼠标控制位置    backspace删除节点  alt切换套索工具    </code></pre><h2 id="ps4快速选区工具及魔棒工具"><a href="#ps4快速选区工具及魔棒工具" class="headerlink" title="ps4快速选区工具及魔棒工具"></a>ps4快速选区工具及魔棒工具</h2><h3 id="1-快速选择工具"><a href="#1-快速选择工具" class="headerlink" title="1. 快速选择工具"></a>1. 快速选择工具</h3><pre><code>    a. 对所有图层取样自动识别内所在图层方便选取，默认开启    b. 自动增强虚化边框减少生硬感过渡    c. 选择主体自动选择画面主体部分，需要自己调整，初学阶段建议关闭    d. alt+右键按住拖动可以改变工具大小，减少选区alt</code></pre><h3 id="2-魔棒工具"><a href="#2-魔棒工具" class="headerlink" title="2. 魔棒工具"></a>2. 魔棒工具</h3><pre><code>    a. 参数设置默认连续，取样点，对所有图层取样，容差20容差控制单次选取大小    b. 自动选择图片中颜色相近的部分，然后反选扣取内容，适合纯色背景抠图</code></pre><h3 id="3-可以配合多种选区工具选区"><a href="#3-可以配合多种选区工具选区" class="headerlink" title="3. 可以配合多种选区工具选区"></a>3. 可以配合多种选区工具选区</h3><h3 id="4-选择并遮住"><a href="#4-选择并遮住" class="headerlink" title="4. 选择并遮住"></a>4. 选择并遮住</h3><pre><code>    a. 在抠图后往往边缘会出现锯齿状，杂色，粗糙，这时可以用选择并遮住微调    b. 基础参数设置黑白底，不透明度100%    c. 羽化和边缘检测功能很少用，容易产生杂色    d. 平滑根据图片效果自主决定百分比    e. 对比度和移动边缘后期再学习    f. 调整边缘画笔工具自动识别微调    g. 净化颜色去除杂色根据图片效果决定参数</code></pre>]]></content>
      
      
      <categories>
          
          <category> abode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> ps </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文摘</title>
      <link href="2020/102425339.html"/>
      <url>2020/102425339.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>世界上第一位百万富翁洛克菲勒对他儿子说我不相信天赐的好运气，但我靠规划平步青云。生活没有一夜暴富的美梦，也不必最好的年纪委屈自己，更多我们是要分清想要和必要，在合理的规划中行止由心得偿所愿。 2020.10.24</p><hr><p>时也命也运也，天有不测风云，人有旦夕祸福。蜈蚣百足，行不及蛇,灵鸡有翼，飞不如鸦。马有千里之程，无人不能自往；人有凌云之志，非运不能腾达。文章盖世，孔子困于陈蔡；武略超群，太公垂钓于渭水。盗跖年幼，不是善良之辈；颜回命短，实非凶恶之徒。尧舜至圣，反生不肖之子；瞽叟顽呆，却生大圣之儿。张良原是布衣，萧何称谓县吏。晏子身无五尺，能做齐国首相；孔明居卧草庐，作了蜀汉军师。韩信手无缚鸡之力，封了汉朝大将；冯唐有安邦之志，到老半官无封；楚王虽雄，难免乌江自刎；汉王虽弱，却有万里江山。满腹经纶，白发不第；才疏学浅，少年登科。有先贫而后富，有先富而后贫。蛟龙未遇，潜身于鱼虾之间；君子失时，拱手于小人之下。天不得时，日月无光；地不得时，草木不长；水不得时，风浪不止；人不得时，利运不通。盖人生在世，富贵不能移，贫贱不能欺。此乃天地循环，终而复始者也。——郭德纲时运赋              2020.10.28</p><hr><p>如果你来访我，我不在，请和我门外的花坐一会儿，它们很温暖，我注视它们很多很多日子了。它们开得不茂盛，想起来什么说什么，没有话说时，尽管长着碧叶。汪曾祺《人间草木》2020.10.30    </p><hr><p>林深时见鹿，海蓝时见鲸，梦醒时见你。<br>可实际:<br>林深时雾起，海蓝时浪涌，梦醒时夜续。<br>不见鹿，不见鲸，也不见你。<br>但终究:<br>鹿踏雾而来，鲸随浪而涌。<br>你没回头又怎知我不在。  2020.11.02    </p><hr><p>那一天我二十一岁，在我一生的黄金时代，我有好多奢望。我想爱，想吃，还想在一瞬间变成天上半明半暗的云。可是我过二十一岁生日时没有预见到这一点。我觉得自己会永远生猛下去，什么也锤不了我。–王小波 《黄金时代》 2020.11.03  </p><hr><p>仅一夜之间，我的心判若两人” 他自人山人海中来 原来只为给我一场空欢喜 你来时携风带雨 我无处可避 你走时乱了四季我 久病难医。2020.11.05</p><hr><p>“ 每个人的生命里，都有最艰难的那一年，将人生变得美好而辽阔。” —— 《岛上书店》2020.11.08  </p><hr><p>两处相思同淋雪，也算此生共白头。冬去枯骨尘如是，春来尽做连理枝。鸟雀对鸣和和睦，好比我等再无忧。2020.11.11</p><hr><p>对不爱的东西锱铢必较，对爱的一掷千金，这才是钱的正确使用方式 2020.11.12 </p><hr><p>落榜复读，偶遇转校女孩，惊为天人，遂追求，历经半载，如愿。虽终日书信传情，夜半通幽，亦榜上有名。时值奥运之年，吾亲赴鸟巢行工瓦之事，两月酷暑搏伊人一笑，畅！其中种种，美不胜收。然事与愿违，伊人家境颇丰，狮城留学，至今未归。前日于旧友偶闻其已婚配，门当户对，落叶不归根。吾，百无一用 。2020.11.13 </p><hr><p>白月光并不是年少的她发出来的光，而是年少的你看到她的时候眼里的光！2020.11.14  </p><hr><p>一见钟情只不过是见色起意，日久生情不过是权衡利弊，爱情这东西，始于颜值，陷于才华，忠于肉体，迷于声音，最后，折于物质，败于现实。2020.11.14  </p><hr><p>到了后来，那个人其实已经不是某个独特的人，而是承载着某种情绪的载体。是所有美好幻想凑成的粉红色泡泡，记忆中那个得不到的人，永远年轻活力，承载一切少年幻想。  2020.11.14</p><hr><p>而初美所摇撼的恰恰就是我身上长眠未醒的“我自身的一部分”。当我恍然大悟时，一时悲枪之极。<br>《挪威的森林》  2020.11.15</p><hr><p>它类似一种少年时代的憧憬，一种从来不曾实现而且永远不可能实现的憧憬。这种直欲燃烧般的天真烂漫的憧憬，我在很早以前就已遗忘在什么地方了，甚至在很长时间里我连它曾在我心中存在过都未曾记起。2020.11.15</p><hr><p>忽有故人心上过，回首山河已是秋。<br>两处相思同淋雪，此生也算共白头。    2020.11.16</p><hr><p>青丝幽幽系行舟 落花依旧漫水流 山河有幸同历雪 应是此生共白头  2020.11.16</p><hr>]]></content>
      
      
      <categories>
          
          <category> 文化素养 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文摘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo部署到centos服务器</title>
      <link href="2020/102417267.html"/>
      <url>2020/102417267.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="将hexo部署到服务器"><a href="#将hexo部署到服务器" class="headerlink" title="将hexo部署到服务器"></a>将hexo部署到服务器</h1><h2 id="系统centos-7-6-64bit"><a href="#系统centos-7-6-64bit" class="headerlink" title="系统centos 7.6 64bit"></a>系统centos 7.6 64bit</h2><h2 id="环境-git-nginx"><a href="#环境-git-nginx" class="headerlink" title="环境 git nginx"></a>环境 git nginx</h2><h2 id="git安装与配置"><a href="#git安装与配置" class="headerlink" title="git安装与配置"></a>git安装与配置</h2><h3 id="1-安装依赖库和编译工具"><a href="#1-安装依赖库和编译工具" class="headerlink" title="1. 安装依赖库和编译工具"></a>1. 安装依赖库和编译工具</h3><pre><code>  yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</code></pre><pre><code> Is this ok [y/d/N]:  </code></pre><p> 输入y继续安装，后面一样  </p><h3 id="2-安装编译工具："><a href="#2-安装编译工具：" class="headerlink" title="2. 安装编译工具："></a>2. 安装编译工具：</h3><pre><code>  yum install gcc perl-ExtUtils-MakeMaker package </code></pre><h2 id="下载-git并解压编译安装"><a href="#下载-git并解压编译安装" class="headerlink" title="下载 git并解压编译安装"></a>下载 git并解压编译安装</h2><h3 id="1-查看服务器已有的git版本"><a href="#1-查看服务器已有的git版本" class="headerlink" title="1. 查看服务器已有的git版本"></a>1. 查看服务器已有的git版本</h3><pre><code>git --version</code></pre><pre><code>git version 1.8.3.1</code></pre><h3 id="2-将陈旧版本的git删除"><a href="#2-将陈旧版本的git删除" class="headerlink" title="2. 将陈旧版本的git删除"></a>2. 将陈旧版本的git删除</h3><pre><code>yum remove git </code></pre><h3 id="3-选择一个目录来存放下载下来的-git-安装包。这里选择了-usr-local-src-目录"><a href="#3-选择一个目录来存放下载下来的-git-安装包。这里选择了-usr-local-src-目录" class="headerlink" title="3.选择一个目录来存放下载下来的 git 安装包。这里选择了/usr/local/src 目录"></a>3.选择一个目录来存放下载下来的 git 安装包。这里选择了/usr/local/src 目录</h3><pre><code>cd /usr/local/src   </code></pre><h3 id="4-下载最新版git到-usr-local-src，可以在官网找到版本，目前最新版本是2-26-0。"><a href="#4-下载最新版git到-usr-local-src，可以在官网找到版本，目前最新版本是2-26-0。" class="headerlink" title="4. 下载最新版git到/usr/local/src，可以在官网找到版本，目前最新版本是2.26.0。"></a>4. 下载最新版git到/usr/local/src，可以在官网找到版本，目前最新版本是2.26.0。</h3><pre><code>wget http://ftp.ntu.edu.tw/software/scm/git/git-2.26.0.tar.gz  </code></pre><h3 id="5-解压到当前目录"><a href="#5-解压到当前目录" class="headerlink" title="5. 解压到当前目录"></a>5. 解压到当前目录</h3><pre><code>tar -zvxf git-2.26.0.tar.gz  </code></pre><h3 id="6-进入-git-2-26-0-tar-gz-目录下"><a href="#6-进入-git-2-26-0-tar-gz-目录下" class="headerlink" title="6. 进入 git-2.26.0.tar.gz 目录下"></a>6. 进入 git-2.26.0.tar.gz 目录下</h3><pre><code>cd git-2.26.0</code></pre><h3 id="7-执行编译"><a href="#7-执行编译" class="headerlink" title="7. 执行编译"></a>7. 执行编译</h3><pre><code>make prefix=/usr/local/git all  </code></pre><h3 id="8-安装-git-到-usr-local-git-目录下"><a href="#8-安装-git-到-usr-local-git-目录下" class="headerlink" title="8.安装 git 到 /usr/local/git 目录下"></a>8.安装 git 到 /usr/local/git 目录下</h3><pre><code>make prefix=/usr/local/git install  </code></pre><h2 id="配置-git-环境变量"><a href="#配置-git-环境变量" class="headerlink" title="配置 git 环境变量"></a>配置 git 环境变量</h2><h3 id="1-打开环境变量配置文件"><a href="#1-打开环境变量配置文件" class="headerlink" title="1.打开环境变量配置文件"></a>1.打开环境变量配置文件</h3><pre><code>vim /etc/profile  </code></pre><p>  按i进入编辑模式，按向下键到底部，添加下面两行命令：   </p><pre><code>PATH=$PATH:/usr/local/git/bin   # git 的目录export PATH  </code></pre><p>  按esc退出，按:wq保存编辑。(注意是先:再是wq)  </p><h3 id="2-使-git-环境变量生效"><a href="#2-使-git-环境变量生效" class="headerlink" title="2.使 git 环境变量生效"></a>2.使 git 环境变量生效</h3><pre><code> source /etc/profile</code></pre><h3 id="3-验证安装完成，查看-git-的版本号"><a href="#3-验证安装完成，查看-git-的版本号" class="headerlink" title="3.验证安装完成，查看 git 的版本号"></a>3.验证安装完成，查看 git 的版本号</h3><pre><code>git --version</code></pre><p>这时候我们的git版本已经变成了：</p><pre><code>git version 2.26.01</code></pre><h2 id="创建-git-用户"><a href="#创建-git-用户" class="headerlink" title="创建 git 用户"></a>创建 git 用户</h2><h3 id="1-创建git用户"><a href="#1-创建git用户" class="headerlink" title="1.创建git用户"></a>1.创建git用户</h3><pre><code>adduser git</code></pre><h3 id="2-获取权限"><a href="#2-获取权限" class="headerlink" title="2.获取权限"></a>2.获取权限</h3><pre><code>chmod 740 /etc/sudoersvim /etc/sudoers</code></pre><p>按 i 键进入文件的编辑模式，按向下键找到如下字段</p><pre><code>root    ALL=(ALL)       ALL</code></pre><p>在其后面增加一句：</p><pre><code>git     ALL=(ALL)       ALL</code></pre><p>按 Esc 键退出编辑模式，输入:wq 保存退出。（先输入:，然后输入wq回车）</p><h3 id="3-退回权限"><a href="#3-退回权限" class="headerlink" title="3.退回权限"></a>3.退回权限</h3><pre><code>chmod 400 /etc/sudoers  </code></pre><h2 id="配置密钥"><a href="#配置密钥" class="headerlink" title="配置密钥"></a>配置密钥</h2><h3 id="1-将密钥保存在服务器-之前有密钥的直接复制就可以"><a href="#1-将密钥保存在服务器-之前有密钥的直接复制就可以" class="headerlink" title="1.将密钥保存在服务器(之前有密钥的直接复制就可以)"></a>1.将密钥保存在服务器(之前有密钥的直接复制就可以)</h3><p>将id_rsa.pub里面的密钥复制,在服务器运行下面命令，创建.ssh文件夹</p><pre><code>su gitmkdir ~/.ssh</code></pre><p>创建.ssh/authorized_keys文件，打开authorized_keys文件并将刚才在本地机器复制的内容拷贝其中并保存</p><pre><code>vim ~/.ssh/authorized_keys</code></pre><p>按i进入编辑模式粘贴完按 Esc 键退出编辑模式，输入:wq 保存退出。（先输入:，然后输入wq回车）</p><h3 id="2-修改权限"><a href="#2-修改权限" class="headerlink" title="2.修改权限"></a>2.修改权限</h3><pre><code>chmod 755 ~chmod 700 ~/.sshchmod 600 ~/.ssh/authorized_keys</code></pre><h3 id="3-测试本地连接服务器"><a href="#3-测试本地连接服务器" class="headerlink" title="3.测试本地连接服务器"></a>3.测试本地连接服务器</h3><p>在本地电脑git bash here</p><pre><code>//yourIp为远程服务器的ip地址ssh -v git@yourIp  </code></pre><pre><code>git@vm_0_centos~</code></pre><h2 id="创建git仓库"><a href="#创建git仓库" class="headerlink" title="创建git仓库"></a>创建git仓库</h2><h3 id="1-切换到root用户，创建一个目录用于存储网站的根目录"><a href="#1-切换到root用户，创建一个目录用于存储网站的根目录" class="headerlink" title="1.切换到root用户，创建一个目录用于存储网站的根目录"></a>1.切换到root用户，创建一个目录用于存储网站的根目录</h3><pre><code>su root</code></pre><h3 id="2-创建网站的根目录"><a href="#2-创建网站的根目录" class="headerlink" title="2.创建网站的根目录"></a>2.创建网站的根目录</h3><pre><code>mkdir /home/hexo</code></pre><h3 id="3给予权限"><a href="#3给予权限" class="headerlink" title="3给予权限"></a>3给予权限</h3><pre><code>chown git:git -R /home/hexo</code></pre><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><h3 id="1-安装配置Nginx"><a href="#1-安装配置Nginx" class="headerlink" title="1.安装配置Nginx"></a>1.安装配置Nginx</h3><p>安装Nginx  </p><pre><code>yum install -y nginx</code></pre><p>配置Nginx</p><pre><code>nginx -t</code></pre><p>使用vim打开nginx.conf文件</p><pre><code>vim /etc/nginx/nginx.conf</code></pre><p>按i进入编辑模式粘贴完按 Esc 键退出编辑模式，输入:wq 保存退出。（先输入:，然后输入wq回车）</p><pre><code>server {        listen       80 default_server;        listen       [::]:80 default_server;        server_name  www.muyiio.com;   //你的博客域名        root         /home/hexo;       //git仓库目录    # Load configuration files for the default server block.    include /etc/nginx/default.d/*.conf;    location / {    }j    error_page 404 /404.html;        location = /40x.html {    }    error_page 500 502 503 504 /50x.html;        location = /50x.html {    }}</code></pre><h3 id="2-启动Nginx"><a href="#2-启动Nginx" class="headerlink" title="2.启动Nginx"></a>2.启动Nginx</h3><pre><code>systemctl start nginx.service</code></pre><h3 id="3-重启Nginx"><a href="#3-重启Nginx" class="headerlink" title="3.重启Nginx"></a>3.重启Nginx</h3><pre><code>systemctl restart nginx.service</code></pre><h2 id="自动化部署"><a href="#自动化部署" class="headerlink" title="自动化部署"></a>自动化部署</h2><h3 id="1-获取root权限"><a href="#1-获取root权限" class="headerlink" title="1.获取root权限"></a>1.获取root权限</h3><pre><code>su root</code></pre><h3 id="2-建立git仓库"><a href="#2-建立git仓库" class="headerlink" title="2.建立git仓库"></a>2.建立git仓库</h3><pre><code>cd /home/gitgit init --bare blog.git</code></pre><h3 id="3-修改blog-gi权限"><a href="#3-修改blog-gi权限" class="headerlink" title="3.修改blog.gi权限"></a>3.修改blog.gi权限</h3><pre><code>chown git:git -R blog.git</code></pre><h3 id="4-在-home-hexo-blog-git-下，有一个自动生成的-hooks-文件夹，我们创建一个新的-git-钩子-post-receive，用于自动部署。"><a href="#4-在-home-hexo-blog-git-下，有一个自动生成的-hooks-文件夹，我们创建一个新的-git-钩子-post-receive，用于自动部署。" class="headerlink" title="4.在 /home/hexo/blog.git 下，有一个自动生成的 hooks 文件夹，我们创建一个新的 git 钩子 post-receive，用于自动部署。"></a>4.在 /home/hexo/blog.git 下，有一个自动生成的 hooks 文件夹，我们创建一个新的 git 钩子 post-receive，用于自动部署。</h3><pre><code>im blog.git/hooks/post-receive</code></pre><p>按 i 键进入文件的编辑模式，在该文件中添加两行代码（将下边的代码粘贴进去)，指定 Git 的工作树（源代码）和 Git 目录</p><pre class=" language-#!/bin/bash"><code class="language-#!/bin/bash">git --work-tree=/home/hexo --git-dir=/home/git/blog.git checkout -f </code></pre><p>按 Esc 键退出编辑模式，输入:wq 保存退出。（先输入：，然后输入wq回车）</p><h3 id="5-修改文件权限，使得其可执行。"><a href="#5-修改文件权限，使得其可执行。" class="headerlink" title="5.修改文件权限，使得其可执行。"></a>5.修改文件权限，使得其可执行。</h3><pre><code>chmod +x /home/git/blog.git/hooks/post-receive  </code></pre><h2 id="配置本地Hexo"><a href="#配置本地Hexo" class="headerlink" title="配置本地Hexo"></a>配置本地Hexo</h2><h3 id="1-博客根目录-config下增加"><a href="#1-博客根目录-config下增加" class="headerlink" title="1.博客根目录_config下增加"></a>1.博客根目录_config下增加</h3><pre><code>deploy:    type: git    repo: root@***(服务器ip,内网外网都行):/home/git/blog.git    #仓库地址    branch: master    #分支</code></pre><h3 id="2-部署"><a href="#2-部署" class="headerlink" title="2.部署"></a>2.部署</h3><pre><code>hexo cleanhexo ghexo d</code></pre><p>输入hexo d的时候，会要求你输入自己的服务器密码</p><pre><code>Branch 'master' set up to track remote branch 'master' from 'https://e.coding.net/godxiaolon/godxiaolon.git'.On branch masternothing to commit, working tree cleanroot@119.25.56.82's password:Enumerating objects: 182, done.Counting objects: 100% (182/182), done.Delta compression using up to 12 threadsCompressing objects: 100% (61/61), done.Writing objects: 100% (95/95), 73.08 KiB | 3.18 MiB/s, done.Total 95 (delta 45), reused 0 (delta 0)remote: hooks/post-receive: line 1: t: command not foundTo 118.25.27.52:/home/git/hexoBlog.git   8df3691..7d63b39  HEAD -&gt; masterBranch 'master' set up to track remote branch 'master' from 'root@118.25.27.52:/home/git/hexoBlog.git'.INFO  Deploy done: git</code></pre><p>输入密码不会有显示，输完回车就可以</p><h3 id="3-如果出现bash-git-receive-pack-command-not-found-则运行："><a href="#3-如果出现bash-git-receive-pack-command-not-found-则运行：" class="headerlink" title="3.如果出现bash: git-receive-pack: command not found,则运行："></a>3.如果出现bash: git-receive-pack: command not found,则运行：</h3><pre><code>sudo ln -s /usr/local/git/bin/git-receive-pack  /usr/bin/git-receive-pack</code></pre><h3 id="4-访问服务器ip，看看有没有成功"><a href="#4-访问服务器ip，看看有没有成功" class="headerlink" title="4.访问服务器ip，看看有没有成功"></a>4.访问服务器ip，看看有没有成功</h3><h3 id="5-补充"><a href="#5-补充" class="headerlink" title="5.补充"></a>5.补充</h3><p>在同一个服务器第二次部署hexo时要将C盘.ssh文件夹中kown_host中服务器主机记录删掉否则会报错两次信息不同。</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>matery主题优化</title>
      <link href="2020/10249075.html"/>
      <url>2020/10249075.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="matery主题的优化："><a href="#matery主题的优化：" class="headerlink" title="matery主题的优化："></a>matery主题的优化：</h1><blockquote><p>这一部分是我花的时间最长，但是为了把网站做的好很值，通过这一步也更好的了解了hexo的运行方式。这部分将只包括我选用的功能，试了好多，有些功能很鸡肋或者不是很好看。被我抛弃了。      </p></blockquote><h2 id="1-matery主题下载："><a href="#1-matery主题下载：" class="headerlink" title="1.matery主题下载："></a>1.matery主题下载：</h2><p> <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">主题下载</a><br> 解压后替换hexoblog下theme文件夹里的那个文件夹整体替换。</p><h2 id="2-主题优化"><a href="#2-主题优化" class="headerlink" title="2. 主题优化"></a>2. 主题优化</h2><h3 id="2-1-切换主题"><a href="#2-1-切换主题" class="headerlink" title="2.1 切换主题"></a>2.1 切换主题</h3><p>修改 Hexo 根目录下的 _config.yml 的 theme 的值：<code>theme: hexo-theme-matery</code>同时修改两个 <code>per_page</code> 的分页条数值为 6 的倍数，如：12、18 等，这样文章列表在各个屏幕（电脑，手机，pad）下都能较好的显示。  </p><h3 id="2-2-新建一些页面"><a href="#2-2-新建一些页面" class="headerlink" title="2.2 新建一些页面"></a>2.2 新建一些页面</h3><p>在根目录hexoblog下git bash here 依次输入下列命令  </p><pre><code>hexo new page "categories"hexo new page "tags"  hexo new page "about"  hexo new page "friends"  hexo new page "contact"  </code></pre><blockquote><p>网上教程一般都没有提到最后一个这会导致一个问题就是你的留言板页面打不开404，我当时真的搞了好久通过后我自己新加一个页面个人常用网站才解决  </p></blockquote><p>然后依次在hexoblog/source/tags(/categorite/about/friends/contact)/index.md 补充以下内容  </p><pre><code>type: "tags"  layout: "tags"     type: "categories"  layout: "categories"  type: "about"  layout: "about"  type: "friends"  layout: "friends"   type: "contact"  layout: "contact"  </code></pre><p>如/source/tags/index.md</p><pre><code>---  title: tags   date: 2018-09-30 18:23:38  type: "tags"  layout: "tags"  --- </code></pre><p>其中启用友情链接还需要在 source 目录下新建 _data 目录，在 _data 目录中新建 friends.json (新建一个文本文件txt连带后缀重命名修改就好，提示确认就好) 文件，文件内容如下所示：</p><pre><code>[{    "avatar": "http://hesifan.top/medias/avatar.jpg",    "name": "凡尘纪",    "introduction": "念念不忘 必有回响",    "url": "http://hesifan.top/",    "title": "前去参观"}, {    "avatar": "https://wiki.hyperledger.org/download/attachments/2392069/fabric?version=1&amp;modificationDate=1540928132000&amp;api=v2",    "name": "Fabric",    "introduction": "A Blockchain Platform for the Enterprise",    "url": "https://hyperledger-fabric.readthedocs.io/en/master/",    "title": "前去学习"}, {    "avatar": "https://www.bootcdn.cn/assets/img/maoyun.svg",    "name": "BootCDN",    "introduction": "稳定、快速、免费的前端开源项目 CDN 加速服务。",    "url": "https://www.bootcdn.cn/",    "title": "前去加速"}]  </code></pre><h3 id="2-3代码高亮"><a href="#2-3代码高亮" class="headerlink" title="2.3代码高亮"></a>2.3代码高亮</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 hexo-prism-plugin 的 Hexo 插件来做代码高亮，安装命令如下：  </p><pre><code>npm i -S hexo-prism-plugin  </code></pre><p>然后，修改 Hexo 根目录下 _config.yml 文件中 highlight.enable 的值为 false，并新增 prism 插件相关的配置，主要配置如下：  </p><pre><code>highlight:  enable: falseprism_plugin:  mode: 'preprocess' #realtime/preprocess  theme: 'tomorrow'  line_number: false    # default false  custom_css:</code></pre><h3 id="2-4-搜索"><a href="#2-4-搜索" class="headerlink" title="2.4 搜索"></a>2.4 搜索</h3><p>本主题中还使用到了 hexo-generator-search 的 Hexo 插件来做内容搜索，安装命令如下：  </p><pre><code>npm install hexo-generator-search --save</code></pre><p>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：  </p><pre><code>search:  path: search.xml  field: post   </code></pre><h3 id="2-5-修改页脚"><a href="#2-5-修改页脚" class="headerlink" title="2.5 修改页脚"></a>2.5 修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 /layout/_partial/footer.ejs 文件中，包括站点、使用的主题、访问量等。  </p><h3 id="2-6-修改社交链接"><a href="#2-6-修改社交链接" class="headerlink" title="2.6 修改社交链接"></a>2.6 修改社交链接</h3><p>修改社交链接<br>在主题的 _config.yml 文件中，默认支持 QQ、GitHub 和邮箱的配置，可以在主题文件的 /layout/_partial/social-link.ejs 文件中，新增、修改需要的社交链接地址，增加链接如B站可参考如下代码：  </p><pre><code>&lt;a href="https://space.bilibili.com/602389627" class="tooltipped" target="_blank" data-tooltip="访问我的B站" data-position="top" data-delay="50"&gt;      &lt;i class="fa fa-github"&gt;&lt;/i&gt;&lt;/a&gt;</code></pre><blockquote><p>这是我的B站个人空间你可以换成你自己的  </p></blockquote><h3 id="2-7-修改打赏的二维码图片"><a href="#2-7-修改打赏的二维码图片" class="headerlink" title="2.7 修改打赏的二维码图片"></a>2.7 修改打赏的二维码图片</h3><p>在主题文件的 source/medias/reward 文件中，可以替换成你的的微信和支付宝的打赏二维码图片。</p><blockquote><p>特别注意修改前查看该图片信息确保你替换的图片和该图一样大小尺寸名称，建议使用ps修改，后面所有对图片的改动都是如此，不再赘叙  </p></blockquote><h3 id="2-8文章链接转静态短地址"><a href="#2-8文章链接转静态短地址" class="headerlink" title="2.8文章链接转静态短地址"></a>2.8文章链接转静态短地址</h3><p>如果文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 SEO，且 gitment 评论对中文链接也不支持。我们可以用 hexo-permalink-pinyin Hexo 插件生成文章时生成中文拼音的永久链接，或者用hexo-abbrlink 生成静态文章链接。以下结合hexo-abbrlink生成类似 /yyyy/mmdd+随机数.html 的文章链接地址。</p><p>安装命令如下：  </p><pre><code>npm install hexo-abbrlink --save  </code></pre><p>在 Hexo 根目录下的 _config.yml 文件中，修改 permalink: ，并在文件末尾新增 abbrlink:配置项：  </p><pre><code>permalink: :year/:month:day:abbrlink.htmlabbrlink:   alg: crc16 #算法选项：crc16丨crc32  rep: dec #输出进制：dec为十进制，hex为十六进制</code></pre><h3 id="2-9-文章字数统计插件"><a href="#2-9-文章字数统计插件" class="headerlink" title="2.9 文章字数统计插件"></a>2.9 文章字数统计插件</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 hexo-wordcount插件。</p><p>安装命令如下：  </p><pre><code>npm i --save hexo-wordcount  </code></pre><p>然后只需在本主题下的 _config.yml 文件中，激活以下配置项即可：  </p><pre><code>wordCount:  enable: false # 将这个值设置为 true 即可.  postWordCount: true  min2read: true  totalCount: true  </code></pre><blockquote><p>注意是主题文件夹里的-ymal文件  </p></blockquote><h3 id="2-10自定制修改"><a href="#2-10自定制修改" class="headerlink" title="2.10自定制修改"></a>2.10自定制修改</h3><p>在本主题的 _config.yml 中可以修改部分自定义信息，有以下几个部分：<br>菜单<br>我的梦想<br>首页的音乐播放器和视频播放器配置<br>是否显示<br>推荐文章名称和按钮配置<br>favicon 和 Logo<br>个人信息<br>TOC 目录<br>文章打赏信息<br>复制文章内容时追加版权信息<br>MathJax<br>文章字数统计、阅读时长<br>点击页面的’爱心’效果<br>我的项目<br>我的技能<br>我的相册<br>Gitalk、Gitment、Valine 和 disqus 评论配置<br>不蒜子统计和谷歌分析（Google Analytics）<br>默认特色图的集合当文章没有设置特色图时，本主题会根据文章标题的 hashcode 值取余，来选择展示对应的特色图  </p><h3 id="2-11-修改-banner-图和文章特色图"><a href="#2-11-修改-banner-图和文章特色图" class="headerlink" title="2.11 修改 banner 图和文章特色图"></a>2.11 修改 banner 图和文章特色图</h3><p>可以直接在 /source/medias/banner 文件夹中更换喜欢的 banner 图片，主题代码中是每天动态切换一张，只需 7 张即可。  </p><h3 id="2-12-增加看板娘官网地址配置：-https-www-npmjs-com-package-hexo-helper-live2d"><a href="#2-12-增加看板娘官网地址配置：-https-www-npmjs-com-package-hexo-helper-live2d" class="headerlink" title="2.12 [增加看板娘官网地址配置：]  https://www.npmjs.com/package/hexo-helper-live2d"></a>2.12 [增加看板娘官网地址配置：]  <a href="https://www.npmjs.com/package/hexo-helper-live2d">https://www.npmjs.com/package/hexo-helper-live2d</a></h3><p>1)首先检查博客主目录下面的 package.json里是否有<br>“hexo-helper-live2d”: “^3.0.3”,依赖，有的话可以先卸载<br>使用命令：  </p><pre><code>npm uninstall hexo-helper-live2d     </code></pre><p>2)之后再安装：  </p><pre><code>npm install --save hexo-helper-live2d  </code></pre><blockquote><p>注意：命令都是在你的博客主目录执行   </p></blockquote><p>3)安装完成之后在package.json会看到安装的model<br>下载各种动画model：<br>[地址]<a href="https://github.com/xiazeyu/live2d-widget-models.git">https://github.com/xiazeyu/live2d-widget-models.git</a> </p><p>4)下载好之后将packages里的所有动画模板拷贝到博客的node_modules目录里<br>5)配置博客站点配置文件，_config.yml  </p><pre><code>live2d:  enable: true  pluginModelPath: assets/  model:    use: live2d-widget-model-epsilon2_1  #模板目录，在node_modules里  display:    position: right    width: 150     height: 300  mobile:    show: false  #是否在手机进行显示</code></pre><h3 id="2-13-新建文章模板修改"><a href="#2-13-新建文章模板修改" class="headerlink" title="2.13 新建文章模板修改"></a>2.13 新建文章模板修改</h3><p>首先为了新建文章方便，我们可以修改一下文章模板，可以将/scaffolds/post.md修改为如下代码：</p><pre><code>---   title: {{ title }}   date: {{ date }}  author:   img:   coverImg:  top: false   cover: false   toc: true   mathjax: false   password:   summary:   keywords:   tags:   categories:  ---</code></pre><h3 id="2-14-关闭首页颜色变换"><a href="#2-14-关闭首页颜色变换" class="headerlink" title="2.14 关闭首页颜色变换"></a>2.14 关闭首页颜色变换</h3><p>进入主题文件的 /source/css/matery.css文件中，搜索 rainbow来关闭颜色变换：  </p><pre><code>@-webkit-keyframes rainbow {   /* 动态切换背景颜色.即滤镜颜色，不想要可以全部注释，或者换成你喜欢的颜色 */ } @keyframes rainbow {    /* 动态切换背景颜色.，不想要可以全部注释，或者换成你喜欢的颜色 */}  </code></pre><h3 id="2-15-markdown书写文章用"><a href="#2-15-markdown书写文章用" class="headerlink" title="2.15 markdown书写文章用"></a>2.15 markdown书写文章用</h3><p>1)下载markdown安装包<br>[点我下载]<a href="http://editor.md.ipandao.com/">http://editor.md.ipandao.com/</a> 下载完成之后是一个压缩包，解压。<br>2)移植文件:  </p><ul><li>将压缩包解压之后放到 主题文件夹的source-&gt;libs目录中。可以将文件夹定改为editorMd   </li><li> 新建一个新的页面。在博客站点目录下新建一个MyMarkdown文件夹，并在文件夹下新建index.md文件。将下面的代码复制到index.md文件夹中。</li></ul><pre><code>---title: editor.mddate: 2020-02-16 11:20:03type: "MyMarkdown"layout: "MyMarkdown"---  </code></pre><p>3)导入editor的css和js<br>打开主题目录下的_config.yml文件，将editor的js文件和CSS写入，如下<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3hpYW9zaGlkaS1odWIvUGljR08vcGljdHVyZS9ta2Q2LnBuZw?x-oss-process=image/format,png#pic_center"><br>4)新建MyMarkdown.ejs文件<br>在主题文件夹下的layout文件夹中新建MyMarkdown.ejs文件。将下列代码复制到MyMarkdown.ejs文件中。  </p><pre><code>&lt;link rel="stylesheet" href="&lt;%- theme.libs.css.editormdCss %&gt;"&gt;&lt;style type="text/css"&gt;    /* don't remove. */    .page-cover {        /* height: 75vh; */        height: 940px;    }    .editormd {      top: 76px;    }    pre {      padding: 0;    }    .editormd-menu &gt; li.divider {      overflow: inherit;       padding: 5px 0px;    }    header .nav-transparent {    /*修改当行兰样式*/        background-image: linear-gradient(to right, #bf30a3 0%, #0f9d58 100%);    }    .editormd-form input[type="text"],     .editormd-form input[type="number"] {        height: 15px;        margin: 0px;        font-size: 14px;    }    .editormd-form input[type="text"] {        display: inline-block;        width: 246px;    }    .editormd-dialog-container label {      font-size: 14px;      color: #444;  }    .editormd-dialog-container select {      display: inline-block;      background-color: rgba(255,255,255,0.9);      width: 182px;      border-radius: 2px;      height: 25px;  }&lt;/style&gt;&lt;div class="pd-header page-cover"&gt;  &lt;div class="editormd" id="my-editormd"&gt;    &lt;textarea style="display:none;"&gt;&lt;/textarea&gt;  &lt;/div&gt;&lt;/div&gt;&lt;script src="&lt;%- theme.libs.js.jquery %&gt;"&gt;&lt;/script&gt;&lt;script src="&lt;%- theme.libs.js.editormdJs %&gt;"&gt;&lt;/script&gt;&lt;script  type="text/javascript"&gt;  var myEditor;  $(function() {        myEditor = editormd("my-editormd", {        width   : "98%",        height  : 840,        syncScrolling : "single",        path    : "/libs/editorMd/lib/",       // theme: "dark",      //  previewTheme: "dark",      //  editorTheme: "pastel-on-dark",        markdown: '',        codeFold: true,        emoji: true,        taskList: true,        tocm: true,         // Using [TOCM]        tex: true,                   // 开启科学公式TeX语言支持，默认关闭        flowChart: true,             // 开启流程图支持，默认关闭        sequenceDiagram: true,       // 开启时序/序列图支持，默认关闭,        htmlDecode : "style,script,iframe|on*",            // 开启 HTML 标签解析，为了安全性，默认不开启       });  });&lt;/script&gt;  </code></pre><h3 id="2-16hexo安装插件hexo-admin"><a href="#2-16hexo安装插件hexo-admin" class="headerlink" title="2.16hexo安装插件hexo-admin"></a>2.16hexo安装插件hexo-admin</h3><blockquote><p>hexo使用编辑文章时，若用其原生方式，则不便利，还好官网提供了一款插件hexo-admin界面化了markdown编辑器，只需要访问：<a href="http://127.0.0.1:4000/admin">http://127.0.0.1:4000/admin</a> 即可方便快捷的进行博文编辑了，  </p></blockquote><p>1)安装hexo-admin插件<code>npm install --save hexo-admin</code><br>2) 启动访问<code>hexo  s</code><br><a href="http://127.0.0.1:4000/admin">http://127.0.0.1:4000/admin</a>   </p><h3 id="2-17-Hexo添加博客导航页"><a href="#2-17-Hexo添加博客导航页" class="headerlink" title="2.17 Hexo添加博客导航页"></a>2.17 Hexo添加博客导航页</h3><p>1)新建页面，执行下面的命令   </p><pre><code>hexo new page navigate  </code></pre><p>2)修改 navigate 目录下的 index.md 的格式  </p><pre><code>---title: 个人常用网站date:  2020-10-09 11:19:14  type: "navigate"layout: "navigate"   ---  </code></pre><p>3)在主题配置文件_config.yml中添加个人常用网站  </p><pre><code>  导航:    url: /navigate    icon: fas fa-location-arrow  </code></pre><p>4)在 matery/layout 下新建 navigate.ejs</p><pre><code> &lt;div class="navi-height bg-cover pd-header "&gt;     &lt;div class=" link-box container"&gt;         &lt;!-- 搜索框 --&gt;         &lt;div class="baidu baidu-2 large-screen"&gt;             &lt;form name="f" action="https://www.baidu.com/" target="_blank"&gt;                  &lt;div id="Select-2"&gt;                      &lt;div class="Select-box-2" id="baidu"&gt;                          &lt;ul style="height: 46px;"&gt;                             &lt;li class="this_s"&gt;百 · 度&lt;/li&gt;                             &lt;li class="bing_s"&gt;必 · 应&lt;/li&gt;                             &lt;li class="google_s"&gt;谷 · 歌&lt;/li&gt;                             &lt;li class="baidu_s"&gt;百 · 度&lt;/li&gt;                          &lt;/ul&gt;                      &lt;/div&gt; &lt;input name="wd" id="kw-2" maxlength="100" autocomplete="off" type="text"&gt;                  &lt;/div&gt;                  &lt;div class="qingkong" id="qingkong" title="清 · 空" style="display: none;"&gt;x&lt;/div&gt; &lt;input value="搜 · 索"                      id="su-2" type="submit"&gt;                  &lt;ul class="keylist"&gt;&lt;/ul&gt;              &lt;/form&gt;          &lt;/div&gt; &lt;!-- 链接 --&gt;         &lt;div class="row tags-posts "&gt;              &lt;div class="col s12 m6 l4 friend-div" data-aos="zoom-in-up"&gt;                  &lt;div class="card"&gt;                      &lt;div class="jj-list-tit"&gt;娱乐 · 影视&lt;/div&gt;                      &lt;ul class="jj-list-con"&gt;                           &lt;li&gt;&lt;a href="https:pixiv.net" class="link-3" target="_blank"&gt;Pixiv&lt;/a&gt;&lt;/li&gt;                           &lt;li&gt;&lt;a href="https://www.bilibili.com/" class="link-3" target="_blank"&gt;哔哩哔哩&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://www.acfun.cn/" class="link-3" target="_blank"&gt;ACfun&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://www.spotify.com/" class="link-3" target="_blank"&gt;Spotify&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://awbw.amarriner.com/" class="link-3" target="_blank"&gt;AWBW&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href=" https://music.163.com/" class="link-3" target="_blank"&gt;网易云音乐&lt;/a&gt;&lt;/li&gt;                     &lt;/ul&gt;                  &lt;/div&gt;              &lt;/div&gt;              &lt;div class="col s12 m6 l4 friend-div" data-aos="zoom-in-up"&gt;                  &lt;div class="card"&gt;                      &lt;div class="jj-list-tit"&gt;社区 · Code&lt;/div&gt;                      &lt;ul class="jj-list-con"&gt;                          &lt;li&gt;&lt;a href="https://github.com/" class="link-3" target="_blank"&gt;GitHub&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://coding.net/" class="link-3" target="_blank"&gt;Coding&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://juejin.im/" class="link-3" target="_blank"&gt;掘金&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://gitee.com/" class="link-3" target="_blank"&gt;码云&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://www.v2ex.com/" class="link-3" target="_blank"&gt;V2EX&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://www.jianshu.com/" class="link-3" target="_blank"&gt;简书&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://www.52pojie.cn/" class="link-3" target="_blank"&gt;吾爱破解&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://segmentfault.com/" class="link-3" target="_blank"&gt;思否&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://cloud.tencent.com/developer/" class="link-3" target="_blank"&gt;云+社区&lt;/a&gt;&lt;/li&gt;                      &lt;/ul&gt;                  &lt;/div&gt;              &lt;/div&gt;              &lt;div class="col s12 m6 l4 friend-div" data-aos="zoom-in-up"&gt;                  &lt;div class="card"&gt;                      &lt;div class="jj-list-tit"&gt;图片处理&lt;/div&gt;                      &lt;ul class="jj-list-con"&gt;                          &lt;li&gt;&lt;a href="https://tinypng.com/" class="link-3" target="_blank"&gt;TingPNG&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://www.upyun.com/webp" class="link-3" target="_blank"&gt;又拍云Webp&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://www.iconfont.cn/" class="link-3" target="_blank"&gt;IconFont&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://fontawesome.com/" class="link-3" target="_blank"&gt;AweSome&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://wallhaven.cc/" class="link-3" target="_blank"&gt;超清壁纸&lt;/a&gt;&lt;/li&gt;                      &lt;/ul&gt;                  &lt;/div&gt;              &lt;/div&gt;              &lt;div class="col s12 m6 l4 friend-div" data-aos="zoom-in-up"&gt;                  &lt;div class="card"&gt; &lt;div class="jj-list-tit"&gt;实用 · 工具&lt;/div&gt;                  &lt;ul class="jj-list-con"&gt;                      &lt;li&gt;&lt;a href="https://mdnice.com/" class="link-3" target="_blank"&gt;Nice编辑器&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://www.processon.com/" class="link-3" target="_blank"&gt;思维导图&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://cli.im/" class="link-3" target="_blank"&gt;二维码&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://my.openwrite.cn/" class="link-3" target="_blank"&gt;OW分发&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="https://www.guidgen.com/" class="link-3" target="_blank"&gt;GUID在线生成&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://console.upyun.com/purge/purge_url/" class="link-3" target="_blank"&gt;又拍云刷新网站&lt;/a&gt;&lt;/li&gt;                  &lt;/ul&gt;              &lt;/div&gt;          &lt;/div&gt;          &lt;div class="col s12 m6 l4 friend-div" data-aos="zoom-in-up"&gt;              &lt;div class="card"&gt;                  &lt;div class="jj-list-tit"&gt;编程 · 学习&lt;/div&gt;                  &lt;ul class="jj-list-con"&gt;                      &lt;li&gt;&lt;a href="https://www.oschina.net/" class="link-3" target="_blank"&gt;开源中国&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://htmldog.com/" class="link-3" target="_blank"&gt;HTML狗&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://www.icourse163.org/" class="link-3" target="_blank"&gt;中国大学慕课&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://www.imooc.com/" class="link-3" target="_blank"&gt;慕课网&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="http://www.wxapp-union.com/" class="link-3" target="_blank"&gt;小程序&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://blog.51cto.com/" class="link-3" target="_blank"&gt;51CTO&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://www.shiyanlou.com/library/" class="link-3" target="_blank"&gt;实验楼&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://spring.io/" class="link-3" target="_blank"&gt;Spring&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://blog.csdn.net/" class="link-3" target="_blank"&gt;csdn&lt;/a&gt;&lt;/li&gt;                 &lt;/ul&gt;              &lt;/div&gt;          &lt;/div&gt;          &lt;div class="col s12 m6 l4 friend-div" data-aos="zoom-in-up"&gt;              &lt;div class="card"&gt;                   &lt;div class="jj-list-tit"&gt;资讯 · 趋势&lt;/div&gt;                   &lt;ul class="jj-list-con"&gt;                       &lt;li&gt;&lt;a href="https://www.huxiu.com/" class="link-3" target="_blank"&gt;虎嗅&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="https://insights.stackoverflow.com/" class="link-3" target="_blank"&gt;技术调查&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="http://www.asciiworld.com/" class="link-3" target="_blank"&gt;摸鱼&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="https://sspai.com/" class="link-3" target="_blank"&gt;少数派&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="https://zh.wikihow.com/" class="link-3" target="_blank"&gt;WikeHom&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="https://www.awesomes.cn/rank?sort=hot" class="link-3" target="_blank"&gt;前端趋势&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="https://github-trending.com/" class="link-3" target="_blank"&gt;GitHub趋势&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.tiobe.com/" class="link-3" target="_blank"&gt;编程趋势&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="https://trends.google.com/" class="link-3" target="_blank"&gt;Google趋势&lt;/a&gt;&lt;/li&gt;                   &lt;/ul&gt;               &lt;/div&gt;           &lt;/div&gt;           &lt;div class="col s12 m6 l4 friend-div" data-aos="zoom-in-up"&gt;               &lt;div class="card"&gt;                   &lt;div class="jj-list-tit"&gt;常用· 其他&lt;/div&gt;                   &lt;ul class="jj-list-con"&gt;                         &lt;li&gt;&lt;a href="https://www.qvdv.com/tools/qvdv-guid.html" class="link-3" target="_blank"&gt;在线工具&lt;/a&gt;                       &lt;li&gt;&lt;a href="http://zhongguose.com/" class="link-3" target="_blank"&gt;中国色&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="https://opensource.builders/" class="link-3" target="_blank"&gt;OpenSource&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="https://cloud.tencent.com/" class="link-3" target="_blank"&gt;腾讯云&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://www.leancloud.cn/" class="link-3" target="_blank"&gt;leancloud&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="http://127.0.0.1:4000/admin/" class="link-3" target="_blank"&gt;管理&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://www.natfrp.com/user/" class="link-3" target="_blank"&gt;Sakura&lt;/a&gt;&lt;/li&gt;                  &lt;/ul&gt;               &lt;/div&gt;           &lt;/div&gt;       &lt;/div&gt;       &lt;script&gt; /*选择搜索引擎*/ $('.Select-box ul').hover(function () { $(this).css('height', 'auto') }, function () { $(this).css('height', '40px') }); $('.Select-box-2 ul').hover(function () { $(this).css('height', 'auto') }, function () { $(this).css('height', '46px') }); $('.Select-box li').click(function () { var _tihs = $(this).attr('class'); var _html = $(this).html(); if (_tihs == 'baidu_s') { _tihs = 'https://www.baidu.com/s'; _name = 'wd'; } if (_tihs == 'google_s') { _tihs = 'https://www.google.com/search'; _name = 'q'; } if (_tihs == 'bing_s') { _tihs = 'https://www.bing.com/search'; _name = 'q'; } $('.baidu form').attr('action', _tihs); $('.this_s').html(_html); $('#kw').attr('name', _name); $('.Select-box ul').css('height', '40px') }); $('.Select-box-2 li').click(function () { var _tihs = $(this).attr('class'); var _html = $(this).html(); if (_tihs == 'baidu_s') { _tihs = 'https://www.baidu.com/s'; _name = 'wd'; } if (_tihs == 'google_s') { _tihs = 'https://www.google.com/search'; _name = 'q'; } if (_tihs == 'bing_s') { _tihs = 'https://www.bing.com/search'; _name = 'q'; } $('.baidu form').attr('action', _tihs); $('.this_s').html(_html); $('#kw-2').attr('name', _name); $('.Select-box-2 ul').css('height', '48px') }); //清空输入框内容 $('.qingkong').click(function () { cls(); $(this).css('display', 'none') }); function cls() { var sum = 0; var t = document.getElementsByTagName("INPUT"); for (var i = 0; i &lt; t.length; i++) { if (t[i].type == 'text') { ++sum; t[i].value = "";//清空 } } } //清空输入框按钮的显示和隐藏 function if_btn() { var btn_obj = document.getElementById("kw") || document.getElementById("kw-2"); var cls_btn = document.getElementById("qingkong"); var btn_obj_val; var times; //当元素获得焦点时 if (btn_obj == '' || btn_obj == null) { return false; //如果没有找到这个元素，则将函数返回，不继续执行 } btn_obj.onfocus = function () { times = setInterval(function () { btn_obj_val = btn_obj.value; if (btn_obj_val != 0) { cls_btn.style.display = "block"; } else { cls_btn.style.display = "none"; } }, 200); } //元素失去焦点时 btn_obj.onblur = function () { clearInterval(times); } } &lt;/script&gt;   &lt;/div&gt; &lt;/div&gt; &lt;style&gt;     * {         margin: 0;         padding: 0;         font-family: "微软雅黑"     }     ul,li,h1,h2,h3,h4,h5,h6,p,form,dl,dt,dd {         margin: 0px;         padding: 0px;         font-size: 14px;         font-weight: normal;     }     img {         border-style: none;     }         li {         list-style: none;         float: left     }         a {         text-decoration: none     }     .card {        background-color: rgba(25, 240, 229, 0);        width: 96%;        margin-left: 2%      }      .baidu {          float: left;          margin-left: 100px;     }     .baidu form {         position: relative     }     .Select-box ul {         height: 40px;         position: absolute;         left: -1px;         top: 0px;         z-index: 9999;         background: #FFF;         border: 1px solid #ccc;         border-top: none;         overflow: hidden     }     .Select-box li {         width: 60px;         line-height: 40px;         font-size: 14px;         color: #484848;         border: 0;         cursor:         pointer;     }     .Select-box li:hover {         background: #3385ff;         color: #FFF;     }     .Select-box .this_s {         color: #317ef3;     }     .Select-box .this_s:hover {         background: #FFF;         color: #317ef3;        }     .qingkong {         position: absolute;         right: 120px;         top: 12px;         width: 18px;         height: 18px;        background: rgba(0, 0, 0, 0.1);         border-radius: 18px;         line-height: 16px;         color: #666666;         cursor: pointer;         text-align: center;         font-size: 14px;         display: none;     }     .qingkong:hover {        background: rgba(0, 0, 0, 0.2);     }     .qingkong:active {         background: rgba(0, 0, 0, 0.3);            }     .baidu-2 {         width: 100%;         height: 110px;         margin: 0 auto;         background: none;         padding-top: 50px;     }     .baidu-2 form {         width: 520px;         margin: 0 auto;     }     .baidu-2 input {         padding: 13px 8px;         opacity: 0.9;         font-size: 15px;     }     #Select-2 {         float: left;     }     .Select-box-2 {         text-align: center;         float: left;         position: relative;     }     .Select-box-2 ul {         height: 46px;         position: absolute;         left: 0px;         top: 1px;         z-index: 9999;         background: rgba(255, 255, 255, 0.9);         border: 1px solid #ccc; border-top: none;         overflow: hidden     }     .Select-box-2 li {         width: 60px;         line-height: 46px;         font-size: 15px;         color: #484848;         border: 0;         cursor: pointer;     }     .Select-box-2 li:hover {         background: #3385ff;         color: #FFF;     }     .Select-box-2 .this_s {         color: #317ef3;     }     .Select-box-2 .this_s:hover {         background: none;         color: #317ef3;     }     #kw-2 {         width: 335px;         outline: 0;         border: 1px solid #ccc;         background: rgba(255, 255, 255, 0.2);         color: #000000;         padding-left: 70px;         font-weight: bold;     }     /*修改搜索框样式*/     #su-2 {         width: 90px;         background: blue;         border: none;         border-top: #3385ff 1px solid;         border-bottom: 1px solid #2d78f4;         color: #FFF;         cursor: pointer;        /*去轮廓阴影*/         outline: none;     }     /*光标移动到搜索框颜色*/     #su-2:hover {         background: blue;         border-bottom: 1px         solid blue;     }     #su-2:active {         background: blue;         box-shadow: inset 1px 1px 3px blue;         -webkit-box-shadow: inset 1px 1px 3px blue;     }     .jj-list-tit {         font-size: 16px;         line-height: 25px;         color: #ffffff;         width: 100%;         padding-left: 38.5%;     }     .jj-list-con {         overflow: hidden;         margin: 0 auto     }     /*控制网站列表间距*/     .jj-list-con li {         width: 31.333%;         margin: 1%;     }     .link-3 {         display: block;         background: rgba(0, 0, 0, .35);         color: #FFF;         font-size: 13px;         text-align: center;         line-height: 35px;         padding: 4px 0;         border-radius: 2px;         transition: all 0.2s     }     .link-3:hover {         background: rgba(0, 0, 0, .45);         font-size: 15px;         font-weight: bold     }     /*1栏 小于584*/     @media only screen and (max-width: 584px) {         .navi-height {             height: 1300px;         }         .link-box {             margin-top: 5%;         }         .large-screen {             display: none;         }     }     /* 2栏 大于584 小于993px */     @media only screen and (min-width: 584px) and (max-width: 993px) {         .navi-height {             height: 800px;         }         .link-box {             margin-top: 5%;         }         .large-screen {             display: none;         }     }     /*3栏 大于993px*/     @media only screen and (min-width: 993px) {         .navi-height {             position: absolute;             width: 100%;             height: 100%;         }     }     /* 隐藏footer */     .page-footer {         display: none;     } &lt;/style&gt; &lt;% if (theme.banner.enable) { %&gt; &lt;script&gt;     // 每天切换 banner 图. Switch banner image every day.     var bannerUrl = "&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for('/medias/banner/') %&gt;" + new Date().getDay() + '.jpg'; $('.bg-cover').css('background-image', 'url(' + bannerUrl + ')');     &lt;/script&gt;     &lt;% } else { %&gt;     &lt;script&gt;     $('.bg-cover').css('background-image', 'url(&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for('/medias/banner/0.jpg') %&gt;)'); &lt;/script&gt; &lt;% } %&gt;</code></pre><h3 id="2-18-Hexo-博客订阅文章通知功能"><a href="#2-18-Hexo-博客订阅文章通知功能" class="headerlink" title="2.18 Hexo 博客订阅文章通知功能"></a>2.18 Hexo 博客订阅文章通知功能</h3><p>进入站点根目录</p><pre><code>npm install hexo-web-push-notification --save </code></pre><p>编辑站点配置文件_config.yml</p><pre><code>webPushNotification:  webpushrKey: "your webpushr rest api key"  webpushrAuthToken: "your webpushr authorize token"  trackingCode: "AEGlpbdgvBCWXqXI6PtsUzobY7TLV9gwJU8bzMktrwfrSERg_xnLVbjpCw8x2GmFmi1ZcLTz0ni6OnX5MAwoM88"</code></pre><p> [注册账号]<a href="https://app.webpushr.com/signup">https://app.webpushr.com/signup</a></p><p>按照步骤操作<br>将第二步中所指的代码复制粘贴到你的 layout.ejs文件内,执行hexo clean&amp;&amp;hexo g&amp;&amp;hexo d部署即可！</p><p>部署之后可能会遇到无法正常发送通知的情况.</p><p>进入目录 node_modules/hexo-web-push-notification/index.js文件中第22行<code>'summary': util.stripHTML(newPost.excerpt)</code>,这里取值取的是<code>excerpt</code>，改成<code>summary</code>即可。</p><p>修改前</p><pre><code>jsonvar JSONFeed = {        'title': newPost.title,        'id': newPost.path,        'date_published': newPost.date.format('L'),        'summary': util.stripHTML(newPost.excerpt),        'url': newPost.permalink,        'tags': newPost.tags.data.map(function (v) { return v.name }),        'categories': newPost.categories.data.map(function (v) { return v.name })    }</code></pre><p>修改后</p><pre><code>jsonvar JSONFeed = {        'title': newPost.title,        'id': newPost.path,        'date_published': newPost.date.format('L'),        'summary': util.stripHTML(newPost.summary),        'url': newPost.permalink,        'tags': newPost.tags.data.map(function (v) { return v.name }),        'categories': newPost.categories.data.map(function (v) { return v.name })    }</code></pre>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo部署到本地</title>
      <link href="2020/102436325.html"/>
      <url>2020/102436325.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="hexo部署到本地"><a href="#hexo部署到本地" class="headerlink" title="hexo部署到本地"></a>hexo部署到本地</h1><h2 id="本地nodejs，淘宝云镜像，git环境搭建"><a href="#本地nodejs，淘宝云镜像，git环境搭建" class="headerlink" title="本地nodejs，淘宝云镜像，git环境搭建"></a>本地nodejs，淘宝云镜像，git环境搭建</h2><h3 id="1-nodejs搭建教程："><a href="#1-nodejs搭建教程：" class="headerlink" title="1.nodejs搭建教程："></a>1.nodejs搭建教程：</h3><h4 id="1-1下载："><a href="#1-1下载：" class="headerlink" title="1.1下载："></a>1.1下载：</h4><p>  下载地址：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a><br>  一般的Windows系统都选择.msi 64位安装。（.msi是自动安装比较方便）  </p><h4 id="1-2安装："><a href="#1-2安装：" class="headerlink" title="1.2安装："></a>1.2安装：</h4><p>  正常安装即可最好不要安装到C盘改个安装路径。  </p><h4 id="1-3查看安装版本："><a href="#1-3查看安装版本：" class="headerlink" title="1.3查看安装版本："></a>1.3查看安装版本：</h4><p>  安装完成后打开终端win+R 输入cmd回车<br>  输入命令<code>node-v</code>查看版本号，出现版本号，说明你的电脑上已经有nodejs，安装成功！  </p><h4 id="1-4配置nodejs环境："><a href="#1-4配置nodejs环境：" class="headerlink" title="1.4配置nodejs环境："></a>1.4配置nodejs环境：</h4><blockquote><p>NodeJS和NPM安装好了以后并不能直接使用，默认情况下，NPM安装的模块并不会安装到NodeJS的程序目录，比如我们安装的时候设置的D盘，“D:\Program Files\nodejs”，而我们使用npm安装一个cluster模块他会出现在C盘默认的路径下面，所以，如果我们不修改npm的模块安装目录，那么它默认情况下都会安装到这里，随着你测试开发各种不同的项目，安装的模块越来越多，这个文件夹的体积就会越来越大，直到占满你的C盘。(网上的说法我觉得只运行hexo不会)所以我们要修改npm的配置。  </p></blockquote><p>  (1).在nodejs文件夹下，创建两个为文件夹： <code>node_global</code>;<code>node_cecal</code><br>这是用来放安装过程的缓存文件以及最终的模块配置位置。<br>  (2).使用下面命令将npm的全局模块目录和缓存目录配置到我们刚才创建的那两个目录<br><code>npm config set prefix "node_global文件的路径"</code><br><code>npm config set cache "node_cache的文件路径"</code><br>例如：<code>npm config set prefix “D:\Program Files\nodejs\node_global”</code><br>(还在win+R调出来的黑色命令框里，输入你自己保存的路径可以在文件夹上复制路径)<br>(3).高级系统设置——环境变量（上一步完成后要将node_modules文件夹移入node_global文件夹下，网上教程大多没有提到这步）<br>新增系统变量(右键此电脑图标属性高级系统设置里面环境变量里面)：<br>变量名填：NODE_PATH<br>变量值填：（你自己的文件路径）<br><img src="https://img-blog.csdnimg.cn/20190530161206918.png" alt="系统变量"><br>将用户变量下的Path修改为<code>D:\Develop\nodejs\node_global 你自己的路径</code>   </p><h4 id="1-5修改完成后测试："><a href="#1-5修改完成后测试：" class="headerlink" title="1.5修改完成后测试："></a>1.5修改完成后测试：</h4><p>输入命令：node 回车——再输入 require(“cluster”)能正常使用没出现err这样的内容就算配置成功，网上教程有把“”打成‘’我用了之后显示没有这命令推测是他打错了。我给成”“结果成功了。到这里nodejs就配置好了。     </p><h3 id="2-淘宝云镜像："><a href="#2-淘宝云镜像：" class="headerlink" title="2.淘宝云镜像："></a>2.淘宝云镜像：</h3><blockquote><p>在国内使用npm下载东西可能会比较慢，若配置了淘宝云镜像就可通过国内渠道下载会快很多只需在下载命令前加一个c </p></blockquote><h4 id="2-1验证npm："><a href="#2-1验证npm：" class="headerlink" title="2.1验证npm："></a>2.1验证npm：</h4><p> win+R 先输入node再进行下面的操作<br> <code>npm -v</code><br> 出现版本号代表成功  </p><h4 id="2-2-先初始化项目的配置依赖清单："><a href="#2-2-先初始化项目的配置依赖清单：" class="headerlink" title="2.2 先初始化项目的配置依赖清单："></a>2.2 先初始化项目的配置依赖清单：</h4><p><code>npm init -y</code>    </p><h4 id="2-3-初始化后会有一个package-json文件，在当前的文件夹在我的电脑文件地址栏输入cmd进入命令符窗口，接下来就可以下载了"><a href="#2-3-初始化后会有一个package-json文件，在当前的文件夹在我的电脑文件地址栏输入cmd进入命令符窗口，接下来就可以下载了" class="headerlink" title="2.3 初始化后会有一个package.json文件，在当前的文件夹在我的电脑文件地址栏输入cmd进入命令符窗口，接下来就可以下载了"></a>2.3 初始化后会有一个package.json文件，在当前的文件夹在我的电脑文件地址栏输入cmd进入命令符窗口，接下来就可以下载了</h4><p>比如：下载一个<code>jquery</code><br><code>npm install jquery</code><br>执行完之后会生成一个node_modules文件<br>在里面找到jquery.js引入要用的项目中即可</p><pre><code>这是命令示例不用操作npm install xxx 把模块安装在当前项目中(node_modules)npm install xxx -g 把模块安装在全局环境中npm install xxx@1.0.0 安装制定版本 </code></pre><h4 id="2-4-npm使用国内淘宝镜像的方法："><a href="#2-4-npm使用国内淘宝镜像的方法：" class="headerlink" title="2.4 npm使用国内淘宝镜像的方法："></a>2.4 npm使用国内淘宝镜像的方法：</h4><p> 命令：</p><pre><code>npm config set registry https://registry.npm.taobao.org    npm config get registry   npm config get registry  </code></pre><p> <code>cnpm v</code>不报错就成功了  </p><p>  使用npm安装：  </p><pre><code>npm install -g cnpm --registry=https://registry.npm.taobao.org  </code></pre><h3 id="3-git的搭建："><a href="#3-git的搭建：" class="headerlink" title="3. git的搭建："></a>3. git的搭建：</h3><blockquote><p>注意了，像Git这种服务器在国外的东西，它的官网下载这个软件会非常慢，建议直接在百度上搜索git下载与安装，各种软件园都能直接快速下载，留意一下版本最好不要太旧就行。   </p></blockquote><pre><code>安装：  就按他推荐或者默认的安装即可  到这一步注意调整您的PATH环境选择第二个    </code></pre><h3 id="4-推荐一个编辑工具便于后面修改创建文件："><a href="#4-推荐一个编辑工具便于后面修改创建文件：" class="headerlink" title="4. 推荐一个编辑工具便于后面修改创建文件："></a>4. 推荐一个编辑工具便于后面修改创建文件：</h3><pre><code>notepad++ 可以在百度上搜索下在，我用的是这个当然可以用其他的。    </code></pre><h2 id="注册GitHub账号并创建仓库"><a href="#注册GitHub账号并创建仓库" class="headerlink" title="注册GitHub账号并创建仓库"></a>注册GitHub账号并创建仓库</h2><p>注册很简单，仓库你的GitHub用户名加github.io如：brqs.github.io  </p><h2 id="利用脚本快速搭建hexo博客"><a href="#利用脚本快速搭建hexo博客" class="headerlink" title="利用脚本快速搭建hexo博客"></a>利用脚本快速搭建hexo博客</h2><h3 id="1-下载-hexo-script-的安装脚本："><a href="#1-下载-hexo-script-的安装脚本：" class="headerlink" title="1. 下载[hexo-script]的安装脚本："></a>1. 下载[hexo-script]的安装脚本：</h3><p>  你只需要在某个目录下,右键打开git bash然后执行下面这条命令即可下载完成<br><code>curl -O https://cdn.jsdelivr.net/gh/kjhuanhao/hexo-script@master/install.sh</code><br>我们更建议直接在releases下载,选择最新版本,只需下载install.sh即可</p><p>  建议新建一个目录存放此安装脚本,最好是你想存放博客文件的地方.<br>如图:我创建了一个<img src="https://gblobscdn.gitbook.com/assets%2F-LlpfTEtpw-XHjloYx-t%2F-LluijETOwVdISk9cx63%2F-LlujpjLExHk7K73O-Gb%2F1.png?alt=media&amp;token=19632c44-33dd-4025-a8e5-2042e219ff98" alt="myblog">myblog文件夹,然后在此文件夹下右键打开git bash</p><p>  然后运行了下载命令,安装脚本(install.sh)就会下载在你的当前文件夹中<img src="https://gblobscdn.gitbook.com/assets%2F-LlpfTEtpw-XHjloYx-t%2F-Llujyttm0BWO_RMRg-2%2F-LlukgEwkesx8NRKmBdo%2F2.png?alt=media&amp;token=ec7c6fd6-108a-4161-a3d5-1a67438fa83d">  </p><h3 id="2-自动完成全部安装过程并生成博客文件"><a href="#2-自动完成全部安装过程并生成博客文件" class="headerlink" title="2.自动完成全部安装过程并生成博客文件:"></a>2.自动完成全部安装过程并生成博客文件:</h3><p>   hexo_win的使用<br>您需要在存放install.sh脚本的目录中,右键打开git bash运行以下命令:</p><p>  <code>source install.sh hexo_win</code>  </p><blockquote><p>提示:大约两分钟的时间,博客即可自动安装完成。有时候可能克隆不了脚本换时间段或者再试一次  </p></blockquote><p>   当您看到出现Please run hexo s to check it out!的提示,证明您已经安装成功,此时你可以运行hexo s然后查看你的博客  </p><pre><code>cd hexobloghexo s</code></pre><blockquote><p>注意:要先cd到hexoblog目录哦!执行以上命令即可，出现网址即为成功可复制到浏览器访问  </p></blockquote><h3 id="3-一键生成SSH秘钥：部署hexo博客的必要之物"><a href="#3-一键生成SSH秘钥：部署hexo博客的必要之物" class="headerlink" title="3.一键生成SSH秘钥：部署hexo博客的必要之物"></a>3.一键生成SSH秘钥：部署hexo博客的必要之物</h3><blockquote><p>git_ssh的使用您需要在存放install.sh脚本的目录中,右键打开git bash运行以下命令:<code>./install.sh git_ssh</code></p></blockquote><p>可以看到会有四条可执行命令,输入对应数字可以执行对应的命令</p><pre><code>1)Key2)SSH3)Verify-github4)Verify-coding</code></pre><p>1)Key 执行1后可以一键生成秘钥<br>如果你的电脑已经存在秘钥,程序将会自动退出</p><p>2)SSH 执行2后可以查看你电脑中已生成的秘钥]</p><p>3)Verify-github 执行3后可以检查秘钥是否配置github成功</p><p>4)Verify-coding 执行4后可以检查秘钥是否配置coding成功生成秘钥后别忘记将秘钥添加到账号里,否则秘钥不会配置成功。  </p><h3 id="4-使用ssh密匙连接："><a href="#4-使用ssh密匙连接：" class="headerlink" title="4.使用ssh密匙连接："></a>4.使用ssh密匙连接：</h3><h4 id="4-1"><a href="#4-1" class="headerlink" title="4.1"></a>4.1</h4><p>在C盘找到上一步生成的密匙文件右键用notepad++打开复制全选  </p><h4 id="4-2"><a href="#4-2" class="headerlink" title="4.2"></a>4.2</h4><p>在GitHub账户中添加你的公钥在account settings中左边菜单点击“ssh keys”再点击add ssh key 粘贴你的密钥即可再点击add key 就行了。  </p><h3 id="5up-sh的使用："><a href="#5up-sh的使用：" class="headerlink" title="5up.sh的使用："></a>5up.sh的使用：</h3><h4 id="5-1"><a href="#5-1" class="headerlink" title="5.1"></a>5.1</h4><p>您需要在存放install.sh脚本的目录（你自己创建的hexoblog文件夹的上一级文件夹）中,右键打开git bash运行以下命令:<br><code>source install.sh deploy</code>   </p><h4 id="5-2"><a href="#5-2" class="headerlink" title="5.2"></a>5.2</h4><p>需要将up.sh复制到hexoblog文件,也就是复制到你的博客根目录(hexoblog)下  </p><h4 id="5-3"><a href="#5-3" class="headerlink" title="5.3"></a>5.3</h4><p>然后在存放up.sh脚本的目录(hexoblog)中,右键打开git bash运行以下命令:<br><code>source up.sh</code>   </p><h3 id="6-部署博客必要的配置"><a href="#6-部署博客必要的配置" class="headerlink" title="6.部署博客必要的配置:"></a>6.部署博客必要的配置:</h3><h4 id="6-1"><a href="#6-1" class="headerlink" title="6.1"></a>6.1</h4><p>首先你需要用notepad++打开根目录配置文件_config.yml进行必要的修改。  </p><h4 id="6-2"><a href="#6-2" class="headerlink" title="6.2"></a>6.2</h4><p>找到deploy,它一般在最后一行,按照以下的格式修改即可  </p><pre><code>deploy:  type: git  repo: 这里填你的仓库地址,建议使用SSH地址,它是以git开头的  branch: master     </code></pre><blockquote><p>注意在hexo的配置文件中冒号后面一定有空格，在后续美化过程中可能会需自己修改或者添加。当他提示你缺少空格时可能并不准确在这位置前后去寻找哪里缺少空格慢慢找一定有地方不对。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何部署hexo博客：从零开始到搭建完整</title>
      <link href="2020/102461782.html"/>
      <url>2020/102461782.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>我也是一时兴起（主要就是闲的），最开始在b站看到一个教程视频然后就想自己去搭建一个虽然过程非常痛苦，但当我完全搭建好了之后，再想想确实又没什么困难的，拥有一个个人网站会有很多好处，便于别人认识了解你，面试简历也都会有所加分，我在搭建过程参考网上教程遇见许多坑，希望不要再掉坑里，（小声说我觉得掉到坑里才学到东西）所以决定自己写一篇教程。一是为了帮助同样有需要的你，二来自己下次搭建的时候也能参考，三是总结一下搭建过程中所学的知识。由于我本身也是小白，所以可能会有一些专业术语的错误见谅。  </p></blockquote><blockquote><p>长文警告：本文将包括本地部署hexo，hexo—matery主题美化，hexo部署到服务器，hexo seo优化，由于感觉文章太长观感不好，所以拆分了文章。  </p></blockquote><h1 id="hexo部署到本地"><a href="#hexo部署到本地" class="headerlink" title="hexo部署到本地"></a>hexo部署到本地</h1><h2 id="本地nodejs，淘宝云镜像，git环境搭建"><a href="#本地nodejs，淘宝云镜像，git环境搭建" class="headerlink" title="本地nodejs，淘宝云镜像，git环境搭建"></a>本地nodejs，淘宝云镜像，git环境搭建</h2><h3 id="1-nodejs搭建教程："><a href="#1-nodejs搭建教程：" class="headerlink" title="1.nodejs搭建教程："></a>1.nodejs搭建教程：</h3><h4 id="1-1下载："><a href="#1-1下载：" class="headerlink" title="1.1下载："></a>1.1下载：</h4><p>  下载地址：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a><br>  一般的Windows系统都选择.msi 64位安装。（.msi是自动安装比较方便）  </p><h4 id="1-2安装："><a href="#1-2安装：" class="headerlink" title="1.2安装："></a>1.2安装：</h4><p>  正常安装即可最好不要安装到C盘改个安装路径。  </p><h4 id="1-3查看安装版本："><a href="#1-3查看安装版本：" class="headerlink" title="1.3查看安装版本："></a>1.3查看安装版本：</h4><p>  安装完成后打开终端win+R 输入cmd回车<br>  输入命令<code>node-v</code>查看版本号，出现版本号，说明你的电脑上已经有nodejs，安装成功！  </p><h4 id="1-4配置nodejs环境："><a href="#1-4配置nodejs环境：" class="headerlink" title="1.4配置nodejs环境："></a>1.4配置nodejs环境：</h4><blockquote><p>NodeJS和NPM安装好了以后并不能直接使用，默认情况下，NPM安装的模块并不会安装到NodeJS的程序目录，比如我们安装的时候设置的D盘，“D:\Program Files\nodejs”，而我们使用npm安装一个cluster模块他会出现在C盘默认的路径下面，所以，如果我们不修改npm的模块安装目录，那么它默认情况下都会安装到这里，随着你测试开发各种不同的项目，安装的模块越来越多，这个文件夹的体积就会越来越大，直到占满你的C盘。(网上的说法我觉得只运行hexo不会)所以我们要修改npm的配置。  </p></blockquote><p>  (1).在nodejs文件夹下，创建两个为文件夹： <code>node_global</code>;<code>node_cecal</code><br>这是用来放安装过程的缓存文件以及最终的模块配置位置。<br>  (2).使用下面命令将npm的全局模块目录和缓存目录配置到我们刚才创建的那两个目录<br><code>npm config set prefix "node_global文件的路径"</code><br><code>npm config set cache "node_cache的文件路径"</code><br>例如：<code>npm config set prefix “D:\Program Files\nodejs\node_global”</code><br>(还在win+R调出来的黑色命令框里，输入你自己保存的路径可以在文件夹上复制路径)<br>(3).高级系统设置——环境变量（上一步完成后要将node_modules文件夹移入node_global文件夹下，网上教程大多没有提到这步）<br>新增系统变量(右键此电脑图标属性高级系统设置里面环境变量里面)：<br>变量名填：NODE_PATH<br>变量值填：（你自己的文件路径）<br><img src="https://img-blog.csdnimg.cn/20190530161206918.png" alt="系统变量"><br>将用户变量下的Path修改为<code>D:\Develop\nodejs\node_global 你自己的路径</code>   </p><h4 id="1-5修改完成后测试："><a href="#1-5修改完成后测试：" class="headerlink" title="1.5修改完成后测试："></a>1.5修改完成后测试：</h4><p>输入命令：node 回车——再输入 require(“cluster”)能正常使用没出现err这样的内容就算配置成功，网上教程有把“”打成‘’我用了之后显示没有这命令推测是他打错了。我给成”“结果成功了。到这里nodejs就配置好了。     </p><h3 id="2-淘宝云镜像："><a href="#2-淘宝云镜像：" class="headerlink" title="2.淘宝云镜像："></a>2.淘宝云镜像：</h3><blockquote><p>在国内使用npm下载东西可能会比较慢，若配置了淘宝云镜像就可通过国内渠道下载会快很多只需在下载命令前加一个c </p></blockquote><h4 id="2-1验证npm："><a href="#2-1验证npm：" class="headerlink" title="2.1验证npm："></a>2.1验证npm：</h4><p> win+R 先输入node再进行下面的操作<br> <code>npm -v</code><br> 出现版本号代表成功  </p><h4 id="2-2-先初始化项目的配置依赖清单："><a href="#2-2-先初始化项目的配置依赖清单：" class="headerlink" title="2.2 先初始化项目的配置依赖清单："></a>2.2 先初始化项目的配置依赖清单：</h4><p><code>npm init -y</code>    </p><h4 id="2-3-初始化后会有一个package-json文件，在当前的文件夹在我的电脑文件地址栏输入cmd进入命令符窗口，接下来就可以下载了"><a href="#2-3-初始化后会有一个package-json文件，在当前的文件夹在我的电脑文件地址栏输入cmd进入命令符窗口，接下来就可以下载了" class="headerlink" title="2.3 初始化后会有一个package.json文件，在当前的文件夹在我的电脑文件地址栏输入cmd进入命令符窗口，接下来就可以下载了"></a>2.3 初始化后会有一个package.json文件，在当前的文件夹在我的电脑文件地址栏输入cmd进入命令符窗口，接下来就可以下载了</h4><p>比如：下载一个<code>jquery</code><br><code>npm install jquery</code><br>执行完之后会生成一个node_modules文件<br>在里面找到jquery.js引入要用的项目中即可</p><pre><code>这是命令示例不用操作npm install xxx 把模块安装在当前项目中(node_modules)npm install xxx -g 把模块安装在全局环境中npm install xxx@1.0.0 安装制定版本 </code></pre><h4 id="2-4-npm使用国内淘宝镜像的方法："><a href="#2-4-npm使用国内淘宝镜像的方法：" class="headerlink" title="2.4 npm使用国内淘宝镜像的方法："></a>2.4 npm使用国内淘宝镜像的方法：</h4><p> 命令：</p><pre><code>npm config set registry https://registry.npm.taobao.org    npm config get registry   npm config get registry  </code></pre><p> <code>cnpm v</code>不报错就成功了  </p><p>  使用npm安装：  </p><pre><code>npm install -g cnpm --registry=https://registry.npm.taobao.org  </code></pre><h3 id="3-git的搭建："><a href="#3-git的搭建：" class="headerlink" title="3. git的搭建："></a>3. git的搭建：</h3><blockquote><p>注意了，像Git这种服务器在国外的东西，它的官网下载这个软件会非常慢，建议直接在百度上搜索git下载与安装，各种软件园都能直接快速下载，留意一下版本最好不要太旧就行。   </p></blockquote><pre><code>安装：  就按他推荐或者默认的安装即可  到这一步注意调整您的PATH环境选择第二个    </code></pre><h3 id="4-推荐一个编辑工具便于后面修改创建文件："><a href="#4-推荐一个编辑工具便于后面修改创建文件：" class="headerlink" title="4. 推荐一个编辑工具便于后面修改创建文件："></a>4. 推荐一个编辑工具便于后面修改创建文件：</h3><pre><code>notepad++ 可以在百度上搜索下在，我用的是这个当然可以用其他的。    </code></pre><h2 id="注册GitHub账号并创建仓库"><a href="#注册GitHub账号并创建仓库" class="headerlink" title="注册GitHub账号并创建仓库"></a>注册GitHub账号并创建仓库</h2><p>注册很简单，仓库你的GitHub用户名加github.io如：brqs.github.io  </p><h2 id="利用脚本快速搭建hexo博客"><a href="#利用脚本快速搭建hexo博客" class="headerlink" title="利用脚本快速搭建hexo博客"></a>利用脚本快速搭建hexo博客</h2><h3 id="1-下载-hexo-script-的安装脚本："><a href="#1-下载-hexo-script-的安装脚本：" class="headerlink" title="1. 下载[hexo-script]的安装脚本："></a>1. 下载[hexo-script]的安装脚本：</h3><p>  你只需要在某个目录下,右键打开git bash然后执行下面这条命令即可下载完成<br><code>curl -O https://cdn.jsdelivr.net/gh/kjhuanhao/hexo-script@master/install.sh</code><br>我们更建议直接在releases下载,选择最新版本,只需下载install.sh即可</p><p>  建议新建一个目录存放此安装脚本,最好是你想存放博客文件的地方.<br>如图:我创建了一个<img src="https://gblobscdn.gitbook.com/assets%2F-LlpfTEtpw-XHjloYx-t%2F-LluijETOwVdISk9cx63%2F-LlujpjLExHk7K73O-Gb%2F1.png?alt=media&amp;token=19632c44-33dd-4025-a8e5-2042e219ff98" alt="myblog">myblog文件夹,然后在此文件夹下右键打开git bash</p><p>  然后运行了下载命令,安装脚本(install.sh)就会下载在你的当前文件夹中<img src="https://gblobscdn.gitbook.com/assets%2F-LlpfTEtpw-XHjloYx-t%2F-Llujyttm0BWO_RMRg-2%2F-LlukgEwkesx8NRKmBdo%2F2.png?alt=media&amp;token=ec7c6fd6-108a-4161-a3d5-1a67438fa83d">  </p><h3 id="2-自动完成全部安装过程并生成博客文件"><a href="#2-自动完成全部安装过程并生成博客文件" class="headerlink" title="2.自动完成全部安装过程并生成博客文件:"></a>2.自动完成全部安装过程并生成博客文件:</h3><p>   hexo_win的使用<br>您需要在存放install.sh脚本的目录中,右键打开git bash运行以下命令:</p><p>  <code>source install.sh hexo_win</code>  </p><blockquote><p>提示:大约两分钟的时间,博客即可自动安装完成。有时候可能克隆不了脚本换时间段或者再试一次  </p></blockquote><p>   当您看到出现Please run hexo s to check it out!的提示,证明您已经安装成功,此时你可以运行hexo s然后查看你的博客  </p><pre><code>cd hexobloghexo s</code></pre><blockquote><p>注意:要先cd到hexoblog目录哦!执行以上命令即可，出现网址即为成功可复制到浏览器访问  </p></blockquote><h3 id="3-一键生成SSH秘钥：部署hexo博客的必要之物"><a href="#3-一键生成SSH秘钥：部署hexo博客的必要之物" class="headerlink" title="3.一键生成SSH秘钥：部署hexo博客的必要之物"></a>3.一键生成SSH秘钥：部署hexo博客的必要之物</h3><blockquote><p>git_ssh的使用您需要在存放install.sh脚本的目录中,右键打开git bash运行以下命令:<code>./install.sh git_ssh</code></p></blockquote><p>可以看到会有四条可执行命令,输入对应数字可以执行对应的命令</p><pre><code>1)Key2)SSH3)Verify-github4)Verify-coding</code></pre><p>1)Key 执行1后可以一键生成秘钥<br>如果你的电脑已经存在秘钥,程序将会自动退出</p><p>2)SSH 执行2后可以查看你电脑中已生成的秘钥]</p><p>3)Verify-github 执行3后可以检查秘钥是否配置github成功</p><p>4)Verify-coding 执行4后可以检查秘钥是否配置coding成功生成秘钥后别忘记将秘钥添加到账号里,否则秘钥不会配置成功。  </p><h3 id="4-使用ssh密匙连接："><a href="#4-使用ssh密匙连接：" class="headerlink" title="4.使用ssh密匙连接："></a>4.使用ssh密匙连接：</h3><h4 id="4-1"><a href="#4-1" class="headerlink" title="4.1"></a>4.1</h4><p>在C盘找到上一步生成的密匙文件右键用notepad++打开复制全选  </p><h4 id="4-2"><a href="#4-2" class="headerlink" title="4.2"></a>4.2</h4><p>在GitHub账户中添加你的公钥在account settings中左边菜单点击“ssh keys”再点击add ssh key 粘贴你的密钥即可再点击add key 就行了。  </p><h3 id="5up-sh的使用："><a href="#5up-sh的使用：" class="headerlink" title="5up.sh的使用："></a>5up.sh的使用：</h3><h4 id="5-1"><a href="#5-1" class="headerlink" title="5.1"></a>5.1</h4><p>您需要在存放install.sh脚本的目录（你自己创建的hexoblog文件夹的上一级文件夹）中,右键打开git bash运行以下命令:<br><code>source install.sh deploy</code>   </p><h4 id="5-2"><a href="#5-2" class="headerlink" title="5.2"></a>5.2</h4><p>需要将up.sh复制到hexoblog文件,也就是复制到你的博客根目录(hexoblog)下  </p><h4 id="5-3"><a href="#5-3" class="headerlink" title="5.3"></a>5.3</h4><p>然后在存放up.sh脚本的目录(hexoblog)中,右键打开git bash运行以下命令:<br><code>source up.sh</code>   </p><h3 id="6-部署博客必要的配置"><a href="#6-部署博客必要的配置" class="headerlink" title="6.部署博客必要的配置:"></a>6.部署博客必要的配置:</h3><h4 id="6-1"><a href="#6-1" class="headerlink" title="6.1"></a>6.1</h4><p>首先你需要用notepad++打开根目录配置文件_config.yml进行必要的修改。  </p><h4 id="6-2"><a href="#6-2" class="headerlink" title="6.2"></a>6.2</h4><p>找到deploy,它一般在最后一行,按照以下的格式修改即可  </p><pre><code>deploy:  type: git  repo: 这里填你的仓库地址,建议使用SSH地址,它是以git开头的  branch: master     </code></pre><blockquote><p>注意在hexo的配置文件中冒号后面一定有空格，在后续美化过程中可能会需自己修改或者添加。当他提示你缺少空格时可能并不准确在这位置前后去寻找哪里缺少空格慢慢找一定有地方不对。  </p></blockquote><h1 id="matery主题的优化："><a href="#matery主题的优化：" class="headerlink" title="matery主题的优化："></a>matery主题的优化：</h1><blockquote><p>这一部分是我花的时间最长，但是为了把网站做的好很值，通过这一步也更好的了解了hexo的运行方式。这部分将只包括我选用的功能，试了好多，有些功能很鸡肋或者不是很好看。被我抛弃了。      </p></blockquote><h2 id="1-matery主题下载："><a href="#1-matery主题下载：" class="headerlink" title="1.matery主题下载："></a>1.matery主题下载：</h2><p> <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">主题下载</a><br> 解压后替换hexoblog下theme文件夹里的那个文件夹整体替换。</p><h2 id="2-主题优化"><a href="#2-主题优化" class="headerlink" title="2. 主题优化"></a>2. 主题优化</h2><h3 id="2-1-切换主题"><a href="#2-1-切换主题" class="headerlink" title="2.1 切换主题"></a>2.1 切换主题</h3><p>修改 Hexo 根目录下的 _config.yml 的 theme 的值：<code>theme: hexo-theme-matery</code>同时修改两个 <code>per_page</code> 的分页条数值为 6 的倍数，如：12、18 等，这样文章列表在各个屏幕（电脑，手机，pad）下都能较好的显示。  </p><h3 id="2-2-新建一些页面"><a href="#2-2-新建一些页面" class="headerlink" title="2.2 新建一些页面"></a>2.2 新建一些页面</h3><p>在根目录hexoblog下git bash here 依次输入下列命令  </p><pre><code>hexo new page "categories"hexo new page "tags"  hexo new page "about"  hexo new page "friends"  hexo new page "contact"  </code></pre><blockquote><p>网上教程一般都没有提到最后一个这会导致一个问题就是你的留言板页面打不开404，我当时真的搞了好久通过后我自己新加一个页面个人常用网站才解决  </p></blockquote><p>然后依次在hexoblog/source/tags(/categorite/about/friends/contact)/index.md 补充以下内容  </p><pre><code>type: "tags"  layout: "tags"     type: "categories"  layout: "categories"  type: "about"  layout: "about"  type: "friends"  layout: "friends"   type: "contact"  layout: "contact"  </code></pre><p>如/source/tags/index.md</p><pre><code>---  title: tags   date: 2018-09-30 18:23:38  type: "tags"  layout: "tags"  --- </code></pre><p>其中启用友情链接还需要在 source 目录下新建 _data 目录，在 _data 目录中新建 friends.json (新建一个文本文件txt连带后缀重命名修改就好，提示确认就好) 文件，文件内容如下所示：</p><pre><code>[{    "avatar": "http://hesifan.top/medias/avatar.jpg",    "name": "凡尘纪",    "introduction": "念念不忘 必有回响",    "url": "http://hesifan.top/",    "title": "前去参观"}, {    "avatar": "https://wiki.hyperledger.org/download/attachments/2392069/fabric?version=1&amp;modificationDate=1540928132000&amp;api=v2",    "name": "Fabric",    "introduction": "A Blockchain Platform for the Enterprise",    "url": "https://hyperledger-fabric.readthedocs.io/en/master/",    "title": "前去学习"}, {    "avatar": "https://www.bootcdn.cn/assets/img/maoyun.svg",    "name": "BootCDN",    "introduction": "稳定、快速、免费的前端开源项目 CDN 加速服务。",    "url": "https://www.bootcdn.cn/",    "title": "前去加速"}]  </code></pre><h3 id="2-3代码高亮"><a href="#2-3代码高亮" class="headerlink" title="2.3代码高亮"></a>2.3代码高亮</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 hexo-prism-plugin 的 Hexo 插件来做代码高亮，安装命令如下：  </p><pre><code>npm i -S hexo-prism-plugin  </code></pre><p>然后，修改 Hexo 根目录下 _config.yml 文件中 highlight.enable 的值为 false，并新增 prism 插件相关的配置，主要配置如下：  </p><pre><code>highlight:  enable: falseprism_plugin:  mode: 'preprocess' #realtime/preprocess  theme: 'tomorrow'  line_number: false    # default false  custom_css:</code></pre><h3 id="2-4-搜索"><a href="#2-4-搜索" class="headerlink" title="2.4 搜索"></a>2.4 搜索</h3><p>本主题中还使用到了 hexo-generator-search 的 Hexo 插件来做内容搜索，安装命令如下：  </p><pre><code>npm install hexo-generator-search --save</code></pre><p>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：  </p><pre><code>search:  path: search.xml  field: post   </code></pre><h3 id="2-5-修改页脚"><a href="#2-5-修改页脚" class="headerlink" title="2.5 修改页脚"></a>2.5 修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 /layout/_partial/footer.ejs 文件中，包括站点、使用的主题、访问量等。  </p><h3 id="2-6-修改社交链接"><a href="#2-6-修改社交链接" class="headerlink" title="2.6 修改社交链接"></a>2.6 修改社交链接</h3><p>修改社交链接<br>在主题的 _config.yml 文件中，默认支持 QQ、GitHub 和邮箱的配置，可以在主题文件的 /layout/_partial/social-link.ejs 文件中，新增、修改需要的社交链接地址，增加链接如B站可参考如下代码：  </p><pre><code>&lt;a href="https://space.bilibili.com/602389627" class="tooltipped" target="_blank" data-tooltip="访问我的B站" data-position="top" data-delay="50"&gt;      &lt;i class="fa fa-github"&gt;&lt;/i&gt;&lt;/a&gt;</code></pre><blockquote><p>这是我的B站个人空间你可以换成你自己的  </p></blockquote><h3 id="2-7-修改打赏的二维码图片"><a href="#2-7-修改打赏的二维码图片" class="headerlink" title="2.7 修改打赏的二维码图片"></a>2.7 修改打赏的二维码图片</h3><p>在主题文件的 source/medias/reward 文件中，可以替换成你的的微信和支付宝的打赏二维码图片。</p><blockquote><p>特别注意修改前查看该图片信息确保你替换的图片和该图一样大小尺寸名称，建议使用ps修改，后面所有对图片的改动都是如此，不再赘叙  </p></blockquote><h3 id="2-8文章链接转静态短地址"><a href="#2-8文章链接转静态短地址" class="headerlink" title="2.8文章链接转静态短地址"></a>2.8文章链接转静态短地址</h3><p>如果文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 SEO，且 gitment 评论对中文链接也不支持。我们可以用 hexo-permalink-pinyin Hexo 插件生成文章时生成中文拼音的永久链接，或者用hexo-abbrlink 生成静态文章链接。以下结合hexo-abbrlink生成类似 /yyyy/mmdd+随机数.html 的文章链接地址。</p><p>安装命令如下：  </p><pre><code>npm install hexo-abbrlink --save  </code></pre><p>在 Hexo 根目录下的 _config.yml 文件中，修改 permalink: ，并在文件末尾新增 abbrlink:配置项：  </p><pre><code>permalink: :year/:month:day:abbrlink.htmlabbrlink:   alg: crc16 #算法选项：crc16丨crc32  rep: dec #输出进制：dec为十进制，hex为十六进制</code></pre><h3 id="2-9-文章字数统计插件"><a href="#2-9-文章字数统计插件" class="headerlink" title="2.9 文章字数统计插件"></a>2.9 文章字数统计插件</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 hexo-wordcount插件。</p><p>安装命令如下：  </p><pre><code>npm i --save hexo-wordcount  </code></pre><p>然后只需在本主题下的 _config.yml 文件中，激活以下配置项即可：  </p><pre><code>wordCount:  enable: false # 将这个值设置为 true 即可.  postWordCount: true  min2read: true  totalCount: true  </code></pre><blockquote><p>注意是主题文件夹里的-ymal文件  </p></blockquote><h3 id="2-10自定制修改"><a href="#2-10自定制修改" class="headerlink" title="2.10自定制修改"></a>2.10自定制修改</h3><p>在本主题的 _config.yml 中可以修改部分自定义信息，有以下几个部分：<br>菜单<br>我的梦想<br>首页的音乐播放器和视频播放器配置<br>是否显示<br>推荐文章名称和按钮配置<br>favicon 和 Logo<br>个人信息<br>TOC 目录<br>文章打赏信息<br>复制文章内容时追加版权信息<br>MathJax<br>文章字数统计、阅读时长<br>点击页面的’爱心’效果<br>我的项目<br>我的技能<br>我的相册<br>Gitalk、Gitment、Valine 和 disqus 评论配置<br>不蒜子统计和谷歌分析（Google Analytics）<br>默认特色图的集合当文章没有设置特色图时，本主题会根据文章标题的 hashcode 值取余，来选择展示对应的特色图  </p><h3 id="2-11-修改-banner-图和文章特色图"><a href="#2-11-修改-banner-图和文章特色图" class="headerlink" title="2.11 修改 banner 图和文章特色图"></a>2.11 修改 banner 图和文章特色图</h3><p>可以直接在 /source/medias/banner 文件夹中更换喜欢的 banner 图片，主题代码中是每天动态切换一张，只需 7 张即可。  </p><h3 id="2-12-增加看板娘官网地址配置：-https-www-npmjs-com-package-hexo-helper-live2d"><a href="#2-12-增加看板娘官网地址配置：-https-www-npmjs-com-package-hexo-helper-live2d" class="headerlink" title="2.12 [增加看板娘官网地址配置：]  https://www.npmjs.com/package/hexo-helper-live2d"></a>2.12 [增加看板娘官网地址配置：]  <a href="https://www.npmjs.com/package/hexo-helper-live2d">https://www.npmjs.com/package/hexo-helper-live2d</a></h3><p>1)首先检查博客主目录下面的 package.json里是否有<br>“hexo-helper-live2d”: “^3.0.3”,依赖，有的话可以先卸载<br>使用命令：  </p><pre><code>npm uninstall hexo-helper-live2d     </code></pre><p>2)之后再安装：  </p><pre><code>npm install --save hexo-helper-live2d  </code></pre><blockquote><p>注意：命令都是在你的博客主目录执行   </p></blockquote><p>3)安装完成之后在package.json会看到安装的model<br>下载各种动画model：<br>[地址]<a href="https://github.com/xiazeyu/live2d-widget-models.git">https://github.com/xiazeyu/live2d-widget-models.git</a> </p><p>4)下载好之后将packages里的所有动画模板拷贝到博客的node_modules目录里<br>5)配置博客站点配置文件，_config.yml  </p><pre><code>live2d:  enable: true  pluginModelPath: assets/  model:    use: live2d-widget-model-epsilon2_1  #模板目录，在node_modules里  display:    position: right    width: 150     height: 300  mobile:    show: false  #是否在手机进行显示</code></pre><h3 id="2-13-新建文章模板修改"><a href="#2-13-新建文章模板修改" class="headerlink" title="2.13 新建文章模板修改"></a>2.13 新建文章模板修改</h3><p>首先为了新建文章方便，我们可以修改一下文章模板，可以将/scaffolds/post.md修改为如下代码：</p><pre><code>---   title: {{ title }}   date: {{ date }}  author:   img:   coverImg:  top: false   cover: false   toc: true   mathjax: false   password:   summary:   keywords:   tags:   categories:  ---</code></pre><h3 id="2-14-关闭首页颜色变换"><a href="#2-14-关闭首页颜色变换" class="headerlink" title="2.14 关闭首页颜色变换"></a>2.14 关闭首页颜色变换</h3><p>进入主题文件的 /source/css/matery.css文件中，搜索 rainbow来关闭颜色变换：  </p><pre><code>@-webkit-keyframes rainbow {   /* 动态切换背景颜色.即滤镜颜色，不想要可以全部注释，或者换成你喜欢的颜色 */ } @keyframes rainbow {    /* 动态切换背景颜色.，不想要可以全部注释，或者换成你喜欢的颜色 */}  </code></pre><h3 id="2-15-markdown书写文章用"><a href="#2-15-markdown书写文章用" class="headerlink" title="2.15 markdown书写文章用"></a>2.15 markdown书写文章用</h3><p>1)下载markdown安装包<br>[点我下载]<a href="http://editor.md.ipandao.com/">http://editor.md.ipandao.com/</a> 下载完成之后是一个压缩包，解压。<br>2)移植文件:  </p><ul><li>将压缩包解压之后放到 主题文件夹的source-&gt;libs目录中。可以将文件夹定改为editorMd   </li><li> 新建一个新的页面。在博客站点目录下新建一个MyMarkdown文件夹，并在文件夹下新建index.md文件。将下面的代码复制到index.md文件夹中。</li></ul><pre><code>---title: editor.mddate: 2020-02-16 11:20:03type: "MyMarkdown"layout: "MyMarkdown"---  </code></pre><p>3)导入editor的css和js<br>打开主题目录下的_config.yml文件，将editor的js文件和CSS写入，如下<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3hpYW9zaGlkaS1odWIvUGljR08vcGljdHVyZS9ta2Q2LnBuZw?x-oss-process=image/format,png#pic_center"><br>4)新建MyMarkdown.ejs文件<br>在主题文件夹下的layout文件夹中新建MyMarkdown.ejs文件。将下列代码复制到MyMarkdown.ejs文件中。  </p><pre><code>&lt;link rel="stylesheet" href="&lt;%- theme.libs.css.editormdCss %&gt;"&gt;&lt;style type="text/css"&gt;    /* don't remove. */    .page-cover {        /* height: 75vh; */        height: 940px;    }    .editormd {      top: 76px;    }    pre {      padding: 0;    }    .editormd-menu &gt; li.divider {      overflow: inherit;       padding: 5px 0px;    }    header .nav-transparent {    /*修改当行兰样式*/        background-image: linear-gradient(to right, #bf30a3 0%, #0f9d58 100%);    }    .editormd-form input[type="text"],     .editormd-form input[type="number"] {        height: 15px;        margin: 0px;        font-size: 14px;    }    .editormd-form input[type="text"] {        display: inline-block;        width: 246px;    }    .editormd-dialog-container label {      font-size: 14px;      color: #444;  }    .editormd-dialog-container select {      display: inline-block;      background-color: rgba(255,255,255,0.9);      width: 182px;      border-radius: 2px;      height: 25px;  }&lt;/style&gt;&lt;div class="pd-header page-cover"&gt;  &lt;div class="editormd" id="my-editormd"&gt;    &lt;textarea style="display:none;"&gt;&lt;/textarea&gt;  &lt;/div&gt;&lt;/div&gt;&lt;script src="&lt;%- theme.libs.js.jquery %&gt;"&gt;&lt;/script&gt;&lt;script src="&lt;%- theme.libs.js.editormdJs %&gt;"&gt;&lt;/script&gt;&lt;script  type="text/javascript"&gt;  var myEditor;  $(function() {        myEditor = editormd("my-editormd", {        width   : "98%",        height  : 840,        syncScrolling : "single",        path    : "/libs/editorMd/lib/",       // theme: "dark",      //  previewTheme: "dark",      //  editorTheme: "pastel-on-dark",        markdown: '',        codeFold: true,        emoji: true,        taskList: true,        tocm: true,         // Using [TOCM]        tex: true,                   // 开启科学公式TeX语言支持，默认关闭        flowChart: true,             // 开启流程图支持，默认关闭        sequenceDiagram: true,       // 开启时序/序列图支持，默认关闭,        htmlDecode : "style,script,iframe|on*",            // 开启 HTML 标签解析，为了安全性，默认不开启       });  });&lt;/script&gt;  </code></pre><h3 id="2-16hexo安装插件hexo-admin"><a href="#2-16hexo安装插件hexo-admin" class="headerlink" title="2.16hexo安装插件hexo-admin"></a>2.16hexo安装插件hexo-admin</h3><blockquote><p>hexo使用编辑文章时，若用其原生方式，则不便利，还好官网提供了一款插件hexo-admin界面化了markdown编辑器，只需要访问：<a href="http://127.0.0.1:4000/admin">http://127.0.0.1:4000/admin</a> 即可方便快捷的进行博文编辑了，  </p></blockquote><p>1)安装hexo-admin插件<code>npm install --save hexo-admin</code><br>2) 启动访问<code>hexo  s</code><br><a href="http://127.0.0.1:4000/admin">http://127.0.0.1:4000/admin</a>   </p><h3 id="2-17Hexo添加博客导航页"><a href="#2-17Hexo添加博客导航页" class="headerlink" title="2.17Hexo添加博客导航页"></a>2.17Hexo添加博客导航页</h3><p>1)新建页面，执行下面的命令   </p><pre><code>hexo new page navigate  </code></pre><p>2)修改 navigate 目录下的 index.md 的格式  </p><pre><code>---title: 个人常用网站date:  2020-10-09 11:19:14  type: "navigate"layout: "navigate"   ---  </code></pre><p>3)在主题配置文件_config.yml中添加个人常用网站  </p><pre><code>  导航:    url: /navigate    icon: fas fa-location-arrow  </code></pre><p>4)在 matery/layout 下新建 navigate.ejs</p><pre><code> &lt;div class="navi-height bg-cover pd-header "&gt;     &lt;div class=" link-box container"&gt;         &lt;!-- 搜索框 --&gt;         &lt;div class="baidu baidu-2 large-screen"&gt;             &lt;form name="f" action="https://www.baidu.com/" target="_blank"&gt;                  &lt;div id="Select-2"&gt;                      &lt;div class="Select-box-2" id="baidu"&gt;                          &lt;ul style="height: 46px;"&gt;                             &lt;li class="this_s"&gt;百 · 度&lt;/li&gt;                             &lt;li class="bing_s"&gt;必 · 应&lt;/li&gt;                             &lt;li class="google_s"&gt;谷 · 歌&lt;/li&gt;                             &lt;li class="baidu_s"&gt;百 · 度&lt;/li&gt;                          &lt;/ul&gt;                      &lt;/div&gt; &lt;input name="wd" id="kw-2" maxlength="100" autocomplete="off" type="text"&gt;                  &lt;/div&gt;                  &lt;div class="qingkong" id="qingkong" title="清 · 空" style="display: none;"&gt;x&lt;/div&gt; &lt;input value="搜 · 索"                      id="su-2" type="submit"&gt;                  &lt;ul class="keylist"&gt;&lt;/ul&gt;              &lt;/form&gt;          &lt;/div&gt; &lt;!-- 链接 --&gt;         &lt;div class="row tags-posts "&gt;              &lt;div class="col s12 m6 l4 friend-div" data-aos="zoom-in-up"&gt;                  &lt;div class="card"&gt;                      &lt;div class="jj-list-tit"&gt;娱乐 · 影视&lt;/div&gt;                      &lt;ul class="jj-list-con"&gt;                           &lt;li&gt;&lt;a href="https:pixiv.net" class="link-3" target="_blank"&gt;Pixiv&lt;/a&gt;&lt;/li&gt;                           &lt;li&gt;&lt;a href="https://www.bilibili.com/" class="link-3" target="_blank"&gt;哔哩哔哩&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://www.acfun.cn/" class="link-3" target="_blank"&gt;ACfun&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://www.spotify.com/" class="link-3" target="_blank"&gt;Spotify&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://awbw.amarriner.com/" class="link-3" target="_blank"&gt;AWBW&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href=" https://music.163.com/" class="link-3" target="_blank"&gt;网易云音乐&lt;/a&gt;&lt;/li&gt;                     &lt;/ul&gt;                  &lt;/div&gt;              &lt;/div&gt;              &lt;div class="col s12 m6 l4 friend-div" data-aos="zoom-in-up"&gt;                  &lt;div class="card"&gt;                      &lt;div class="jj-list-tit"&gt;社区 · Code&lt;/div&gt;                      &lt;ul class="jj-list-con"&gt;                          &lt;li&gt;&lt;a href="https://github.com/" class="link-3" target="_blank"&gt;GitHub&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://coding.net/" class="link-3" target="_blank"&gt;Coding&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://juejin.im/" class="link-3" target="_blank"&gt;掘金&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://gitee.com/" class="link-3" target="_blank"&gt;码云&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://www.v2ex.com/" class="link-3" target="_blank"&gt;V2EX&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://www.jianshu.com/" class="link-3" target="_blank"&gt;简书&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://www.52pojie.cn/" class="link-3" target="_blank"&gt;吾爱破解&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://segmentfault.com/" class="link-3" target="_blank"&gt;思否&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://cloud.tencent.com/developer/" class="link-3" target="_blank"&gt;云+社区&lt;/a&gt;&lt;/li&gt;                      &lt;/ul&gt;                  &lt;/div&gt;              &lt;/div&gt;              &lt;div class="col s12 m6 l4 friend-div" data-aos="zoom-in-up"&gt;                  &lt;div class="card"&gt;                      &lt;div class="jj-list-tit"&gt;图片处理&lt;/div&gt;                      &lt;ul class="jj-list-con"&gt;                          &lt;li&gt;&lt;a href="https://tinypng.com/" class="link-3" target="_blank"&gt;TingPNG&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://www.upyun.com/webp" class="link-3" target="_blank"&gt;又拍云Webp&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://www.iconfont.cn/" class="link-3" target="_blank"&gt;IconFont&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://fontawesome.com/" class="link-3" target="_blank"&gt;AweSome&lt;/a&gt;&lt;/li&gt;                          &lt;li&gt;&lt;a href="https://wallhaven.cc/" class="link-3" target="_blank"&gt;超清壁纸&lt;/a&gt;&lt;/li&gt;                      &lt;/ul&gt;                  &lt;/div&gt;              &lt;/div&gt;              &lt;div class="col s12 m6 l4 friend-div" data-aos="zoom-in-up"&gt;                  &lt;div class="card"&gt; &lt;div class="jj-list-tit"&gt;实用 · 工具&lt;/div&gt;                  &lt;ul class="jj-list-con"&gt;                      &lt;li&gt;&lt;a href="https://mdnice.com/" class="link-3" target="_blank"&gt;Nice编辑器&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://www.processon.com/" class="link-3" target="_blank"&gt;思维导图&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://cli.im/" class="link-3" target="_blank"&gt;二维码&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://my.openwrite.cn/" class="link-3" target="_blank"&gt;OW分发&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="https://www.guidgen.com/" class="link-3" target="_blank"&gt;GUID在线生成&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://console.upyun.com/purge/purge_url/" class="link-3" target="_blank"&gt;又拍云刷新网站&lt;/a&gt;&lt;/li&gt;                  &lt;/ul&gt;              &lt;/div&gt;          &lt;/div&gt;          &lt;div class="col s12 m6 l4 friend-div" data-aos="zoom-in-up"&gt;              &lt;div class="card"&gt;                  &lt;div class="jj-list-tit"&gt;编程 · 学习&lt;/div&gt;                  &lt;ul class="jj-list-con"&gt;                      &lt;li&gt;&lt;a href="https://www.oschina.net/" class="link-3" target="_blank"&gt;开源中国&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://htmldog.com/" class="link-3" target="_blank"&gt;HTML狗&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://www.icourse163.org/" class="link-3" target="_blank"&gt;中国大学慕课&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://www.imooc.com/" class="link-3" target="_blank"&gt;慕课网&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="http://www.wxapp-union.com/" class="link-3" target="_blank"&gt;小程序&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://blog.51cto.com/" class="link-3" target="_blank"&gt;51CTO&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://www.shiyanlou.com/library/" class="link-3" target="_blank"&gt;实验楼&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://spring.io/" class="link-3" target="_blank"&gt;Spring&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://blog.csdn.net/" class="link-3" target="_blank"&gt;csdn&lt;/a&gt;&lt;/li&gt;                 &lt;/ul&gt;              &lt;/div&gt;          &lt;/div&gt;          &lt;div class="col s12 m6 l4 friend-div" data-aos="zoom-in-up"&gt;              &lt;div class="card"&gt;                   &lt;div class="jj-list-tit"&gt;资讯 · 趋势&lt;/div&gt;                   &lt;ul class="jj-list-con"&gt;                       &lt;li&gt;&lt;a href="https://www.huxiu.com/" class="link-3" target="_blank"&gt;虎嗅&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="https://insights.stackoverflow.com/" class="link-3" target="_blank"&gt;技术调查&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="http://www.asciiworld.com/" class="link-3" target="_blank"&gt;摸鱼&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="https://sspai.com/" class="link-3" target="_blank"&gt;少数派&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="https://zh.wikihow.com/" class="link-3" target="_blank"&gt;WikeHom&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="https://www.awesomes.cn/rank?sort=hot" class="link-3" target="_blank"&gt;前端趋势&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="https://github-trending.com/" class="link-3" target="_blank"&gt;GitHub趋势&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.tiobe.com/" class="link-3" target="_blank"&gt;编程趋势&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="https://trends.google.com/" class="link-3" target="_blank"&gt;Google趋势&lt;/a&gt;&lt;/li&gt;                   &lt;/ul&gt;               &lt;/div&gt;           &lt;/div&gt;           &lt;div class="col s12 m6 l4 friend-div" data-aos="zoom-in-up"&gt;               &lt;div class="card"&gt;                   &lt;div class="jj-list-tit"&gt;常用· 其他&lt;/div&gt;                   &lt;ul class="jj-list-con"&gt;                         &lt;li&gt;&lt;a href="https://www.qvdv.com/tools/qvdv-guid.html" class="link-3" target="_blank"&gt;在线工具&lt;/a&gt;                       &lt;li&gt;&lt;a href="http://zhongguose.com/" class="link-3" target="_blank"&gt;中国色&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="https://opensource.builders/" class="link-3" target="_blank"&gt;OpenSource&lt;/a&gt;&lt;/li&gt;                       &lt;li&gt;&lt;a href="https://cloud.tencent.com/" class="link-3" target="_blank"&gt;腾讯云&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://www.leancloud.cn/" class="link-3" target="_blank"&gt;leancloud&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="http://127.0.0.1:4000/admin/" class="link-3" target="_blank"&gt;管理&lt;/a&gt;&lt;/li&gt;                      &lt;li&gt;&lt;a href="https://www.natfrp.com/user/" class="link-3" target="_blank"&gt;Sakura&lt;/a&gt;&lt;/li&gt;                  &lt;/ul&gt;               &lt;/div&gt;           &lt;/div&gt;       &lt;/div&gt;       &lt;script&gt; /*选择搜索引擎*/ $('.Select-box ul').hover(function () { $(this).css('height', 'auto') }, function () { $(this).css('height', '40px') }); $('.Select-box-2 ul').hover(function () { $(this).css('height', 'auto') }, function () { $(this).css('height', '46px') }); $('.Select-box li').click(function () { var _tihs = $(this).attr('class'); var _html = $(this).html(); if (_tihs == 'baidu_s') { _tihs = 'https://www.baidu.com/s'; _name = 'wd'; } if (_tihs == 'google_s') { _tihs = 'https://www.google.com/search'; _name = 'q'; } if (_tihs == 'bing_s') { _tihs = 'https://www.bing.com/search'; _name = 'q'; } $('.baidu form').attr('action', _tihs); $('.this_s').html(_html); $('#kw').attr('name', _name); $('.Select-box ul').css('height', '40px') }); $('.Select-box-2 li').click(function () { var _tihs = $(this).attr('class'); var _html = $(this).html(); if (_tihs == 'baidu_s') { _tihs = 'https://www.baidu.com/s'; _name = 'wd'; } if (_tihs == 'google_s') { _tihs = 'https://www.google.com/search'; _name = 'q'; } if (_tihs == 'bing_s') { _tihs = 'https://www.bing.com/search'; _name = 'q'; } $('.baidu form').attr('action', _tihs); $('.this_s').html(_html); $('#kw-2').attr('name', _name); $('.Select-box-2 ul').css('height', '48px') }); //清空输入框内容 $('.qingkong').click(function () { cls(); $(this).css('display', 'none') }); function cls() { var sum = 0; var t = document.getElementsByTagName("INPUT"); for (var i = 0; i &lt; t.length; i++) { if (t[i].type == 'text') { ++sum; t[i].value = "";//清空 } } } //清空输入框按钮的显示和隐藏 function if_btn() { var btn_obj = document.getElementById("kw") || document.getElementById("kw-2"); var cls_btn = document.getElementById("qingkong"); var btn_obj_val; var times; //当元素获得焦点时 if (btn_obj == '' || btn_obj == null) { return false; //如果没有找到这个元素，则将函数返回，不继续执行 } btn_obj.onfocus = function () { times = setInterval(function () { btn_obj_val = btn_obj.value; if (btn_obj_val != 0) { cls_btn.style.display = "block"; } else { cls_btn.style.display = "none"; } }, 200); } //元素失去焦点时 btn_obj.onblur = function () { clearInterval(times); } } &lt;/script&gt;   &lt;/div&gt; &lt;/div&gt; &lt;style&gt;     * {         margin: 0;         padding: 0;         font-family: "微软雅黑"     }     ul,li,h1,h2,h3,h4,h5,h6,p,form,dl,dt,dd {         margin: 0px;         padding: 0px;         font-size: 14px;         font-weight: normal;     }     img {         border-style: none;     }         li {         list-style: none;         float: left     }         a {         text-decoration: none     }     .card {        background-color: rgba(25, 240, 229, 0);        width: 96%;        margin-left: 2%      }      .baidu {          float: left;          margin-left: 100px;     }     .baidu form {         position: relative     }     .Select-box ul {         height: 40px;         position: absolute;         left: -1px;         top: 0px;         z-index: 9999;         background: #FFF;         border: 1px solid #ccc;         border-top: none;         overflow: hidden     }     .Select-box li {         width: 60px;         line-height: 40px;         font-size: 14px;         color: #484848;         border: 0;         cursor:         pointer;     }     .Select-box li:hover {         background: #3385ff;         color: #FFF;     }     .Select-box .this_s {         color: #317ef3;     }     .Select-box .this_s:hover {         background: #FFF;         color: #317ef3;        }     .qingkong {         position: absolute;         right: 120px;         top: 12px;         width: 18px;         height: 18px;        background: rgba(0, 0, 0, 0.1);         border-radius: 18px;         line-height: 16px;         color: #666666;         cursor: pointer;         text-align: center;         font-size: 14px;         display: none;     }     .qingkong:hover {        background: rgba(0, 0, 0, 0.2);     }     .qingkong:active {         background: rgba(0, 0, 0, 0.3);            }     .baidu-2 {         width: 100%;         height: 110px;         margin: 0 auto;         background: none;         padding-top: 50px;     }     .baidu-2 form {         width: 520px;         margin: 0 auto;     }     .baidu-2 input {         padding: 13px 8px;         opacity: 0.9;         font-size: 15px;     }     #Select-2 {         float: left;     }     .Select-box-2 {         text-align: center;         float: left;         position: relative;     }     .Select-box-2 ul {         height: 46px;         position: absolute;         left: 0px;         top: 1px;         z-index: 9999;         background: rgba(255, 255, 255, 0.9);         border: 1px solid #ccc; border-top: none;         overflow: hidden     }     .Select-box-2 li {         width: 60px;         line-height: 46px;         font-size: 15px;         color: #484848;         border: 0;         cursor: pointer;     }     .Select-box-2 li:hover {         background: #3385ff;         color: #FFF;     }     .Select-box-2 .this_s {         color: #317ef3;     }     .Select-box-2 .this_s:hover {         background: none;         color: #317ef3;     }     #kw-2 {         width: 335px;         outline: 0;         border: 1px solid #ccc;         background: rgba(255, 255, 255, 0.2);         color: #000000;         padding-left: 70px;         font-weight: bold;     }     /*修改搜索框样式*/     #su-2 {         width: 90px;         background: blue;         border: none;         border-top: #3385ff 1px solid;         border-bottom: 1px solid #2d78f4;         color: #FFF;         cursor: pointer;        /*去轮廓阴影*/         outline: none;     }     /*光标移动到搜索框颜色*/     #su-2:hover {         background: blue;         border-bottom: 1px         solid blue;     }     #su-2:active {         background: blue;         box-shadow: inset 1px 1px 3px blue;         -webkit-box-shadow: inset 1px 1px 3px blue;     }     .jj-list-tit {         font-size: 16px;         line-height: 25px;         color: #ffffff;         width: 100%;         padding-left: 38.5%;     }     .jj-list-con {         overflow: hidden;         margin: 0 auto     }     /*控制网站列表间距*/     .jj-list-con li {         width: 31.333%;         margin: 1%;     }     .link-3 {         display: block;         background: rgba(0, 0, 0, .35);         color: #FFF;         font-size: 13px;         text-align: center;         line-height: 35px;         padding: 4px 0;         border-radius: 2px;         transition: all 0.2s     }     .link-3:hover {         background: rgba(0, 0, 0, .45);         font-size: 15px;         font-weight: bold     }     /*1栏 小于584*/     @media only screen and (max-width: 584px) {         .navi-height {             height: 1300px;         }         .link-box {             margin-top: 5%;         }         .large-screen {             display: none;         }     }     /* 2栏 大于584 小于993px */     @media only screen and (min-width: 584px) and (max-width: 993px) {         .navi-height {             height: 800px;         }         .link-box {             margin-top: 5%;         }         .large-screen {             display: none;         }     }     /*3栏 大于993px*/     @media only screen and (min-width: 993px) {         .navi-height {             position: absolute;             width: 100%;             height: 100%;         }     }     /* 隐藏footer */     .page-footer {         display: none;     } &lt;/style&gt; &lt;% if (theme.banner.enable) { %&gt; &lt;script&gt;     // 每天切换 banner 图. Switch banner image every day.     var bannerUrl = "&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for('/medias/banner/') %&gt;" + new Date().getDay() + '.jpg'; $('.bg-cover').css('background-image', 'url(' + bannerUrl + ')');     &lt;/script&gt;     &lt;% } else { %&gt;     &lt;script&gt;     $('.bg-cover').css('background-image', 'url(&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for('/medias/banner/0.jpg') %&gt;)'); &lt;/script&gt; &lt;% } %&gt;</code></pre><h3 id="2-18-Hexo-博客订阅文章通知功能"><a href="#2-18-Hexo-博客订阅文章通知功能" class="headerlink" title="2.18 Hexo 博客订阅文章通知功能"></a>2.18 Hexo 博客订阅文章通知功能</h3><p>进入站点根目录</p><pre><code>npm install hexo-web-push-notification --save </code></pre><p>编辑站点配置文件_config.yml</p><pre><code>webPushNotification:  webpushrKey: "your webpushr rest api key"  webpushrAuthToken: "your webpushr authorize token"  trackingCode: "AEGlpbdgvBCWXqXI6PtsUzobY7TLV9gwJU8bzMktrwfrSERg_xnLVbjpCw8x2GmFmi1ZcLTz0ni6OnX5MAwoM88"</code></pre><p> [注册账号]<a href="https://app.webpushr.com/signup">https://app.webpushr.com/signup</a></p><p>按照步骤操作<br>将第二步中所指的代码复制粘贴到你的 layout.ejs文件内,执行hexo clean&amp;&amp;hexo g&amp;&amp;hexo d部署即可！</p><p>部署之后可能会遇到无法正常发送通知的情况.</p><p>进入目录 node_modules/hexo-web-push-notification/index.js文件中第22行<code>'summary': util.stripHTML(newPost.excerpt)</code>,这里取值取的是<code>excerpt</code>，改成<code>summary</code>即可。</p><p>修改前</p><pre><code>jsonvar JSONFeed = {        'title': newPost.title,        'id': newPost.path,        'date_published': newPost.date.format('L'),        'summary': util.stripHTML(newPost.excerpt),        'url': newPost.permalink,        'tags': newPost.tags.data.map(function (v) { return v.name }),        'categories': newPost.categories.data.map(function (v) { return v.name })    }</code></pre><p>修改后</p><pre><code>jsonvar JSONFeed = {        'title': newPost.title,        'id': newPost.path,        'date_published': newPost.date.format('L'),        'summary': util.stripHTML(newPost.summary),        'url': newPost.permalink,        'tags': newPost.tags.data.map(function (v) { return v.name }),        'categories': newPost.categories.data.map(function (v) { return v.name })    }</code></pre><h1 id="将hexo部署到服务器"><a href="#将hexo部署到服务器" class="headerlink" title="将hexo部署到服务器"></a>将hexo部署到服务器</h1><h2 id="系统centos-7-6-64bit"><a href="#系统centos-7-6-64bit" class="headerlink" title="系统centos 7.6 64bit"></a>系统centos 7.6 64bit</h2><h2 id="环境-git-nginx"><a href="#环境-git-nginx" class="headerlink" title="环境 git nginx"></a>环境 git nginx</h2><h2 id="git安装与配置"><a href="#git安装与配置" class="headerlink" title="git安装与配置"></a>git安装与配置</h2><h3 id="1-安装依赖库和编译工具"><a href="#1-安装依赖库和编译工具" class="headerlink" title="1. 安装依赖库和编译工具"></a>1. 安装依赖库和编译工具</h3><pre><code>  yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel  Is this ok [y/d/N]:  </code></pre><p> 输入y继续安装，后面一样  </p><h3 id="2-安装编译工具："><a href="#2-安装编译工具：" class="headerlink" title="2. 安装编译工具："></a>2. 安装编译工具：</h3><pre><code>  yum install gcc perl-ExtUtils-MakeMaker package </code></pre><h2 id="下载-git并解压编译安装"><a href="#下载-git并解压编译安装" class="headerlink" title="下载 git并解压编译安装"></a>下载 git并解压编译安装</h2><h3 id="1-查看服务器已有的git版本"><a href="#1-查看服务器已有的git版本" class="headerlink" title="1. 查看服务器已有的git版本"></a>1. 查看服务器已有的git版本</h3><pre><code>git --version</code></pre><pre><code>git version 1.8.3.1</code></pre><h3 id="2-将陈旧版本的git删除"><a href="#2-将陈旧版本的git删除" class="headerlink" title="2. 将陈旧版本的git删除"></a>2. 将陈旧版本的git删除</h3><pre><code>yum remove git </code></pre><h3 id="3-选择一个目录来存放下载下来的-git-安装包。这里选择了-usr-local-src-目录"><a href="#3-选择一个目录来存放下载下来的-git-安装包。这里选择了-usr-local-src-目录" class="headerlink" title="3.选择一个目录来存放下载下来的 git 安装包。这里选择了/usr/local/src 目录"></a>3.选择一个目录来存放下载下来的 git 安装包。这里选择了/usr/local/src 目录</h3><pre><code>cd /usr/local/src   </code></pre><h3 id="4-下载最新版git到-usr-local-src，可以在官网找到版本，目前最新版本是2-26-0。"><a href="#4-下载最新版git到-usr-local-src，可以在官网找到版本，目前最新版本是2-26-0。" class="headerlink" title="4. 下载最新版git到/usr/local/src，可以在官网找到版本，目前最新版本是2.26.0。"></a>4. 下载最新版git到/usr/local/src，可以在官网找到版本，目前最新版本是2.26.0。</h3><pre><code>wget http://ftp.ntu.edu.tw/software/scm/git/git-2.26.0.tar.gz  </code></pre><h3 id="5-解压到当前目录"><a href="#5-解压到当前目录" class="headerlink" title="5. 解压到当前目录"></a>5. 解压到当前目录</h3><pre><code>tar -zvxf git-2.26.0.tar.gz  </code></pre><h3 id="6-进入-git-2-26-0-tar-gz-目录下"><a href="#6-进入-git-2-26-0-tar-gz-目录下" class="headerlink" title="6. 进入 git-2.26.0.tar.gz 目录下"></a>6. 进入 git-2.26.0.tar.gz 目录下</h3><pre><code>cd git-2.26.0</code></pre><h3 id="7-执行编译"><a href="#7-执行编译" class="headerlink" title="7. 执行编译"></a>7. 执行编译</h3><pre><code>make prefix=/usr/local/git all  </code></pre><h3 id="8-安装-git-到-usr-local-git-目录下"><a href="#8-安装-git-到-usr-local-git-目录下" class="headerlink" title="8.安装 git 到 /usr/local/git 目录下"></a>8.安装 git 到 /usr/local/git 目录下</h3><pre><code>make prefix=/usr/local/git install  </code></pre><h2 id="配置-git-环境变量"><a href="#配置-git-环境变量" class="headerlink" title="配置 git 环境变量"></a>配置 git 环境变量</h2><h3 id="1-打开环境变量配置文件"><a href="#1-打开环境变量配置文件" class="headerlink" title="1.打开环境变量配置文件"></a>1.打开环境变量配置文件</h3><pre><code>vim /etc/profile  </code></pre><p>  按i进入编辑模式，按向下键到底部，添加下面两行命令：   </p><pre><code>PATH=$PATH:/usr/local/git/bin   # git 的目录export PATH  </code></pre><p>  按esc退出，按:wq保存编辑。(注意是先:再是wq)  </p><h3 id="2-使-git-环境变量生效"><a href="#2-使-git-环境变量生效" class="headerlink" title="2.使 git 环境变量生效"></a>2.使 git 环境变量生效</h3><pre><code> source /etc/profile</code></pre><h3 id="3-验证安装完成，查看-git-的版本号"><a href="#3-验证安装完成，查看-git-的版本号" class="headerlink" title="3.验证安装完成，查看 git 的版本号"></a>3.验证安装完成，查看 git 的版本号</h3><pre><code>git --version</code></pre><p>这时候我们的git版本已经变成了：</p><pre><code>git version 2.26.01</code></pre><h2 id="创建-git-用户"><a href="#创建-git-用户" class="headerlink" title="创建 git 用户"></a>创建 git 用户</h2><h3 id="1-创建git用户"><a href="#1-创建git用户" class="headerlink" title="1.创建git用户"></a>1.创建git用户</h3><pre><code>adduser git</code></pre><h3 id="2-获取权限"><a href="#2-获取权限" class="headerlink" title="2.获取权限"></a>2.获取权限</h3><pre><code>chmod 740 /etc/sudoersvim /etc/sudoers</code></pre><p>按 i 键进入文件的编辑模式，按向下键找到如下字段</p><pre><code>root    ALL=(ALL)       ALL</code></pre><p>在其后面增加一句：</p><pre><code>git     ALL=(ALL)       ALL</code></pre><p>按 Esc 键退出编辑模式，输入:wq 保存退出。（先输入:，然后输入wq回车）</p><h3 id="3-退回权限"><a href="#3-退回权限" class="headerlink" title="3.退回权限"></a>3.退回权限</h3><pre><code>chmod 400 /etc/sudoers  </code></pre><h2 id="配置密钥"><a href="#配置密钥" class="headerlink" title="配置密钥"></a>配置密钥</h2><h3 id="1-将密钥保存在服务器-之前有密钥的直接复制就可以"><a href="#1-将密钥保存在服务器-之前有密钥的直接复制就可以" class="headerlink" title="1.将密钥保存在服务器(之前有密钥的直接复制就可以)"></a>1.将密钥保存在服务器(之前有密钥的直接复制就可以)</h3><p>将id_rsa.pub里面的密钥复制,在服务器运行下面命令，创建.ssh文件夹</p><pre><code>su gitmkdir ~/.ssh</code></pre><p>创建.ssh/authorized_keys文件，打开authorized_keys文件并将刚才在本地机器复制的内容拷贝其中并保存</p><pre><code>vim ~/.ssh/authorized_keys</code></pre><p>按i进入编辑模式粘贴完按 Esc 键退出编辑模式，输入:wq 保存退出。（先输入:，然后输入wq回车）</p><h3 id="2-修改权限"><a href="#2-修改权限" class="headerlink" title="2.修改权限"></a>2.修改权限</h3><pre><code>chmod 755 ~chmod 700 ~/.sshchmod 600 ~/.ssh/authorized_keys</code></pre><h3 id="3-测试本地连接服务器"><a href="#3-测试本地连接服务器" class="headerlink" title="3.测试本地连接服务器"></a>3.测试本地连接服务器</h3><p>在本地电脑git bash here</p><pre><code>//yourIp为远程服务器的ip地址ssh -v git@yourIp  </code></pre><pre><code>git@vm_0_centos~</code></pre><h2 id="创建git仓库"><a href="#创建git仓库" class="headerlink" title="创建git仓库"></a>创建git仓库</h2><h3 id="1-切换到root用户，创建一个目录用于存储网站的根目录"><a href="#1-切换到root用户，创建一个目录用于存储网站的根目录" class="headerlink" title="1.切换到root用户，创建一个目录用于存储网站的根目录"></a>1.切换到root用户，创建一个目录用于存储网站的根目录</h3><pre><code>su root</code></pre><h3 id="2-创建网站的根目录"><a href="#2-创建网站的根目录" class="headerlink" title="2.创建网站的根目录"></a>2.创建网站的根目录</h3><pre><code>mkdir /home/hexo</code></pre><h3 id="3给予权限"><a href="#3给予权限" class="headerlink" title="3给予权限"></a>3给予权限</h3><pre><code>chown git:git -R /home/hexo</code></pre><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><h3 id="1-安装配置Nginx"><a href="#1-安装配置Nginx" class="headerlink" title="1.安装配置Nginx"></a>1.安装配置Nginx</h3><p>安装Nginx  </p><pre><code>yum install -y nginx</code></pre><p>配置Nginx</p><pre><code>nginx -t</code></pre><p>使用vim打开nginx.conf文件</p><pre><code>vim /etc/nginx/nginx.conf</code></pre><p>按i进入编辑模式粘贴完按 Esc 键退出编辑模式，输入:wq 保存退出。（先输入:，然后输入wq回车）</p><pre><code>server {        listen       80 default_server;        listen       [::]:80 default_server;        server_name  www.muyiio.com;   //你的博客域名        root         /home/hexo;       //git仓库目录    # Load configuration files for the default server block.    include /etc/nginx/default.d/*.conf;    location / {    }j    error_page 404 /404.html;        location = /40x.html {    }    error_page 500 502 503 504 /50x.html;        location = /50x.html {    }}</code></pre><h3 id="2-启动Nginx"><a href="#2-启动Nginx" class="headerlink" title="2.启动Nginx"></a>2.启动Nginx</h3><pre><code>systemctl start nginx.service</code></pre><h3 id="3-重启Nginx"><a href="#3-重启Nginx" class="headerlink" title="3.重启Nginx"></a>3.重启Nginx</h3><pre><code>systemctl restart nginx.service</code></pre><h2 id="自动化部署"><a href="#自动化部署" class="headerlink" title="自动化部署"></a>自动化部署</h2><h3 id="1-获取root权限"><a href="#1-获取root权限" class="headerlink" title="1.获取root权限"></a>1.获取root权限</h3><pre><code>su root</code></pre><h3 id="2-建立git仓库"><a href="#2-建立git仓库" class="headerlink" title="2.建立git仓库"></a>2.建立git仓库</h3><pre><code>cd /home/gitgit init --bare blog.git</code></pre><h3 id="3-修改blog-gi权限"><a href="#3-修改blog-gi权限" class="headerlink" title="3.修改blog.gi权限"></a>3.修改blog.gi权限</h3><pre><code>chown git:git -R blog.git</code></pre><h3 id="4-在-home-hexo-blog-git-下，有一个自动生成的-hooks-文件夹，我们创建一个新的-git-钩子-post-receive，用于自动部署。"><a href="#4-在-home-hexo-blog-git-下，有一个自动生成的-hooks-文件夹，我们创建一个新的-git-钩子-post-receive，用于自动部署。" class="headerlink" title="4.在 /home/hexo/blog.git 下，有一个自动生成的 hooks 文件夹，我们创建一个新的 git 钩子 post-receive，用于自动部署。"></a>4.在 /home/hexo/blog.git 下，有一个自动生成的 hooks 文件夹，我们创建一个新的 git 钩子 post-receive，用于自动部署。</h3><pre><code>im blog.git/hooks/post-receive</code></pre><p>按 i 键进入文件的编辑模式，在该文件中添加两行代码（将下边的代码粘贴进去)，指定 Git 的工作树（源代码）和 Git 目录</p><pre class=" language-#!/bin/bash"><code class="language-#!/bin/bash">git --work-tree=/home/hexo --git-dir=/home/git/blog.git checkout -f </code></pre><p>按 Esc 键退出编辑模式，输入:wq 保存退出。（先输入：，然后输入wq回车）</p><h3 id="5-修改文件权限，使得其可执行。"><a href="#5-修改文件权限，使得其可执行。" class="headerlink" title="5.修改文件权限，使得其可执行。"></a>5.修改文件权限，使得其可执行。</h3><pre><code>chmod +x /home/git/blog.git/hooks/post-receive  </code></pre><h2 id="配置本地Hexo"><a href="#配置本地Hexo" class="headerlink" title="配置本地Hexo"></a>配置本地Hexo</h2><h3 id="1-博客根目录-config下增加"><a href="#1-博客根目录-config下增加" class="headerlink" title="1.博客根目录_config下增加"></a>1.博客根目录_config下增加</h3><pre><code>deploy:    type: git    repo: root@***(服务器ip,内网外网都行):/home/git/blog.git    #仓库地址    branch: master    #分支</code></pre><h3 id="2-部署"><a href="#2-部署" class="headerlink" title="2.部署"></a>2.部署</h3><pre><code>hexo cleanhexo ghexo d</code></pre><p>输入hexo d的时候，会要求你输入自己的服务器密码</p><pre><code>Branch 'master' set up to track remote branch 'master' from 'https://e.coding.net/godxiaolon/godxiaolon.git'.On branch masternothing to commit, working tree cleanroot@119.25.56.82's password:Enumerating objects: 182, done.Counting objects: 100% (182/182), done.Delta compression using up to 12 threadsCompressing objects: 100% (61/61), done.Writing objects: 100% (95/95), 73.08 KiB | 3.18 MiB/s, done.Total 95 (delta 45), reused 0 (delta 0)remote: hooks/post-receive: line 1: t: command not foundTo 118.25.27.52:/home/git/hexoBlog.git   8df3691..7d63b39  HEAD -&gt; masterBranch 'master' set up to track remote branch 'master' from 'root@118.25.27.52:/home/git/hexoBlog.git'.INFO  Deploy done: git</code></pre><p>输入密码不会有显示，输完回车就可以</p><h3 id="3-如果出现bash-git-receive-pack-command-not-found-则运行："><a href="#3-如果出现bash-git-receive-pack-command-not-found-则运行：" class="headerlink" title="3.如果出现bash: git-receive-pack: command not found,则运行："></a>3.如果出现bash: git-receive-pack: command not found,则运行：</h3><pre><code>sudo ln -s /usr/local/git/bin/git-receive-pack  /usr/bin/git-receive-pack</code></pre><h3 id="4-访问服务器ip，看看有没有成功"><a href="#4-访问服务器ip，看看有没有成功" class="headerlink" title="4.访问服务器ip，看看有没有成功"></a>4.访问服务器ip，看看有没有成功</h3><h1 id="hexo-seo-cdn-其他优化"><a href="#hexo-seo-cdn-其他优化" class="headerlink" title="hexo seo cdn 其他优化"></a>hexo seo cdn 其他优化</h1><h2 id="hexo-seo"><a href="#hexo-seo" class="headerlink" title="hexo seo"></a>hexo seo</h2><h3 id="1-百度收录"><a href="#1-百度收录" class="headerlink" title="1.百度收录"></a>1.百度收录</h3><h4 id="登录百度站长平台：-http-zhanzhang-baidu-com"><a href="#登录百度站长平台：-http-zhanzhang-baidu-com" class="headerlink" title="[登录百度站长平台：]http://zhanzhang.baidu.com"></a>[登录百度站长平台：]<a href="http://zhanzhang.baidu.com/">http://zhanzhang.baidu.com</a></h4><p>只要有百度旗下的账号就可以登录，登录成功之后在站点管理中点击添加网站然后输入你的站点地址，建议输入的网站为www开头的，不要输入github.io的，因为github是不允许百度的spider爬取github上的内容的，所以如果想让你的站点被百度收录，只能使用自己购买的域名,使用文件验证下载验证保存好，粘贴到 public文件夹中，每次执行过hexo cl后要重新复制粘贴不能存放到source中自动上传因为上传过程中会被编译改变了文件导致验证失败。<br>生成网站地图<br>优解用markdown打开从百度下载的html文件，然后把这三句话放在百度给的识别码之前：</p><pre><code>--- layout: false---识别码</code></pre><p>我们需要使用npm自动生成网站的sitemap，然后将生成的sitemap提交到百度和其他搜索引擎</p><h4 id="安装sitemap插件"><a href="#安装sitemap插件" class="headerlink" title="安装sitemap插件"></a>安装sitemap插件</h4><pre><code>npm install hexo-generator-sitemap --save     npm install hexo-generator-baidu-sitemap --save</code></pre><h4 id="修改博客配置文件"><a href="#修改博客配置文件" class="headerlink" title="修改博客配置文件"></a>修改博客配置文件</h4><p>在根目录配置文件中修改url为你的站点地址</p><pre><code># URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: http://cherryblog.siteroot: /permalink: :title.htmlpermalink_defaults:</code></pre><p>执行完之后就会在网站根目录生成sitemap.xml文件和baidusitemap.xml文件，可以通过<a href="http://www.cherryblog.site/baidusitemap.xml,%E6%9F%A5%E7%9C%8B%E8%AF%A5%E6%96%87%E4%BB%B6%E6%98%AF%E5%90%A6%E7%94%9F%E6%88%90%EF%BC%8C%E5%85%B6%E4%B8%ADsitemap.xml%E6%96%87%E4%BB%B6%E6%98%AF%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E9%80%9A%E7%94%A8%E7%9A%84%E6%96%87%E4%BB%B6%EF%BC%8Cbaidusitemap.xml%E6%98%AF%E7%99%BE%E5%BA%A6%E4%B8%93%E7%94%A8%E7%9A%84sitemap%E6%96%87%E4%BB%B6%E3%80%82">http://www.cherryblog.site/baidusitemap.xml,查看该文件是否生成，其中sitemap.xml文件是搜索引擎通用的文件，baidusitemap.xml是百度专用的sitemap文件。</a></p><p>向百度提交链接<br>然后我们就可以将我们生成的sitemap文件提交给百度，还是在百度站长平台，找到链接提交，这里我们可以看到有两种提交方式，自动提交和手动提交，自动提交又分为主动推送、自动推送和sitemap  </p><h4 id="设置主动推送"><a href="#设置主动推送" class="headerlink" title="设置主动推送"></a>设置主动推送</h4><p>安装插件hexo-baidu-url-submit</p><pre><code>npm install hexo-baidu-url-submit --save</code></pre><p>然后再根目录的配置文件中新增字段</p><pre><code>baidu_url_submit:  count: 80             # 提交最新的一个链接  host: www.sunhwee.com # 在百度站长平台中注册的域名  token: xxxxxxxxxxxxxx # 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!  path: baidu_urls.txt  # 文本文档的地址， 新链接会保存在此文本文档里</code></pre><h4 id="再加入新的deploy："><a href="#再加入新的deploy：" class="headerlink" title="再加入新的deploy："></a>再加入新的deploy：</h4><pre><code>deploy:- type: baidu_url_submitter  </code></pre><h3 id="2-google收录"><a href="#2-google收录" class="headerlink" title="2.google收录"></a>2.google收录</h3><p>与百度同样操作  </p><h3 id="3-其他seo优化"><a href="#3-其他seo优化" class="headerlink" title="3.其他seo优化"></a>3.其他seo优化</h3><p>seo优化应该说是一个收益延迟的行为，可能你做的优化短期内看不到什么效果，但是一定要坚持，seo优化也是有很深的可以研究的东西，从我们最初的网站设计，和最基础的标签的选择都有很大的关系，网站设计就如我们刚刚说的，要让用户点击三次可以到达网站的任何一个页面，要增加高质量的外链，增加相关推荐（比如说我们经常见到右侧本站的最高阅读的排名列表），然后就是给每一个页面加上keyword和描述<br>在代码中，我们应该写出能让浏览器识别的语义化HTML，这样有助于爬虫抓取更多的有效信息：爬虫依赖于标签来确定上下文和各个关键字的权重；并且对外链设置nofollow标签，避免spider爬着爬着就爬出去了（减少网站的跳出率），并且我们要尽量在一些比较大的网站增加我们站点的曝光率，因为spider会经常访问大站，比如我们在掘金等技术社区发表文章中带有我们的站点，这样spider是很有可能爬到我们中的站点的，so….</p><ul><li>网站外链的推广度、数量和质量</li><li>网站的内链足够强大</li><li>网站的原创质量</li><li>网站的年龄时间</li><li>网站的更新频率（更新次数越多越好）</li><li>网站的服务器</li><li>网站的流量：流量越高网站的权重越高</li><li>网站的关键词排名：关键词排名越靠前，网站的权重越高</li><li>网站的收录数量：网站百度收录数量越多，网站百度权重越高</li><li>网站的浏览量及深度：用户体验越好，网站的百度权重越高  <h1 id="引用资料"><a href="#引用资料" class="headerlink" title="引用资料"></a>引用资料</h1>[引用1]<a href="https://blog.csdn.net/weixin_45682081/article/details/105278898">https://blog.csdn.net/weixin_45682081/article/details/105278898</a><br>[引用2]<a href="https://blog.nmslwsnd.com/matery-zhu-ti-she-zhi/">https://blog.nmslwsnd.com/matery-zhu-ti-she-zhi/</a><br>[引用3]<a href="https://www.xuanfengge.com/using-ssh-key-link-github-photo-tour.html">https://www.xuanfengge.com/using-ssh-key-link-github-photo-tour.html</a><br>[引用4]<a href="https://blog.csdn.net/jspnetcn/article/details/104111651">https://blog.csdn.net/jspnetcn/article/details/104111651</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> matery </tag>
            
            <tag> hexo  </tag>
            
            <tag> seo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown</title>
      <link href="2020/102262923.html"/>
      <url>2020/102262923.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>本文目的：熟悉学习markdown语法为后续书写文章做准备</p></blockquote><h1 id="一通用语法"><a href="#一通用语法" class="headerlink" title="一通用语法"></a>一通用语法</h1><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><p>用文字前<code>#</code>的数量来表示几级标题如：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h2 id="2-无序列表"><a href="#2-无序列表" class="headerlink" title="2.无序列表"></a>2.无序列表</h2><p>无序列表的使用，在减号<code>-</code>后加空格使用如下：  </p><ul><li>无序列表1  </li><li>无序列表2  </li><li>无序列表3  </li></ul><p>若要控制列表层级，则需在减号<code>-</code>前使用空格，如下：  </p><ul><li>无序列表1</li><li>无序列表2  <ul><li>无序列表1</li><li>无序列表2  </li></ul></li></ul><h2 id="3-有序列表"><a href="#3-有序列表" class="headerlink" title="3.有序列表"></a>3.有序列表</h2><p>在数字及<code>.</code>后加空格再输入内容，如下：  </p><ol><li>有序列表1  </li><li>有序列表2  </li><li>有序列表3       </li></ol><p>同理控制有序列表层级如下：  </p><ol><li>有序列表  <ol><li>有序列表1.1   </li></ol></li><li>有序列表  <ol><li>有序列表2.1    </li></ol></li></ol><h2 id="4-粗体和斜体"><a href="#4-粗体和斜体" class="headerlink" title="4.粗体和斜体"></a>4.粗体和斜体</h2><p>粗体的使用是在需要加粗的文字的前后各加两个<code>*</code><br>斜体的使用是在需要斜体的文字的前后各加一个<code>*</code><br>同事加粗和斜体则在目标文字的前后各加三个<code>*</code><br>如：<br><strong>粗体</strong><br><em>斜体</em><br>**<em>加粗斜体**</em><br>注：由于 commonmark 标准，可能会导致加粗与想象不一致，如下</p><p><strong>今天天气好晴朗，</strong>处处好风光。</p><p>这个是正常现象，请参考<a href="https://github.com/markdown-it/markdown-it/issues/410" title="加粗 Issue">加粗 Issue</a>。</p><h2 id="5-链接"><a href="#5-链接" class="headerlink" title="5.链接"></a>5.链接</h2><p>添加链接的方法<code>[名称]&lt;链接地址&gt;</code>如：<br>[百度]<a href="https://www.baidu.com/">https://www.baidu.com</a><br>[百度])(<a href="https://www.baidu.com/">https://www.baidu.com</a> )这种链接后要空格  </p><h2 id="6-引用"><a href="#6-引用" class="headerlink" title="6.引用"></a>6.引用</h2><p>引用的格式是在<code>&gt;</code>后面书写文字，文字的内容可以包含标题、链接、图片、粗体和斜体等。</p><blockquote><p>一级引用如下： </p><p>参天尽物，博学慎思<strong>——格言</strong>   </p></blockquote><p>当使用多个 <code>&gt;</code> 符号时，就会变成多级引用</p><p>二级引用如下：  </p><blockquote><blockquote><p>参天尽物，博学慎思<strong>——格言</strong>    </p></blockquote></blockquote><h2 id="7-分割线"><a href="#7-分割线" class="headerlink" title="7.分割线"></a>7.分割线</h2><p>可以在一行中用三个以上的减号来建立一个分隔线，同时需要在分隔线的上面空一行。如下：</p><hr><hr><h2 id="8-删除线"><a href="#8-删除线" class="headerlink" title="8.删除线"></a>8.删除线</h2><p>删除线的使用，在需要删除的文字前后各使用两个<code>~</code>，如下：</p><p><del>这是要被删除的内容。</del>   </p><h2 id="9-表格"><a href="#9-表格" class="headerlink" title="9. 表格"></a>9. 表格</h2><p>使用冒号定义对齐方式    </p><table><thead><tr><th align="left">name</th><th align="center">age</th><th align="right">tel</th></tr></thead><tbody><tr><td align="left">sami</td><td align="center">18</td><td align="right">123456789</td></tr><tr><td align="left">andy</td><td align="center">19</td><td align="right">152345678</td></tr></tbody></table><h2 id="10-图片"><a href="#10-图片" class="headerlink" title="10.图片"></a>10.图片</h2><p>插入图片，如果是行内图片则无图例，否则有图例，格式如下：<br><img src="https://www.baidu.com/img/flexible/logo/pc/result.png" alt="百度">  </p><h2 id="11-脚注"><a href="#11-脚注" class="headerlink" title="11.脚注"></a>11.脚注</h2><p>脚注与链接的区别如下所示：</p><pre class=" language-markdown"><code class="language-markdown">链接：<span class="token url">[文字](链接)</span>脚注：<span class="token url">[文字](脚注解释 <span class="token string">"脚注名字"</span>)</span></code></pre><p>[百度]（全球最大的中文搜索引擎、致力于让网民更便捷地获取信息，找到所求。百度超过千亿的中文网页数据库，可以瞬间找到相关的搜索结果。）<br>[百度]（<a href="https://www.baidu.com/">https://www.baidu.com</a> ）  </p><h2 id="12-代码块"><a href="#12-代码块" class="headerlink" title="12.代码块"></a>12.代码块</h2><p>如果在一个行内需要引用代码，只要用反引号引起来就好，如下：</p><p>Use the <code>printf()</code> function.  </p><p>在需要高亮的代码块的前一行及后一行使用三个反引号，同时<strong>第一行反引号后面表示代码块所使用的语言</strong>，如下：</p><pre><code>hexo clean hexo ghexo shexo dgulp </code></pre><pre><code>bashclojure，cpp，cs，cssdart，dockerfile, differlanggo，gradle，groovyhaskelljava，javascript，json，juliakotlinlisp，luamakefile，markdown，matlabobjectivecperl，php，pythonr，ruby，rustscala，shell，sql，swifttex，typescriptverilog，vhdlxmlyaml</code></pre><h2 id="13-toc"><a href="#13-toc" class="headerlink" title="13.toc"></a>13.toc</h2><p>TOC 全称为 Table of Content，列出全部标题。由于示例标题过多，需要使用将下方代码段去除即可。<br>[toc]</p>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/102216107.html"/>
      <url>2020/102216107.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hello  world </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>

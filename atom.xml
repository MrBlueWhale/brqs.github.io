<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>凡尘纪</title>
  
  <subtitle>念念不忘 必有回响</subtitle>
  <link href="https://hesifan.top/atom.xml" rel="self"/>
  
  <link href="https://hesifan.top/"/>
  <updated>2021-03-09T13:01:43.524Z</updated>
  <id>https://hesifan.top/</id>
  
  <author>
    <name>不染轻裳</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mc服务器进入3.0时代</title>
    <link href="https://hesifan.top/2021/030930456.html"/>
    <id>https://hesifan.top/2021/030930456.html</id>
    <published>2021-03-09T11:55:00.000Z</published>
    <updated>2021-03-09T13:01:43.524Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>由于突发意外（应该是积患已久，如果不咕咕咕的话应该会写一下前因后果），mc的服务器崩了，但好在mc服务端数据都还在，俗话说的好只要数据在一切都可以重来，还变得更好，之前升配云服务器就完全用来玩mc了，用我好兄弟的账号又买了一台学生机把网站迁了过去，然后升配的云服务器带着3.0时代来了，前两版本见 <a href="https://hesifan.top/2021/011239152.html">前文</a>  </p></blockquote><p>最开始使用的forge后面换到fabric，再到现在重回forge（旧时代的遗物的回归），主要原因如下感觉fabric比forge要卡一些，个人感受，其次fabric的mod实在在少以至于最后更换的时候唯一让人不舍就是辅助地图，本来是打算开原生插件服弄个be-java互通服，这样就可以用手机玩了，结果后来好兄弟们都没有be的正版账号，只能作罢，继续玩mod服，重新找mod，为了以后更高版本更新可以兼容，没有选择对游戏改动过大的mod，依旧以原版为基础增加了一些辅助类的mod，和我最爱的幸运方块以及一个风滚草。</p><p>下面是服务器玩家进入3.0时代的引导书</p><ol><li>在hmcl启动器版本列表中点击游戏版本进入游戏管理页面，删除fabric，并前往mods文件夹删除所有.jar mod文件，再安装forge1.16.4对应最新版本耐心等待一会即可。安装完成后关闭hmcl。</li><li>下载mod通过<a href="https://pan.baidu.com/s/1b9rMEv0koiIr0Xl_LvW6xA">网盘</a>下载提取码brqs或者找我私发给你。将下载好的mod放入mods文件夹中</li><li>打开游戏，按正常步骤进入即可</li></ol><p><strong>mod列表</strong><br>1.luckyblock（旧时代遗物的归来）最开始的服务器就有他，但是由于后面更换为fabric之后就把他删掉了，但是这个mod产生的一些物品还是原版的被保留了下来，那些物品被我称为旧时代的遗物。幸运方块最令人着谜的地方就在于在你打开他之前你完全不知道结果会是如何。<br>2.风滚草  Tumbleweed和幸运方块类似但是没有负面效果，在沙漠枯萎灌木生成，打落随机掉落物品。<br>3.ping可以发送信息的模组是把一个方块用红色效果框起来，然后发送给当前维度的人。功能分别是：警告-矿物-观察-移动。<br>使用说明：<br>按住菜单键（默认V键），鼠标移动到想使用的功能并松开菜单键（或点击想要使用的功能）选择想要谁来接收信息（必须同维度且在你的Ping范围内），如不指定则发给当前维度范围内的所有人。此时接收人会看到信息（选择矿物功能就会看到你发送的矿物），如果Ping的位置在对方的视野范围外（像是对方背对着你时）会在屏幕一侧显示一个小图标指向它当你挖到或者发现什么东西时可以通过此模组分享给基友。<br>4.区块预生成器Chunk-Pregenerator，优化服务器加载，可能导致光影异常。<br>5.体素地图<br>6.伤害血量显示<br>7.自动钓鱼  </p><blockquote><p>注除前三个mod外后面的mod可以自由删除或保留，建议保留。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="game" scheme="https://hesifan.top/categories/game/"/>
    
    
    <category term="game" scheme="https://hesifan.top/tags/game/"/>
    
    <category term="mc" scheme="https://hesifan.top/tags/mc/"/>
    
  </entry>
  
  <entry>
    <title>hexo-matery添加友链朋友圈</title>
    <link href="https://hesifan.top/2021/030521326.html"/>
    <id>https://hesifan.top/2021/030521326.html</id>
    <published>2021-03-05T07:02:00.000Z</published>
    <updated>2021-03-05T13:44:22.371Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>这是冰老师做的友链朋友圈项目，我最开始看到它的时候，真就眼前一亮，这就是我想要的效果，立马加了群去了解这个项目，在部署项目的时候冰老师也一直耐心指导，给冰老师点赞👍冰老师还直接帮忙写了css，我觉得这个项目真的特别不错，就转载了冰老师的文章，另外帮他宣传宣传这个项目（虽然我这是个时常日ip不到20的贵站，但是说不定有人看到了呢）。</p></blockquote><p>先上图<br><img src="https://hesifan.top/medias/post/post/hexofriendq.webp" alt="matery效果图"><br><a href="hesifan.top/pyq">我的朋友圈页面</a>  </p><h2 id="开始正文"><a href="#开始正文" class="headerlink" title="开始正文"></a>开始正文</h2><p>首先上冰老师的<a href="https://zfe.space/post/friend-link-circle.html">教程</a><br>一直做到第三步，第四步你可以跳回这里。</p><h2 id="添加页面"><a href="#添加页面" class="headerlink" title="添加页面"></a>添加页面</h2><p>1.在hexo根目录下source文件夹下添加文件夹friendcircle并新建index.md文件写入以下内容</p><pre><code>---title: 朋友圈date: 2021-02-19 19:27:32type: "friendcircle"layout: "friendcircle"---</code></pre><p>2.下载 js 文件并配置前往冰老师提供的地址<a href="https://github.com/Zfour/hexo-moments-js">hexo-moments-js</a>下载 js。修改 js 中的 api 地址(冰老师教程第三步的api链接),<br>将以下代码中的api链接换位你部署的 api 链接即可。</p><pre><code>requests_url = "https://hexo-circle-of-friends-api.vercel.app/api";</code></pre><p>改完以后将该js文件保存在主题目录下source/js文件夹下<br>3.在主题目录下layout文件夹中新建friendcircle.ejs写入以下内容</p><pre><code>&lt;%- partial('_partial/bg-cover') %&gt;&lt;style&gt;  .journal {    padding: 12px;    border: 1px dashed #e6e6e6;    color: #969696;    position: relative;    display: inline-block;    width: 95%;    background: #fbfbfb50;    border-radius: 10px;    font-size: 16px;    margin: 12px auto;  }&lt;/style&gt;&lt;main class="content"&gt;  &lt;div class="container"&gt;    &lt;div class="card"&gt;      &lt;div class="card-content"&gt;        &lt;div class="journal"&gt;          &lt;div class="title center-align"&gt;“友链朋友圈”&lt;/div&gt;        &lt;/div&gt;        &lt;div id="friend_link_circle"&gt;          &lt;h2&gt;统计信息&lt;/h2&gt;          &lt;div id="info_user_poor" class="article-sort-item" style="display: flex; box-shadow: rgba(0, 0, 0, 0.07) 0px 2px 2px 0px, rgba(0, 0, 0, 0.1) 0px 1px 5px 0px; border-radius: 2px"&gt;            &lt;div class="chart"&gt;              &lt;span class="friend_post_info_title"&gt;当前友链数:&lt;/span&gt;&lt;span class="friend_post_info_number"&gt;&amp;#123;&amp;#123;user_lenth&amp;#125;&amp;#125;个&lt;/span&gt;&lt;br /&gt;              &lt;span class="friend_post_info_title"&gt;失败数:&lt;/span&gt;&lt;span class="friend_post_info_number"&gt;&amp;#123;&amp;#123;error&amp;#125;&amp;#125;个&lt;/span&gt;&lt;br /&gt;            &lt;/div&gt;            &lt;div class="chart"&gt;              &lt;span class="friend_post_info_title"&gt;活跃友链数:&lt;/span&gt;&lt;span class="friend_post_info_number"&gt;&amp;#123;&amp;#123;unique_live_link&amp;#125;&amp;#125;个&lt;/span&gt;&lt;br /&gt;              &lt;span class="friend_post_info_title"&gt;当前库存:&lt;/span&gt;&lt;span class="friend_post_info_number"&gt;&amp;#123;&amp;#123;listlenth&amp;#125;&amp;#125;篇&lt;/span&gt;&lt;br /&gt;            &lt;/div&gt;            &lt;div class="chart"&gt;              &lt;span class="friend_post_info_title"&gt;今日更新:&lt;/span&gt;&lt;span class="friend_post_info_number"&gt;&amp;#123;&amp;#123;today_post&amp;#125;&amp;#125;篇&lt;/span&gt;&lt;br /&gt;              &lt;span class="friend_post_info_title"&gt;最近更新:&lt;/span&gt;&lt;span class="friend_post_info_number"&gt;&amp;#123;&amp;#123;last_update_time&amp;#125;&amp;#125;&lt;/span&gt;            &lt;/div&gt;          &lt;/div&gt;          &lt;div v-for="datalist in datalist_slice"&gt;            &lt;h2 v-if="datalist[2]-maxnumber&lt;0"&gt;&amp;#123;&amp;#123;datalist[0]&amp;#125;&amp;#125;&lt;/h2&gt;            &lt;div v-if="item[6]-maxnumber&lt;0" v-for="(item,i) in datalist[1]" class="article-sort-item" style="box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.07), 0 1px 5px 0 rgba(0, 0, 0, 0.1); border-radius: 2px"&gt;              &lt;a :target="opentype" class="article-sort-item-img" :href="item[2]" :title="item[0]"&gt;&lt;img onerror='this.onerror=null,this.src="/medias/pyq/404.png"' data-ll-status="loaded" class="entered loaded" :src="item[4]" /&gt;&lt;/a&gt;              &lt;div class="article-sort-item-info"&gt;                &lt;div class="article-sort-item-time"&gt;                  &lt;i class="far fa-user"&gt;&lt;/i&gt;                  &lt;span style="padding-left: 10px; padding-right: 10px"&gt;&amp;#123;&amp;#123;item[3]&amp;#125;&amp;#125;&lt;/span&gt;                  &lt;div class="friend_post_time"&gt;                    &lt;i class="far fa-calendar-alt"&gt;&lt;/i&gt;                    &lt;time class="post-meta-date-created" :datetime="item[1]" :title="item[1]"&gt;&amp;#123;&amp;#123;item[1]&amp;#125;&amp;#125;&lt;/time&gt;                  &lt;/div&gt;                &lt;/div&gt;                &lt;a :target="opentype" style="-webkit-line-clamp: 1" class="article-sort-item-title" :href="item[2]" :title="item[0]"&gt;&amp;#123;&amp;#123;item[0]&amp;#125;&amp;#125;&lt;/a&gt;              &lt;/div&gt;            &lt;/div&gt;          &lt;/div&gt;          &lt;div style="text-align: center"&gt;            &lt;button v-if="loadmore_display" type="button" class="load_button" @click="addmaxnumber()"&gt;加载更多...&lt;/button&gt;          &lt;/div&gt;        &lt;/div&gt;        &lt;style&gt;          .friend_post_info_title {            font-weight: 700;          }          .friend_post_info_number {            float: right;          }          .chart {            align-items: flex-start;            flex: 1;            width: 100px;            height: 60px;            margin: 20px;          }          @media screen and (max-width: 500px) {            #info_user_poor {              padding: 10px;              flex-direction: column;              max-height: 200px;            }            .chart {              flex: 0;              width: 100%;              height: 160px;              margin: 0;            }          }          .article-sort-item:before {            border: none;          }          @media screen and (min-width: 500px) {            .friend_post_time {              float: right;            }          }          .load_button {            -webkit-transition-duration: 0.4s; /* Safari */            transition-duration: 0.4s;            text-align: center;            border: 1px solid #ededed;            border-radius: 0.3em;            display: inline-block;            background: transparent;            color: #555;            padding: 0.5em 1.25em;          }          .load_button:hover {            color: #3090e4;            border-color: #3090e4;          }        &lt;/style&gt;        &lt;style&gt;          .friend_post_info_title {            font-weight: 700;          }          .friend_post_info_number {            float: right;          }          .chart {            align-items: flex-start;            flex: 1;            width: 100px;            height: 60px;            margin: 20px;          }          @media screen and (max-width: 500px) {            #info_user_poor {              padding: 10px;              flex-direction: column;              max-height: 200px;            }            .chart {              flex: 0;              width: 100%;              height: 160px;              margin: 0;            }          }          .article-sort-item:before {            border: none;          }          @media screen and (min-width: 500px) {            .friend_post_time {              float: right;            }          }          .load_button {            -webkit-transition-duration: 0.4s; /* Safari */            transition-duration: 0.4s;            text-align: center;            border: 1px solid #ededed;            border-radius: 0.3em;            display: inline-block;            background: transparent;            color: #555;            padding: 0.5em 1.25em;          }          .load_button:hover {            color: #3090e4;            border-color: #3090e4;          }          .article-sort-item {            position: relative;            display: -webkit-box;            display: -moz-box;            display: -webkit-flex;            display: -ms-flexbox;            display: box;            display: flex;            -webkit-box-align: center;            -moz-box-align: center;            -o-box-align: center;            -ms-flex-align: center;            -webkit-align-items: center;            align-items: center;            margin: 0 0 1rem 0.5rem;            -webkit-transition: all 0.2s ease-in-out;            -moz-transition: all 0.2s ease-in-out;            -o-transition: all 0.2s ease-in-out;            -ms-transition: all 0.2s ease-in-out;            transition: all 0.2s ease-in-out;          }          .article-sort-item-img {            overflow: hidden;            width: 80px;            height: 80px;          }          .article-sort-item-img img {            max-width: 100%;          }          .article-sort-item-info {            -webkit-box-flex: 1;            -moz-box-flex: 1;            -o-box-flex: 1;            box-flex: 1;            -webkit-flex: 1;            -ms-flex: 1;            flex: 1;            padding: 0 0.8rem;          }          .article-sort-item-title {            display: -webkit-box;            overflow: hidden;            -webkit-box-orient: vertical;            font-size: 1.1em;            -webkit-transition: all 0.3s;            -moz-transition: all 0.3s;            -o-transition: all 0.3s;            -ms-transition: all 0.3s;            transition: all 0.3s;            -webkit-line-clamp: 1;          }        &lt;/style&gt;        &lt;script src="https://cdn.jsdelivr.net/npm/vue@2.6.11"&gt;&lt;/script&gt;        &lt;script src="/js/request.js"&gt;&lt;/script&gt;      &lt;/div&gt;    &lt;/div&gt;  &lt;/div&gt;&lt;/main&gt;</code></pre><p>4.在主题yml中添加到导航栏</p><pre><code>朋友圈:    url: /pyq    icon: fa fa-puzzle-piece</code></pre><p>5.添加404图片<br>如果友链头像错误，直接显示<a href="https://hesifan.top/medias/pyq/404.png">404图片</a>下载该图片并在主题目录下medias文件夹下新建文件夹pyq保存（你也可以自己更改ejs里的位置随意保存）。</p><p><strong>最后hexo三连即可，再次感谢冰老师。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="网站" scheme="https://hesifan.top/categories/%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="matery" scheme="https://hesifan.top/tags/matery/"/>
    
    <category term="hexo" scheme="https://hesifan.top/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>三人一狗牛山红色之旅</title>
    <link href="https://hesifan.top/2021/030421816.html"/>
    <id>https://hesifan.top/2021/030421816.html</id>
    <published>2021-03-04T12:28:00.000Z</published>
    <updated>2021-03-06T01:05:17.847Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>为什么要写这篇文章呢？目的是为了记录下这次略显惨痛的爬山之旅，今天距离那天已经过去两天了，我的屁股和小腿还酸疼，一次性运动量有点大。也为同我们一起上山的狗而写。对于它来说，我们只是它生命中的过客，而它却陪我们上山下山最后目送我们远远离开才转身离去。  </p></blockquote><p>  早在几天前，我们就约好一起去牛山（就在小曾家附近）玩，正好渣渣辉（我好兄弟的外号）顺带把锅带给小曾，原本是我朴渣渣灰和小曾我们四个一起上山的，恰好小曾突然有急事要出去，不能和我们一起去了，于是就变成了我们三个人一起去爬山了，他就说你们是不可能直接爬上去的那山很陡，本来原计划可能是坐车上去的，这句话就让我萌生了要爬上去的想法，往往别人越是说办不到的事我就越想去尝试，于是在我的暗中推波助澜之下我们爬了上去，（朴，渣渣辉：你要折磨自己别拉着我们啊！）确实把我累的够呛，但是如果让我再选一次我还会选爬上去有很多东西如果不是爬上去是根本没机会碰到的。<br>   上午八点半我们三个在车站集合坐上了40的公交前往姚街，大概十点左右到达姚街将锅放到小曾家以后我们就上山了。从离开她家开始就是一个接一个的上坡，令人绝望。<img src="https://7.dusays.com/2021/03/04/828736307071d.jpg">这是其中一个岔路下山回来时我们还特地去查看了一下，是个断崖。<br>   再走了一会就来到了山脚下的游客中心（这张图其实是下山的时候拍的）<br> <img src="https://7.dusays.com/2021/03/04/089fbf21685d9.jpg" alt="游客中心"><br>   典型的徽派建筑白墙黛瓦马头墙看上去就很有徽派气息也很漂亮，过了这个游客中心我们三个在前面游客厕所停留了很一会，休整了一番继续上山，前面就是最后一段住宅区，过了这一段就是彻底的九转八折盘山路了，也就是在这里我们邂逅了那条陪着我们上山下山的狗。我们推测它可能时住在上面的恰好下来遛弯，然后就一路带着我们上山我们三个人上山的速度还没它快，而且它发现把我们甩远了还会停下来等我们或者走回来和我们一起，它四个腿都很短，走起来把地面拍的很响有种马蹄踏地的韵味。<br><img src="https://7.dusays.com/2021/03/04/1f928a5de2d03.jpg"><br><img src="https://7.dusays.com/2021/03/04/6734f007f82b2.jpg" alt="狗陪我们上山"><br>   然后又是一段走走停停，其间渣渣辉和朴萌生过退意想厚着脸皮拦一辆车上去，但是奈何大家都放不开脸，加上我不断在旁边推波助澜，说都走一半了不能放弃，没有多远了，挑战一下自己，一直在怂恿他们最终我们才爬上山。途中一次休息的地方我们三个驻足拍了几张照片，不得不说从山上再往下俯瞰的感觉确实挺美挺壮观的。<br><img src="https://7.dusays.com/2021/03/04/74853c21f774f.jpg"><br><img src="https://7.dusays.com/2021/03/04/b4a2d30aedb6b.jpg"><br><img src="https://7.dusays.com/2021/03/04/c1e61f16f877f.jpg" alt="驻足拍照"><br>   然后又是几段弯曲折叠的上山路，最后从因为已经可以看到景区的饭店了，就抄了林间近路其实也没有近多少反而更陡，下山时没有走近路时一段弯折一段弯折的走下去的。<br><img src="https://7.dusays.com/2021/03/04/147a5333e92bd.jpg" alt="林中陡峭近路"><br>   经历了千辛万苦我们终于爬上来，大概花了将近一个多小时的辛苦跋涉，因为是一个红色景区，有一些战争年代留下的展出，这是景区展示厅展示的一些展出品<br><img src="https://7.dusays.com/2021/03/04/262fb76c8d89c.jpg"><br><img src="https://7.dusays.com/2021/03/04/fbfae83e061b5.jpg"><br><img src="https://7.dusays.com/2021/03/04/063291fc2186a.jpg"><br>由于到山上已经是中午，我们就打算在山上吃个饭再参观，当然以我们的经济基础就只能吃泡面了，一包桶装一包袋装加起来10块钱对于景区来说还能接受，在我的劝说之下渣渣辉也买了一包袋装因为一包桶装8块而加包袋装只要两块还能吃的饱一些何乐而不为呢。朴本来还很有气节不打算吃泡面的在我和渣渣辉的劝说下也一起吃了泡面。<br><img src="https://7.dusays.com/2021/03/04/db5bf607178af.jpg"><br>同时小狗也跟我们到了景区，由于没啥给它吃的，它就坐在一旁晒太阳，十分乖巧，主要是上去啥吃的都没带不然一定喂它吃点。<br><img src="https://7.dusays.com/2021/03/04/87b921ca85ca6.jpg"><br><img src="https://7.dusays.com/2021/03/04/449340ce4c52d.jpg"><br>中午吃完饭就正式开始了牛山观光之旅，因为一直听小曾说有玻璃栈道其实我们期待度还挺高的，但是看到实物之后其实有点落差。观光过程中小狗其实陪我们一段，后面台阶太陡他就回去，本以为见不到它了，没想到下山它又送别我们。由于景区还在施工，玻璃吊桥也没开放，我们就简单看了一些景点就下山了，<br><img src="https://7.dusays.com/2021/03/04/df6869b46841f.jpg" alt="玻璃吊桥"><br><img src="https://7.dusays.com/2021/03/04/813fad361108c.jpg" alt="不老泉"><br><img src="https://7.dusays.com/2021/03/04/828001f15cfce.jpg" alt="三部仙书"><br><img src="https://7.dusays.com/2021/03/04/49a6c563d1a16.jpg" alt="罗汉石"><br><img src="https://7.dusays.com/2021/03/04/b0c0bf68d8b1c.jpg" alt="龙眼"><br>龙眼这个景点不得不吐槽一波，打死我都不信这点水不会干。还有其他景点也基本都去了没有拍照片，彩虹滑道，瞭望台还都在施工没有完全没建好。<br>我们还去了一些可能要开发的地区<br><img src="https://7.dusays.com/2021/03/04/d504c551cdc12.jpg"><br><img src="https://7.dusays.com/2021/03/04/86d789d6c90e3.jpg"><br>接下来就是几张在高处俯拍的图<br><img src="https://7.dusays.com/2021/03/04/e676ae3fc29da.jpg" alt="龙眼高地俯拍"><br>这三张分别是我们三个在三部仙书拍摄的我们爬上来的路<br><img src="https://7.dusays.com/2021/03/04/efcd1638895b5.jpg"><br><img src="https://7.dusays.com/2021/03/04/c20cbc7698ff5.jpg"><br><img src="https://7.dusays.com/2021/03/04/02c6dc3f2d94f.jpg"><br>逛完之后就回到下面饭店休息了一会，两点四五十从山顶出发开始下山，有一说一下山真的不累就是跑太快了岔气肚子疼，我和渣渣辉就倒着走下山，这样可以缓解岔气的难受，路很开阔车很少所以没问题。渣渣辉甚至有一种更猥琐的姿势，避免被他打死我就不放图了。<br>下山途中又遇到了那只狗这次是它速度不及我们跟在我们后面<br><img src="https://7.dusays.com/2021/03/04/e865a3ad00577.jpg"><br><img src="https://7.dusays.com/2021/03/04/560a8e9a4e153.jpg"><br><img src="https://7.dusays.com/2021/03/04/54ab9ab322c18.jpg"><br>它真的是默默的陪了我们一路，最后临别时已经到快下山的地方了，它没有再跟着我们，只是蹲坐在哪里远远的看着我们不时的回头看向山上似乎在犹豫还要不要再送我们一程，最终还是选择目送我们远去才缓缓离开向山上而去，我们三个谈论着或许这已经是它来过的边界了吧，在前进就超出它的领地了。下次有机会来能遇见它，一定给它带些吃的（渣渣辉：你还好没说我说小曾没来，这条狗代替她陪我的事。我：我没说，你自己说的哈）由于下山慢了，我们刚好错过一班公交，渣渣辉和朴在小超市里买了一些怀旧食品，后坐公交回家。<br>当天估计走了有14公里左右，最后上一张微信步数统计。<br><img src="https://hesifan.top/medias/post/post/phb.jpg" alt="微信步数"><br>总结一下，总体上这次牛山之行还是挺快乐的，牛山是一个红色景区拥有不少战争遗迹，自然风光，还是值得一来的。等上面完全施工完成会更加完美。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="生活" scheme="https://hesifan.top/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="游记" scheme="https://hesifan.top/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>近期网站优化小结</title>
    <link href="https://hesifan.top/2021/030460874.html"/>
    <id>https://hesifan.top/2021/030460874.html</id>
    <published>2021-03-04T01:13:00.000Z</published>
    <updated>2021-03-04T02:33:55.990Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>昨天对网站做了很大变动（已经很久没变动过了），断舍离了很多东西，也修改（F12）了不少东西，就此做个小结。</p></blockquote><h2 id="删除不必要的页面"><a href="#删除不必要的页面" class="headerlink" title="删除不必要的页面"></a>删除不必要的页面</h2><p>删除了小游戏，书单，捐助系统等页面，原因很简单我的心态已经从开始单纯追求页面多变为了少而精，删除的页面要么几乎没人访问，甚至我自己都从来不会点进去比如书单页面，要么就是没必要比如小游戏的页面，谁在无聊也不会在你网站上玩小游戏啊。但是毕竟当时也花了一定的时间去整理页面所以我并没有直接彻底删除只是将其隐藏在了彩蛋文件夹里等有时间重新整理聚合成一个小页面再放出来，以我拖延症的性格这估计又是有生之年系列了。</p><h2 id="聚合调整导航栏"><a href="#聚合调整导航栏" class="headerlink" title="聚合调整导航栏"></a>聚合调整导航栏</h2><p>原本导航栏很长而且折叠很多，在删除了一些页面后，将关于站点和关于博主合并为关于页面，将大多数折叠页面拆开，聚合到清单页面。</p><h2 id="修改网站字体"><a href="#修改网站字体" class="headerlink" title="修改网站字体"></a>修改网站字体</h2><p>之前的江西浊楷体用了很久，最开始看见这个字体甚是欢喜，但是也存在很多问题，如字体包过大拖慢网站加载速度，文章页面字体不清晰，数字容易堆叠。拖到昨天就着断舍离的东风下定决心换成宋体为主要字体，副标题和logo旁字体为楷体。</p><h2 id="修改侧边按钮"><a href="#修改侧边按钮" class="headerlink" title="修改侧边按钮"></a>修改侧边按钮</h2><p>修改了侧边按钮样式，将一部分按钮聚合，同时优化深色模式并加了切换动画</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>修复文章格式错误,适配了移动端bannner，去除player提升访问速度。</p><h2 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h2><p>由于这次变动过大，建议清除浏览器缓存再访问否则可能会出现样式异常的问题，电脑可使用CTRL F5强制刷新访问。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="总结" scheme="https://hesifan.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="hexo" scheme="https://hesifan.top/tags/hexo/"/>
    
    <category term="网站" scheme="https://hesifan.top/tags/%E7%BD%91%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>我的centos使用手册</title>
    <link href="https://hesifan.top/2021/020425073.html"/>
    <id>https://hesifan.top/2021/020425073.html</id>
    <published>2021-02-04T13:47:00.000Z</published>
    <updated>2021-03-04T01:21:38.486Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>本文记录我的centos使用之路，逐渐驯服centos的过程，最开始用其实很迷，后来越来越了解。本文仅为我可以快速查阅相关命令用，对于其他读者价值较小</p></blockquote><h3 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h3><p> 开机启动保障网页和mc服务器的正常运行<br> <strong>网站</strong></p><pre><code>systemctl start nginxsystemctl start mariadbsystemctl start php-fpm.service</code></pre><p> <strong>mc服务器</strong></p><pre><code>screen -S mccd /opt/Mc11604bash go.sh</code></pre><blockquote><p>习惯性手动开启一下服务，有开机自启  </p></blockquote><h3 id="重启停止"><a href="#重启停止" class="headerlink" title="重启停止"></a>重启停止</h3><p>这里记录服务器上各种软件的各种操作<br><strong>nginx</strong></p><pre><code>systemctl start nginxsystemctl stop nginxsystemctl restart nginxsystemctl enable nginxnginx -t</code></pre><p><strong>php72</strong></p><pre><code>systemctl start php-fpm.servicesystemctl stop php-fpm.servicesystemctl restart php-fpm.servicesystemctl enable php-fpm.service</code></pre><p><strong>mysql</strong></p><pre><code>mysql -u root -p  CREATE DATABASE typecho;     CREATE USER admin@localhost IDENTIFIED BY 'password';     GRANT ALL PRIVILEGES ON typecho.* TO admin@localhost IDENTIFIED BY 'password';  FLUSH PRIVILEGES;systemctl start mariadbsystemctl stop mariadbsystemctl restart mariadbsystemctl enable mariadb</code></pre><p><strong>screen</strong>  </p><pre><code>screen -S screenname  screen -x [会话id]  screen -S screenname -X quit #彻底杀死会话  </code></pre><p><strong>docker</strong></p><pre><code>systemctl start dockersystemctl stop dockersystemctl restart dockersystemctl enable dockercd zhamao-framework-starterdocker run -it --rm -v $(pwd):/app/ -p 20001:20001 zmbot/swoole vendor/bin/start serverreload</code></pre><p><strong>cqhttp</strong></p><pre><code>cd /home/qq./go-cqhttp</code></pre><h3 id="提升文件权限"><a href="#提升文件权限" class="headerlink" title="提升文件权限"></a>提升文件权限</h3><pre><code> chmod 777 文件路径(/*) chmod +x  文件路径(/*)</code></pre><h3 id="改变文件所属用户"><a href="#改变文件所属用户" class="headerlink" title="改变文件所属用户"></a>改变文件所属用户</h3><pre><code>chown -R root(user) 文件路径(/*)chown username filename</code></pre><h3 id="当前路径"><a href="#当前路径" class="headerlink" title="当前路径"></a>当前路径</h3><pre><code>pwd</code></pre><h3 id="查包删除"><a href="#查包删除" class="headerlink" title="查包删除"></a>查包删除</h3><pre><code>rpm -qa|grep 软件名rpm -ev 查找结果find / -name mysqlrm -rf /var/lib/mysqlyum remove 软件名</code></pre><h3 id="执行脚本"><a href="#执行脚本" class="headerlink" title="执行脚本"></a>执行脚本</h3><pre><code>cd 脚本存放位置bash 脚本</code></pre><h3 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h3><pre><code>软件名 -vnginx -vphp -v</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="其他" scheme="https://hesifan.top/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="centos" scheme="https://hesifan.top/tags/centos/"/>
    
    <category term="手册" scheme="https://hesifan.top/tags/%E6%89%8B%E5%86%8C/"/>
    
  </entry>
  
  <entry>
    <title>php笔记</title>
    <link href="https://hesifan.top/2021/02011.html"/>
    <id>https://hesifan.top/2021/02011.html</id>
    <published>2021-02-01T11:22:00.000Z</published>
    <updated>2021-03-11T11:26:39.251Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="基础知识-1"><a href="#基础知识-1" class="headerlink" title="基础知识"></a>基础知识</h3><h4 id="php是什么？"><a href="#php是什么？" class="headerlink" title="php是什么？"></a>php是什么？</h4><p>PHP(PHP: Hypertext Preprocessor，超文本预处理器的缩写)，是一种被广泛应用的开放源代码的、基于服务器端的用于产生动态网页的、可嵌入HTML中的脚本程序语言，尤其适合 WEB 开发。</p><p>当客户端向服务器的程序提出请求时，web服务器根据请求响应对应的页面，当页面中含有php脚本时，服务器会交给PHP解释器进行解释执行，将生成的html代码再回传给客户端，客户端的浏览器解释html代码，最终形成网页格式的页面。</p><h4 id="执行方式"><a href="#执行方式" class="headerlink" title="执行方式"></a>执行方式</h4><p>PHP 代码被包含在特殊的起始符和结束符中，使得网页的脚本可以进出“PHP 模式”。其它用 C 或 Perl 语言写的脚本，需要用大量的命令来编写程序以输出 HTML ，而用PHP 编写一个 HTML 脚本，只需嵌入了一些代码来完成操作（例如，在本例中输出了一些文本）。 和客户端的 JavaScript 不同的是，PHP 代码是运行在服务端的。如果在服务器上建立了如上例类似的代码，则在运行该脚本后，客户端就能接收到其结果，但他们无法得知其背后的代码是如何运作的。甚至可以将 web 服务器设置成让 PHP 来处理所有的 HTML 文件，这么一来，用户就无法得知服务端到底做了什么。</p><h4 id="我的PHP运行环境"><a href="#我的PHP运行环境" class="headerlink" title="我的PHP运行环境"></a>我的PHP运行环境</h4><p>由于我自己有一台学生机，上面我已经安装过了typecho所以服务器上有lmnp环境，所以我通过vscode写php通过winscp上传到服务器通过我自己的二级域名（life.hesifan.top）访问实验.</p><h4 id="C-S与B-S结构"><a href="#C-S与B-S结构" class="headerlink" title="C/S与B/S结构"></a>C/S与B/S结构</h4><p>C/S结构</p><p>C/S （Client/Server）结构，即大家熟知的客户机和服务器结构。它是软件系统体系结构，通过它可以充分利用两端硬件环境的优势，将任务合理分配到Client端和Server端来实现，降低了系统的通讯开销。目前大多数应用软件系统都是Client/Server形式的两层结构</p><p>B/S结构</p><p>B/S（Browser/Server）结构即浏览器和服务器结构。它是随着Internet技术的兴起，对C/S结构的一种变化或者改进的结构。在这种结构下，用户工作界面是通过WWW浏览器来实现，极少部分事务逻辑在前端（Browser）实现，但是主要事务逻辑在服务器端（Server）实现。这样就大大简化了客户端电脑载荷，减轻了系统维护与升级的成本和工作量，降低了用户的总体成本。</p><h4 id="PHP的标记风格"><a href="#PHP的标记风格" class="headerlink" title="PHP的标记风格"></a>PHP的标记风格</h4><pre><code>&lt;?php … … ?&gt;</code></pre><p>这是PHP推荐使用的标记风格。服务器管理员不能禁用这种风格的标记。</p><h4 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h4><p>PHP用分号来分隔简单的语句。复合语句用大括号来标记代码块，如条件测试或循环，在大括号后面不要用分号。和其他语言不一样的是，在PHP中右括号(?&gt;)前的分号不是必选的。</p><h4 id="空白和换行符"><a href="#空白和换行符" class="headerlink" title="空白和换行符()"></a>空白和换行符()</h4><p>一般来说，空白符在PHP中无关紧要。可以将一个语句展开成任意行，或者将语句紧缩在一行。 可以利用这个灵活的格式来使代码更具有可读性（通过排列分配、缩进等）。一些懒惰的程序员利用这种自由的格式创建根本无法阅读的代码，这是不提倡的。</p><h4 id="程序的注释"><a href="#程序的注释" class="headerlink" title="程序的注释"></a>程序的注释</h4><p>PHP支持C、C＋＋和Shell脚本风格的注释，如下：</p><pre><code>// 单行注释/* ...*/  多行注释         （注意：不能嵌套）# 脚本注释</code></pre><h4 id="查看数据"><a href="#查看数据" class="headerlink" title="查看数据"></a>查看数据</h4><p><code>echo</code><br>输出一个或多个变量，他不是函数，不需要使用括号，如果输出多个请用逗号分隔</p><pre><code>echo 1,2,3,4;</code></pre><p><code>var_dump</code><br>打印变量的相关信息</p><pre><code>var_dump(1234);</code></pre><blockquote><p>区别：echo 是直接输出，var_dump输出和带有变量类型</p></blockquote><h3 id="变量知识"><a href="#变量知识" class="headerlink" title="变量知识"></a>变量知识</h3><h4 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h4><p>PHP是弱类型语言，不像其他语言需要对变量进行类型声明。PHP中以 $(美元) 作为前缀来定义变量，以a~z（大小写）或 _ 下划线定义变量名。</p><p>下面是合法的变量名</p><pre><code>$HF =  'hesifan.top';$_name = 'FanHeart';</code></pre><p>下面是非法的变量声明</p><pre><code>$0530 = 'baidu.com' $&amp;* = 'blog.csdn.net'</code></pre><h4 id="弱类型"><a href="#弱类型" class="headerlink" title="弱类型"></a>弱类型</h4><p>PHP是一种非常弱的类型语言。在大多数编程语言中，变量只能保持一种类型的数据，而且这个类型必须在使用变量前声明，例如C语言中。</p><p>而在PHP中，变量的类型通常不是由程序员设定的，确切地说，是根据该变量使用的上下文在运行时（即变量的值）决定的。</p><p>简单来说，<code>var = 1</code>;就是数字，<code>var2 = '1'</code>就是字符串，变量类型是由值决定的。</p><h4 id="传值与引用"><a href="#传值与引用" class="headerlink" title="传值与引用"></a>传值与引用</h4><p>传值赋值<br>直接使用 = 将变量的值赋值给另一个变量。</p><pre><code>&lt;?php//传值赋值$a = 1;$b = $a;$b = 3;echo $a;echo $b;// 输出13?&gt;</code></pre><p>将一个变量的内存地址赋值给另一个变量的行为即传址赋值。需要在 = 等号前加上 <code>&amp;</code> 引用符号，这样两个变量指向内存中的一个地址，任何一个变量的改变都影响到另一个变量，有点类似于快捷方式的概念。</p><pre><code>&lt;?php//引用赋值(传址赋值)$a = 1;$b = &amp;$a;$b = 3;echo $a;echo $b;// 输出33echo  '&lt;hr/&gt;';$a = 9;echo $a;echo $b;// 输出99?&gt;</code></pre><h4 id="可变变量"><a href="#可变变量" class="headerlink" title="可变变量"></a>可变变量</h4><p>可以变量即使用一个变量的值，作为另一个变量名。</p><pre><code>&lt;?php$a = 'hello'; //普通变量$$a = 'world'; //可变变量 等价于 $hello = 'world' echo $a;echo $$a;echo $hello;echo "$a ${$a}"; //输出hello worldecho "$a $hello"; //输出hello world?&gt;</code></pre><h4 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h4><p>变量作用域指变量在代码中可以访问的位置。</p><p>超全局变量<br>可以代码的任何位置都可以访问的变量</p><pre><code>&lt;?phpvar_dump($_GET);function show(){    print_r($_GET);}show();?&gt;</code></pre><table><thead><tr><th align="left">变量</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">$_GET</td><td align="left">地址栏GET提交</td></tr><tr><td align="left">$_POST</td><td align="left">表单POST提交</td></tr><tr><td align="left">$_FILES</td><td align="left">文件上传变量</td></tr><tr><td align="left">$_SESSION</td><td align="left">会话变量</td></tr><tr><td align="left">$_COOKIE</td><td align="left">cookie值变量</td></tr><tr><td align="left">$_GLOBALS</td><td align="left">全局变量</td></tr><tr><td align="left">$_REQUEST</td><td align="left">包含<code>$_GET</code>、<code>$_POST</code>、<code>$_COOKIE</code></td></tr><tr><td align="left">$_SERVER</td><td align="left">服务器环境变量</td></tr></tbody></table><h4 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h4><p>全局声明（函数外声明）的变量会保存在<code>$_GLOBALS</code>中，函数内默认不能访问到全局变量，在函数中访问需要使用 global 关键字。</p><pre><code>&lt;?php$name = 'FanHeart';function show(){    //echo $name ; 这时该普通变量就不在变量作用域无法访问    global $name;    echo $name;    //利用global引入全局变量，但不推荐使用这种方法，会造成变量污染    echo $GLOBALS['name'];    //使用全局数组$GLOBALS调⽤用全局变量。推荐使用这个方法 }show();?&gt;</code></pre><p>也可以使用全局数组<code>$GLOBALS</code>调⽤用全局变量量。 如：</p><pre><code> $GLOBALS['name'];</code></pre><h4 id="检测变量"><a href="#检测变量" class="headerlink" title="检测变量"></a>检测变量</h4><p>通过isset 函数可以检测变量是否定义。</p><pre><code>&lt;?php$name = 'FanHeart';var_dump(isset($name));//检测变量若无则输出false若有则为true?&gt;</code></pre><h4 id="变量销毁"><a href="#变量销毁" class="headerlink" title="变量销毁"></a>变量销毁</h4><p>php在全部代码执行结束后会删除所有变量，也使用 unset 函数可以在程序运行中删除变量。</p><pre><code>&lt;?php$name = 'FanHeart';unset($name);var_dump(isset($name));//输出false说明变量已经被删除了?&gt;</code></pre><p>全局变量不能在函数中删除</p><pre><code>&lt;?php$name = 'FanHeart';function show(){    global $name;    unset($name);    echo $name;}show();echo $name;//依然可以输出一个FanHeart,但是对于该函数内此变量被删除了。?&gt;</code></pre><h4 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h4><p>PHP支持声明函数变量为静态的(static)。一个静态变量在所有对该函数的调用之间共享，并且仅在脚本的执行期间函数第一次被调⽤时被初始化。 要声明函数变量为静态的⽤关键字static。通常静态变量的第一次使⽤用时赋予⼀个初始值。</p><pre><code>&lt;?phpfunction calculation(){    $num = 1;    $num = $num + $num;    return $num;}echo calculation();echo calculation();echo calculation();//三次输出都是2?&gt;&lt;?phpfunction calculation(){    static $num = 1;    $num = $num + $num;    return $num;}echo calculation();echo calculation();echo calculation();//三次输出分别为248，这样就实现了变量的循环调用?&gt;</code></pre><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>使用不同数据类型储存不同数据，就像我们家里面放衣服和放洗手液会使用用不同的容器一样。下面是常用PHP数据类型表：</p><table><thead><tr><th align="left">类型</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">integer</td><td align="left">整型</td></tr><tr><td align="left">float</td><td align="left">浮点型</td></tr><tr><td align="left">string</td><td align="left">字符串</td></tr><tr><td align="left">boolean</td><td align="left">布尔型</td></tr><tr><td align="left">array</td><td align="left">数组</td></tr><tr><td align="left">object</td><td align="left">对象</td></tr></tbody></table><h4 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h4><p>整型可以是十进制、八进制、十六进制。<br>php函数可以轻松实现进位制的转化<br>如十六进制转化十进制函数hexdc（）</p><pre><code>&lt;?php     var_dump(hexdec(FFF);    //输出int(4095)?&gt;</code></pre><p>其他进位制之间的转化函数如下</p><pre><code>bindec() //二进制转换为十进制decbin() //十进制转换为二进制dechex() //十进制转换为十六进制decoct() //十进制转换为八进制hexdec() //十六进制转换为十进制octdec() //八进制转换为十进制base_convert(number,frombase,tobase)//任意进位制之间的转化</code></pre><p>任意进位制转化实例及其参数说明如下</p><pre><code>&lt;?php$oct = "0530";$dec = base_convert($oct,8,10);echo "八进制的 $oct 等于十进制的 $dec。";?&gt;</code></pre><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">number</td><td align="left">必需，原始值</td></tr><tr><td align="left">frombase</td><td align="left">必需，原进制</td></tr><tr><td align="left">tobase</td><td align="left">必需，目标进制</td></tr></tbody></table><h4 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h4><p>浮点数表示实数，可理解为有限或无限小数。</p><h4 id="布尔型"><a href="#布尔型" class="headerlink" title="布尔型"></a>布尔型</h4><p>当转换为 boolean 时，以下值被认为是FALSE</p><table><thead><tr><th align="left">布尔值</th><th align="left">FALSE</th></tr></thead><tbody><tr><td align="left">整型值</td><td align="left">0（零）</td></tr><tr><td align="left">浮点型值</td><td align="left">0.0（零）</td></tr><tr><td align="left">字符串</td><td align="left">空白字符串</td></tr><tr><td align="left">字符串</td><td align="left">“0”</td></tr><tr><td align="left">数组</td><td align="left">没有成员变量的数组</td></tr><tr><td align="left">特殊类型</td><td align="left">NULL（包括尚未设定的变量）</td></tr></tbody></table><blockquote><p>所有其它值都被认为是 TRUE</p></blockquote><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><h5 id="引号"><a href="#引号" class="headerlink" title="引号"></a>引号</h5><p>字符串可以用双引号<code>"" </code>或 <code>''</code> 号包含，区别是双引号中可以解析变量。</p><pre><code>&lt;?php $string = "hesifan.top";echo "FanHeart的网站{$string}!"//双引号可以解析变量输出为FanHeart的网站hesifan.top！单引号则为FanHeart的网站$string!用花括号可以避免变量错误，因为若变量后面有符合变量规范的字符会和被当作变量名?&gt;</code></pre><blockquote><p>用花括号可以避免变量错误，因为若变量后面有符合变量规范的字符会和被当作变量名<br>header响应头设置解决中文乱码问题</p></blockquote><pre><code>header('Content-type:text/html;charset=utf-8');</code></pre><h5 id="转义符"><a href="#转义符" class="headerlink" title="转义符\"></a>转义符<code>\</code></h5><p>转义是将有多种含义的字符进行转换，比如 $即是变量前缀也是美元符号，就需要转义在不同场景进行改变。</p><pre><code>&lt;?php $string = "FanHeart \"hesifan.top\"";echo $string;echo '输出\\';echo '&lt;hr/&gt;';echo "定义变量方法\t\$string = 'hesifan.top'";//输出定义变量方法$string = 'hesifan.top'?&gt;</code></pre><h5 id="定界符-lt-lt-lt"><a href="#定界符-lt-lt-lt" class="headerlink" title="定界符<<<"></a>定界符<code>&lt;&lt;&lt;</code></h5><p>文本表现的就和双引号字符串一样，在定界符文本中不需要转义引号，适合输入大量文本。</p><pre><code>&lt;?php  $str=&lt;&lt;&lt;html&lt;h1 style="color:pink"&gt;hesifan.top&lt;/h1&gt; &lt;script&gt;    document.write('FanHeart');&lt;/script&gt;html;echo $str;?&gt;</code></pre><blockquote><p>结束符必须从第一列开始，并且后面除了分号以外不能包含任何其他字符，空格也不可以。</p></blockquote><h5 id="连接符"><a href="#连接符" class="headerlink" title="连接符."></a>连接符<code>.</code></h5><p>多个字符串使用 . 符号连接</p><pre><code>&lt;?php $string1 = 'FanHeart';$string2 = 'hesifan.top';echo $string1.'=&gt;'.$string2;?&gt;</code></pre><h5 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h5><p><code>strlen()</code> — 取得字符串长度传度的函数</p><pre><code>&lt;?php  $string = 'blog.hesifan.top';echo strlen($string);echo '&lt;hr/&gt;';$string = '凡尘纪';echo mb_strlen($string,utf8);// 中文是宽字节一个汉字等于3个字节?&gt;</code></pre><blockquote><p>需要使用函数时优先查找使用php文档里的提供的函数效率最高<br><code>trim</code> 截去字符串首尾的内容</p></blockquote><pre><code>&lt;?php$string = ' hesifan.top  ';echo strlen(trim($string,' pot'));# 从前后删除 pot和空格字符?&gt;</code></pre><p><code>rtrim</code>从右侧删除、<code>ltrim</code>从左侧删除</p><pre><code>&lt;?php$string = ' hesifan.top ';echo strlen(rtrim($string,' pot'));?&gt;</code></pre><table><thead><tr><th align="left">函数</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">strtolower</td><td align="left">字母转为小写</td></tr><tr><td align="left">strtoupper</td><td align="left">字母转大写</td></tr><tr><td align="left">ucfirst</td><td align="left">将字符串的首字母转换为大写</td></tr><tr><td align="left">ucwords</td><td align="left">将字符串中每个单词的首字母转换为大写</td></tr></tbody></table><pre><code>&lt;?php $string = ' hesifan.top ';echo strlen($string);//输出13echo trim($string,' pot.');//输出hesifanecho strtolower('Hello World');//输出hello worldecho strtoupper('hello world');//输出HELLO　ＷＯＲＬＤecho ucfirst('hello world');//输出Hello worldecho ucwords('hello world');//输出Hello World?&gt;</code></pre><p><code>md5</code>计算字符串的 MD5 散列值，以 32 字符十六进制数字形式返回散列值.<br>原来用于账户密码加密<br>现在可以用于存储用户信息<br>不要单纯理解为加密，他的特点时不可逆的生成一个32位hexo字符串</p><pre><code>&lt;?php $file = 'user-1-info';echo md5($file).'.php';$view = 'admin/master.php';echo md5($view).'.php';?&gt;</code></pre><p><code>explode</code>  使用一个字符串分割另一个字符串</p><pre><code>&lt;?php $arr = (explode('.','hesifan.top'));echo  $arr[0];echo '&lt;hr/&gt;';echo  $arr[1];?&gt;</code></pre><blockquote><p>php 中有顺序时从0开始</p></blockquote><p>处理图像文件类型（后面会有更好的方式，仅用于举例）</p><pre><code>&lt;?php $file = 'card.jpg';$arr =explode('.',$file);print_r($arr).'&lt;hr/&gt;';//输出Array ( [0] =&gt; card [1] =&gt; jpg )echo $arr[1];//这样就输出了文件格式jpg啦?&gt;</code></pre><p><code>implode</code>将一个一维数组的值转化为字符串</p><pre><code>&lt;?php  $arr =['email','3447851674@qq.com']; echo implode(':',$arr);//输出email：3447851674@qq.com完成合并?&gt;</code></pre><p><code>substr</code>返回字符串的子串,截取函数</p><pre><code>&lt;?php $file = 'user.webp';echo substr($file,0,-5);//输出user从第一个截到倒数五个$ad = '欢迎大家访问我的网站';echo mb_substr($ad,4,-4,'utf-8');//输出访问?&gt;</code></pre><p><code>strstr</code> 查找字符串的首次出现</p><pre><code>&lt;?php$email  = 'name@example.com';$domain = strstr($email, '@');echo $domain; // 输出 @example.com?&gt;</code></pre><p><code>strrchr</code> 查找指定字符在字符串中的最后一次出现</p><pre><code>&lt;?php$file = 'user.jpg';echo strrchr($file, '.'); // 输出.jpg?&gt;</code></pre><p><code>strpos</code> 查找字符串首次出现的位置，如果没找到，将返回 FALSE</p><pre><code>&lt;?php$name ='FanHeart';echo strpos($name, 'a'); // 输出1?&gt;</code></pre><p><code>strrpos</code> 计算指定字符串在目标字符串中最后一次出现的位置</p><pre><code>&lt;?php$name ='FanHeart';echo strrpos($name, 'a'); // 输出5?&gt;</code></pre><p><code>str_replace</code>  子字符串替换</p><pre><code>&lt;?phpecho str_replace('hesifan', 'blog.hesifan', 'hesifan.top'); //输出blog.hesifan.topecho str_replace(['小猫','小狗'], '*', '我家有一只可爱的小猫和小狗');//输出我家有一只可爱的*和*echo str_replace(['小猫','小狗'], ['喵喵','汪汪'], '我家有一只可爱的小猫和小狗'); //输出我家有一只可爱的喵喵和汪汪?&gt;</code></pre><h4 id="NULL"><a href="#NULL" class="headerlink" title="NULL"></a>NULL</h4><p>NULL数据类型只有一个值NULL。<br>1.变量未被赋予任何值<br>2.变量被赋值为NULL<br>3.被unset()函数处理后的变量</p><pre><code>$a;        //变量 $a未被赋予任何变量，值为NULL$b = NULL;    //变量 $b被赋值为NULL$c = 10;        unset($c);    //使用unset()函数处理后，$c为NULL </code></pre><h4 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h4><p>getType()</p><pre><code>&lt;?php$num = 1234;  $type = gettype( $num); var_dump( $type);$var = true;$bool = is_bool( $var);var_dump( $bool);//检测是否为布尔型$int = 1234; $bool = is_int($int); var_dump($bool);//检测是否为整型$num = 1.1234; $bool = is_float($num); var_dump($bool);//检测是否为浮点数$string = 'FanHeart'; $bool = is_string($string); var_dump($bool);//检测是否为字符串$var = null;$bool = is_null($var);var_dump($bool);//检测是否为NULL?&gt;</code></pre><h4 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h4><p>自动转换</p><p>PHP类型根据值，自动转换</p><pre><code>&lt;?php$num1 = '1'; $num2 = '2'; echo $num1 + $num2; # 字符串转为数字相加?&gt;</code></pre><h3 id="常量使用"><a href="#常量使用" class="headerlink" title="常量使用"></a>常量使用</h3><p>常量是一个简单值的标识符（名字）。常量默认为大小写敏感。按照惯例常量标识符总是大写的。</p><p><strong>常量特性</strong></p><ul><li>常量前面没有美元符号（$）</li><li>常量只能用define() 函数定义，而不能通过赋值语句</li><li>常量一旦定义就不能被重新定义或者取消定义</li><li>常量的值用来定义 整型，浮点，字符串，布尔值，数组（PHP7新增）</li><li>常量可以不用理会变量范围的可以在任何位置访问</li></ul><p><strong>声明常量</strong></p><p>常量可以使用 const 和 define 定义。</p><pre><code>&lt;?php define('NAME','FanHeart',true);//define('NAME','HSF');//常量规范常量大写echo NAME;const URL  = 'hesifan.top';echo '&lt;hr/&gt;';echo URL;function show(){    echo URL;    echo NAme;}show();echo '&lt;hr/&gt;';echo PHP_VERSION;echo '&lt;hr/&gt;';echo PHP_OS;class demo{    public function show(){        echo __METHOD__;    }}(new demo())-&gt;show();print_r(get_defined_constants(categorize:true));?&gt;</code></pre><blockquote><p><code>const</code>是语言结构，在编译时要比<code>define</code>快,<code>define</code> 可以设置第三个参数为true，来定义不区分大小写的常量,类文件中定义常量也使用<code>const</code>，所以用<code>const</code>统一易读。</p></blockquote><pre><code>define('常量名',值); define('WEBNAME','houdunwang');echo WEBNAME;</code></pre><p><strong>常量检测</strong></p><pre><code>$bool = defined('WEBNAME');var_dump($bool); // 结果是false</code></pre><p><strong>系统常量</strong></p><pre><code>__DIR__            文件所在目录__FILE__        文件路径__LINE__        程序代码行号PHP_VERSION     显示PHP版本PHP_OS           显示服务器的操作系统版本TRUE            boolean值真(true)支持小写常量FALSE             boolean值假(false)支持小写常量__FUNCTION__    函数名称__METHOD__        方法名称__CLASS__        类名称</code></pre><blockquote><p>使用函数 get_defined_constants(true) 可以获取当前可使用的所有常量。</p></blockquote><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><h4 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h4><pre><code>&lt;?php $a = 3;$b = 4;echo $a%$b;//输出3 echo $a++;//输出3，后加后减时先赋值后加减，所以输出时还是原值，但还是进行了加减在输出$a则为4echo --$a;//输出2?&gt;</code></pre><table><thead><tr><th align="left">运算符</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">$a+$b</td><td align="left">加法 $a和$b的和</td></tr><tr><td align="left">$a-$b</td><td align="left">减法 $a和$b的差</td></tr><tr><td align="left">$a*$b</td><td align="left">乘法 $a和$b的积</td></tr><tr><td align="left">$a/$b</td><td align="left">除法 $a除以$b的商</td></tr><tr><td align="left">$a<code>%</code> $b</td><td align="left">取模 $a除以$b后的余</td></tr><tr><td align="left">++$a    前加 $a 的值先加一，然后进行操作</td><td align="left"></td></tr><tr><td align="left">$a++</td><td align="left">后加 $a 的值先进行操作，后加一</td></tr><tr><td align="left">–$a</td><td align="left">前减 $a 的值先减一，然后进行操作</td></tr><tr><td align="left">$a–</td><td align="left">后减 $a 的值先进行操作，后减一</td></tr></tbody></table><h4 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h4><pre><code>$a *= $b;等价于$a = $a*&amp;b ;</code></pre><table><thead><tr><th align="left">运算符</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">=</td><td align="left">右边值赋值给左边变量</td></tr><tr><td align="left">+=</td><td align="left">左边值加上右边值赋值给左边变量</td></tr><tr><td align="left">-=</td><td align="left">左边值减掉右边值赋值给左边变量</td></tr><tr><td align="left">*=</td><td align="left">左边值乘以右边值赋值给左边变量</td></tr><tr><td align="left">/=</td><td align="left">左边值除以右边值赋值给左边变量</td></tr><tr><td align="left">.=</td><td align="left">左边字符串连接到右边变量后面</td></tr><tr><td align="left">%=</td><td align="left">左边值对右边值取余数后赋值给左边变量</td></tr></tbody></table><h4 id="字符串运算符"><a href="#字符串运算符" class="headerlink" title="字符串运算符"></a>字符串运算符</h4><table><thead><tr><th align="left">运算符</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">.</td><td align="left">它返回其左右参数连接后的字符串</td></tr><tr><td align="left">.=</td><td align="left">左边字符串连接到右边变量后面</td></tr></tbody></table><h4 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h4><pre><code>&lt;?php   $a = 0; $b = false; var_dump($a == $b);//输出真，两个等号会进行转换，三个为假 ?&gt;</code></pre><table><thead><tr><th align="left">运算符</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">$a==$b</td><td align="left">等于 TRUE，如果$a等于$b</td></tr><tr><td align="left">$a===$b</td><td align="left">全等于 TRUE，如果$a等于$b，并且类型也相同</td></tr><tr><td align="left">$a!=$b</td><td align="left">不等 TRUE，如果$a不等于$b</td></tr><tr><td align="left">$a&lt;&gt;$b</td><td align="left">不等 TRUE，如果$a不等于$b</td></tr><tr><td align="left">$a!==$b</td><td align="left">非全等 TRUE，如果$a不等于$b，或者类型不同</td></tr><tr><td align="left">$a&lt;$b</td><td align="left">小于 TRUE，如果$a严格小于$b</td></tr><tr><td align="left">$a&gt;$b</td><td align="left">大于 TRUE，如果$a严格$b</td></tr><tr><td align="left">$a&lt;=$b</td><td align="left">小于等于 TRUE，如果 $a 小于或者等于$b</td></tr><tr><td align="left">$a&gt;=$b</td><td align="left">大于等于 TRUE，如果 $a 大于或者等于$b</td></tr></tbody></table><h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><table><thead><tr><th align="left">运算符</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">$a and $b</td><td align="left">逻辑与 TRUE，如果 $a 与 $b 都为 TRUE</td></tr><tr><td align="left">$a or $b</td><td align="left">逻辑或 TRUE，如果 $a 或 $b 任一为TRUE</td></tr><tr><td align="left">!$a</td><td align="left">逻辑非 TRUE，如果 $a 不为 TRUE</td></tr><tr><td align="left">$a &amp;&amp; $b</td><td align="left">逻辑与 TRUE，如果 $a 与 $b 都为TRUE</td></tr><tr><td align="left">$a 或 $b</td><td align="left">逻辑或 TRUE，如果 $a 或 $b 任一为TRUE</td></tr></tbody></table><blockquote><p><code>and</code>与<code>&amp;&amp;</code> 、<code>or</code>与<code>||</code>是同一逻辑运算符的两种写法，但优先级不同。这四个符号的优先允许从高到低是：<code>&amp;&amp;</code>、<code>||</code>、<code>AND</code>、<code>OR</code>。</p></blockquote><h4 id="三元表达式"><a href="#三元表达式" class="headerlink" title="三元表达式"></a>三元表达式</h4><p>变量=(表达式)？值1:值2; 当表达式的返回值为true时，$变量被赋予值1，否则被赋予值2</p><pre><code>&lt;?php$var = 1;$true = '真';$false = '假';echo $var?$true:$false;//通过第一个值的真假来控制输出第二个值还是第三个为真则二为假则三?&gt;</code></pre><blockquote><p>PHP 7 新增加的 NULL 合并运算符（??）是用于执行isset()检测的三元运算的快捷方式。 ?: 只判断 true 或 false ，而 ?? 判断变量存在并且值不为null</p></blockquote><pre><code>&lt;?php  $var = null;echo $var??'no';//输出no$var = '1';echo $var??'no';//输出1/*若第一个值不存在或为null则输出第二个值反之存在则输出第一个值*同时具有输出，和检测是否为空的功能*///若用？：则要用isset函数检测如 //echo $var?'yes':'no';若$var不存在会报错echo isset($var)?'yes':'no';//这样就可以实现检测?&gt;</code></pre><h4 id="屏蔽错误"><a href="#屏蔽错误" class="headerlink" title="屏蔽错误"></a>屏蔽错误</h4><p>@ 运算符用于屏蔽表达式警告错误</p><pre><code>@(20/0); </code></pre><h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><h4 id="if-else-elseif"><a href="#if-else-elseif" class="headerlink" title="if/else/elseif"></a>if/else/elseif</h4><p>当条件表达式的值为真（true）时，PHP将执行语句组，相反条件表达式的值为假（false）时，PHP将不执行语句组，忽略语句组执行下面的语句。</p><p><strong>花括号形式</strong></p><pre><code>&lt;?php$status = false; if($status){     echo 'FanHeart'; } else{     echo 'hesifan.top'; }?&gt;</code></pre><p><strong>简化形式适合夹套书写html</strong></p><pre><code>&lt;?php $status = false;if($status):  ?&gt;    &lt;h1&gt;真&lt;/h1&gt;&lt;?php else: ?&gt; f   &lt;h1&gt;假&lt;/h1&gt;&lt;?phpendif;?&gt;</code></pre><p><strong>多条件的</strong></p><pre><code>&lt;?php $age = 10;if($age&lt;15){    echo '儿童';}elseif($age&lt;30){    echo '青年';}elseif($age&lt;50){    echo '中年';}else{    echo '老年';}?&gt;&lt;?php $age = 10;if($age&lt;15):    echo '儿童';elseif($age&lt;30):    echo '青年';elseif($age&lt;50):    echo '中年';else:    echo '老年';endif;?&gt;</code></pre><h4 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h4><p>switch设置多个执行代码块，break指令终止向下执行，default为上面条件都不满足时执行的默认代码块。</p><pre><code>&lt;?phpswitch ($status) {case 'success':    echo '成功';    break;case 'error':    echo '错误';    break;case 'warning':    echo '警告';    break;}?&gt;</code></pre><p>也可以使用以下写法</p><pre><code>&lt;?phpswitch ($status) :    case 'success':        echo '成功';        break;    case 'error':        echo '错误';        break;    case 'warning':        echo '警告';        break;endswitch;</code></pre><h4 id="while"><a href="#while" class="headerlink" title="while"></a>while</h4><p>当while循环语句中表达式（循环控制语句）的结果为真时，程序将反复执行同一段程序：循环体（ while中的语句或语句序列），直到满足一定的条件（表达式的结果为假时）后才停止执行该段程序。</p><pre><code>&lt;?php$num = 10;while ($num&gt;0) {    echo($num--).'&lt;br/&gt;';}//也可以使用以下写法$num = 10;while ($num&gt;0):    echo($num--).'&lt;br/&gt;';endwhile;?&gt;</code></pre><h4 id="do…while"><a href="#do…while" class="headerlink" title="do…while"></a>do…while</h4><p>与while的差别是条件后判断。</p><pre><code>&lt;?php$num = 10;do {    echo($num--).'&lt;hr/&gt;';} while ($num&gt;0);?&gt;</code></pre><h4 id="for"><a href="#for" class="headerlink" title="for"></a>for</h4><pre><code>for(表达式1;表达式2;表达式3){    语句或语句序列;}// 表达式1为循环初始条件；// 表达式2为循环控制条件；// 表达式3为控制变量递增；</code></pre><pre><code>&lt;?phpfor ($num=10;$num&gt;0;$num--) {    echo $num.'&lt;hr/&gt;';}// 也可以使用以下写法for ($num=10;$num&gt;0;$num--) :    echo $num.'&lt;hr/&gt;';endfor;?&gt;</code></pre><h4 id="break-与-continue"><a href="#break-与-continue" class="headerlink" title="break 与 continue"></a>break 与 continue</h4><p><strong>break</strong></p><p>我们之前在 switch 条件判断中已经使用过 break 关键字，它会使得程序流程离开 switch 本体中的语句，如果 break 使用在 for、while 或 do-while 循环结构中时，将会使得程序离开该层循环。</p><pre><code>&lt;?phpdo {    if (!isset($num)) {        $num=10;    }    if ($num==0) {        break;    }    echo($num--).'&lt;hr/&gt;';} while (true);?&gt;</code></pre><blockquote><p>break 在多层循环嵌套使用时，可以指定跳转出层数。</p></blockquote><pre><code>&lt;?php$num=0;while (true):    $num++;    switch ($num) {        case $num%2==0:            echo $num."&lt;hr/&gt;";            break;        case $num%15==0:            echo $num."&lt;hr/&gt;";            break 2;    }endwhile;?&gt;</code></pre><h4 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h4><p>continue 的作用与 break 有点类似，continue 若使用在 for、while 或 do-while循环结构中，当程序执行至 continue 时，之后的语句将直接被略过，而直接执行下一次的循环动作。</p><pre><code>&lt;?phpfor ($num=10;$num&gt;0;$num--) {    if(!($num%2))continue;    echo $num.'&lt;hr/&gt;';}?&gt;</code></pre><h3 id="文件引入"><a href="#文件引入" class="headerlink" title="文件引入"></a>文件引入</h3><p><strong>include &amp; require</strong></p><p>使用include和require 将文件导入，就像把该文件粘贴到使用函数的地方。</p><blockquote><p>include( )与require ( )区别在于错误处理方式，当引入产生错误时include( )产生一个警告而require( )则导致一个致命错误。</p></blockquote><pre><code>&lt;?phpinclude './test.php'; echo 'test'; //如果test.php文件不存在会报一个warning错误，但是可以输出test?&gt;</code></pre><blockquote><p>可以使用 @ 屏蔽incluce加载警告错误</p></blockquote><pre><code>&lt;?phpif (!@include 'a.php') {    echo '文件不存在';}?&gt;</code></pre><p>require 加载失败时将终止程序执行</p><pre><code>require './test.php'; echo 'test'; //如果test.php文件不存在会报一个fatal错误，不可以输出test</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习" scheme="https://hesifan.top/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="php" scheme="https://hesifan.top/tags/php/"/>
    
    <category term="笔记" scheme="https://hesifan.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="总结" scheme="https://hesifan.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>centos7.6全指令安装typecho及其php环境</title>
    <link href="https://hesifan.top/2021/012225762.html"/>
    <id>https://hesifan.top/2021/012225762.html</id>
    <published>2021-01-22T11:01:00.000Z</published>
    <updated>2021-03-05T13:46:24.190Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>最初安装typecho只是为了搞生活小站，体验了其后台功能之后果断选择使用typecho。后台真的香。一路上安装及其配置过程中也遇到不少坑，在此记录一下，以便日后查阅。  </p></blockquote><h2 id="安装lnmp环境"><a href="#安装lnmp环境" class="headerlink" title="安装lnmp环境"></a>安装lnmp环境</h2><p>运行typecho的环境：nginx  mysql php下面记录其安装及配置过程。  </p><ul><li>lnmp的运行原理：<br><img src="https://7.dusays.com/2021/01/22/f0937180405a4.png">  </li></ul><h3 id="配置额外的yum源地址"><a href="#配置额外的yum源地址" class="headerlink" title="配置额外的yum源地址"></a>配置额外的yum源地址</h3><p>安装nginx mysql php过程中需要配置额外的yum源地址,包括epel-release和webtatic，否则会报错不能找到相关软件包。你可以选择以下两种中的任一种安装。</p><pre><code>rpm -Uvh https://dl.Fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-12.noarch.rpmrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</code></pre><p>或</p><pre><code>yum install epel-release -yrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</code></pre><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><p>通过直接添加官方源后 yum 方式安装nginx。添加nginx源文件配置 /etc/yum.repos.d/nginx.repo，编辑添加以下内容</p><pre><code>[nginx]name=nginx repobaseurl=http://nginx.org/packages/centos/7/$basearch/gpgcheck=0enabled=1</code></pre><p>nginx官方源地址</p><pre><code>yum list |grep nginx</code></pre><p>查询下配置源是否成功<br>然后安装 nginx执行：</p><pre><code>yum -y install nginx</code></pre><p>nginx启动并加入自启动：</p><pre><code>systemctl start nginxsystemctl enable nginx</code></pre><h3 id="安装mysql-MariaDB"><a href="#安装mysql-MariaDB" class="headerlink" title="安装mysql(MariaDB)"></a>安装mysql(MariaDB)</h3><p>CentOS7 官方源中把 mysql 换成了 MariaDB，<br>因此我们这里以 MariaDB 代替 Mysql，首先执行安装：</p><pre><code>yum install mariadb-server</code></pre><p>安装完成后启动 MariaDB 并设置为开机启动：</p><pre><code>systemctl start mariadbsystemctl enable mariadb</code></pre><p>执行脚本通过交互的方式对 MariaDB 进行一些设置：</p><pre><code>/usr/bin/mysql_secure_installation</code></pre><p>全默认即可  </p><h3 id="安装php72w"><a href="#安装php72w" class="headerlink" title="安装php72w"></a>安装php72w</h3><pre><code>yum -y install php72w php72w-cli php72w-fpm php72w-common php72w-devel php72w-embedded php72w-gd php72w-mbstring php72w-mysqlnd php72w-opcache php72w-pdo php72w-xml</code></pre><p>安装完成以后，启动服务并加入自启动</p><pre><code>systemctl start php-fpm.servicesystemctl enable php-fpm.service</code></pre><blockquote><p>若以前安装过其他版本的php可用以下命令清除<code>yum -y remove php*</code>  </p></blockquote><h3 id="php配置的一些安全设置"><a href="#php配置的一些安全设置" class="headerlink" title="php配置的一些安全设置"></a>php配置的一些安全设置</h3><p>修改这个配置文件/etc/php.ini<br>修改php默认配置：</p><pre><code>cgi.fix_pathinfo=1 #这个不改后面typecho会有问题提前修改upload_max_filesize = 600M;post_max_size = 600M;max_execution_time=600;</code></pre><blockquote><p>这几项都在php.ini里你可以选择使用vi修改，我自己一般都是用winscp修改  </p></blockquote><h3 id="修改php-fpm配置"><a href="#修改php-fpm配置" class="headerlink" title="修改php-fpm配置"></a>修改php-fpm配置</h3><p>修改这个配置文件/etc/php-fpm.d/<a href="http://www.conf/">www.conf</a><br>同样先展示下需要修改的列表清单：</p><pre><code>listen= /var/run/php-fpm/php-fpm.socklisten.owner = nginxlisten.group = nginxlisten.mode = 0666user = nginxgroup = nginxpm = dynamic 生成动态进程pm.max_children = 10 最大可以启动多少进程pm.start_servers = 5 初始启动多少进程（默认数值推荐为最小备用+（最大备用-最小备用）/2）pm.min_spare_servers = 2 最少备用的进程数pm.max_spare_servers = 10 最大备用的进程数pm.max_requests = 500 到达多少请求后自动结束进程rlimit_files = 1024 一次请求的最大字节数</code></pre><p>最后将php-fpm并加入自启动</p><pre><code>systemctl enable php-fpm</code></pre><p>重启nginx和php-fpm:</p><pre><code>systemctl restart php-fpmsystemctl restart nginx</code></pre><h3 id="配置网站数据库"><a href="#配置网站数据库" class="headerlink" title="配置网站数据库"></a>配置网站数据库</h3><p>设置一个typecho的数据库</p><pre><code>mysql -u root -p</code></pre><p>进入mysql后，素质三连：</p><pre><code>CREATE DATABASE typecho;CREATE USER admin@localhost IDENTIFIED BY 'password';GRANT ALL PRIVILEGES ON typecho.* TO admin@localhost IDENTIFIED BY 'password';</code></pre><p>创一个叫typecho的数据库，随你喜好取名，取个专用管理用户名admin，自己改成喜欢的，<br>弄个密码，自己设置，改下password，千万别直接抄上面的。<br>注意数据库指令后面的分号。<br>最后刷新下这些改变和权限：</p><pre><code>FLUSH PRIVILEGES;</code></pre><h3 id="配置nginx-conf"><a href="#配置nginx-conf" class="headerlink" title="配置nginx.conf"></a>配置nginx.conf</h3><p>在/etc/nginx/nginx.conf中新增</p><pre><code>        server {        listen       80;    location / {            server_name  blog.hesifan.top;#你自己的域名            root   /home/typecho;#根目录位置            index  index.html index.php ;        }              location = /50x.html {            root   html;        }        location ~.*\.php(\/.*)*$ {            fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;            fastcgi_param PATH_INFO $fastcgi_script_name;            include fastcgi_params;        }    }</code></pre><blockquote><p>location ~.<em>.php(/.</em>)*$这一行之前害我很久留个记号，拿个小本本记下他的罪行 。<br>记得每次改完nginx.conf都要重启nginx</p></blockquote><h2 id="安装typecho"><a href="#安装typecho" class="headerlink" title="安装typecho"></a>安装typecho</h2><p>直接wget安装，快捷一点：</p><pre><code>cd /home/typecho #自己创建的，你也可以自己在其他位置创建wget http://typecho.org/downloads/1.1-17.10.30-release.tar.gz</code></pre><p>解压</p><pre><code>tar -xzvf 1.1-17.10.30-release.tar.gzcp -R build/* ./</code></pre><p>清理掉不需要的文件夹</p><pre><code>rm -rf build/</code></pre><p>访问nginx.conf中的域名访问就能出现图形界面了，有图形界面就很简单了,不在赘叙。有一个让你手动创建文件的步骤创建一下就好了。  </p><h2 id="安装ssl证书"><a href="#安装ssl证书" class="headerlink" title="安装ssl证书"></a>安装ssl证书</h2><p>nginx.conf上一个server配置中添加如下内容</p><pre><code>    listen 443 ssl;    ssl_certificate /etc/nginx/cert/1_blog.hesifan.top_bundle.crt;    ssl_certificate_key  /etc/nginx/cert/2_blog.hesifan.top.key;</code></pre><p>同时在typecho根目录下config.inc.php中添加</p><pre><code>/** 开启HTTPS */define('__TYPECHO_SECURE__',true);</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="网站" scheme="https://hesifan.top/categories/%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="centos" scheme="https://hesifan.top/tags/centos/"/>
    
    <category term="php" scheme="https://hesifan.top/tags/php/"/>
    
    <category term="mysql" scheme="https://hesifan.top/tags/mysql/"/>
    
    <category term="nginx" scheme="https://hesifan.top/tags/nginx/"/>
    
    <category term="typecho" scheme="https://hesifan.top/tags/typecho/"/>
    
  </entry>
  
  <entry>
    <title>我的mc服务器又开服了</title>
    <link href="https://hesifan.top/2021/011239152.html"/>
    <id>https://hesifan.top/2021/011239152.html</id>
    <published>2021-01-12T02:52:00.000Z</published>
    <updated>2021-03-04T02:28:00.459Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>回顾自己买云服务器的初心其实是用来mc开服和朋友联机玩mc的，后来逐渐走上建站的邪路，最近群里有好兄弟说开个服玩一玩，老腐竹我重操旧业再次开服，一直有一个梦想能有一个很长时间的存档，记得很久以前在b站看了一个玩了四年的存档的视频真的很震撼，这次定个小目标这次服务器要维持一年以上，期间会积极备份数据以防出现意外，当然一年只是最短期限。保存好数据下次开服就可以直接导入继续。由于上几次开服都是用的windows系统，建站之后改用了centos系统所以开服步骤有所变化。故此总结一下，以便下次开服使用。  </p></blockquote><h2 id="安装java环境"><a href="#安装java环境" class="headerlink" title="安装java环境"></a>安装java环境</h2><p>xshell连接主机后输入</p><pre><code>yum install java-1.8.0-openjdk </code></pre><p>自动安装Java8<br>安装完成后查看Java的版本，如果显示出版本号则表明安装成功了。</p><pre><code>java -version</code></pre><h2 id="安装Screen"><a href="#安装Screen" class="headerlink" title="安装Screen"></a>安装Screen</h2><p>这是一个虚拟终端可以让命令在后台运行  </p><pre><code>yum install screen</code></pre><p>它有很多用法，我最常用就这几个:</p><pre><code>screen -S screenname #新建一个叫screenname的screen会话screen -ls #列出当前所有的screen会话screen -r #恢复上一次离线的会话screen -x [会话id] #恢复指定id的会话，id可通过 screen -ls 查看screen -d #离线（不是关闭）当前会话#离线会话还可以通过快捷键C-a d完成（先按组合键Ctrl+a,再按d）screen -S screenname -X quit #彻底杀死会话</code></pre><blockquote><p>安装这个东西的目的是让服务端一直在后台运行保持打开，否则你一xshell服务端就关闭了。  </p></blockquote><h2 id="安装服务端"><a href="#安装服务端" class="headerlink" title="安装服务端"></a>安装服务端</h2><blockquote><p>本文只关注如何配置 CentOS系统使其能运行 Minecraft 服务端，Minecraft 服务端的配置不在此文讨论范围，如果你不熟悉服务端配置可以自行谷歌必应或者百度，顺带放一个我的1.16.4mod服服务端下载网盘地址留给有需要的人。提取码brqs <a href="https://pan.baidu.com/s/1mjSe26py2zzn5jyfx0eIQA">https://pan.baidu.com/s/1mjSe26py2zzn5jyfx0eIQA</a><br>直接将这个服务端上传到你想要放的位置，我一般是用winscp上传。   </p></blockquote><p>创建启动脚本同样可以在本地创建好了上传到服务器必用vim创建方便<br>创建一个run.sh的文件里面写入如下内容然后上传。</p><pre><code>java -Xms1G -Xmx1G  -jar forge-1.16.4-35.1.4.jar nogui</code></pre><h2 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h2><p>切换到存放启动脚本的文件内<br>新建一个screen会话:</p><pre><code>screen -S mc  </code></pre><p>然后接下来的操作都在此会话窗口进行<br>运行</p><pre><code>bash run.sh</code></pre><p>如果想离开（该会话仍会在后台运行）可以Ctrl+a 再按d<br>若想恢复会话:screen -r #恢复上一次离线的会话或<br>screen -x [会话id] 而会话id可通过screen -ls查看<br>开放云服务器25565端口，这个端口是mc使用的需要开放。</p><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>如果你也想加入我的服务器一起玩你需要做以下这几件事（在此你完全没有安装过java版我的世界<br>）</p><ol><li>安装java8，自行搜索引擎解决。</li><li>下载hmcl，可以通过我提供的<a href="https://pan.baidu.com/s/1g38tic4PAhXz1PLMv94YjA">网盘链接</a>下载提取码brqs<br>，里面已经下载好了，相关版本和相关mod.  </li></ol><p>当然这是你什么都没有的情况。<br>你也可以自行下载1.16.4版本，然后问我要mod文件加入mod文件夹，因为服务端装了这几个mod，客户端没有你是进不去的。  </p><h2 id="关于版本和mod"><a href="#关于版本和mod" class="headerlink" title="关于版本和mod"></a>关于版本和mod</h2><p>这次开服思来想去还是选用了1.16.4的版本一来这个版本比较新，可以体验新版本的内容，没有加入一些魔改的模组可以保留原版的风味，加入幸运方块这个mod和一个地图mod，因为我本身是比较喜欢幸运方块这个mod的比较有谁可以拒绝一个可能好运有可能厄运的方块呢。另外想要一起玩的朋友可以考虑加一下这个qq群<code>650928220</code>由于我的云服务器比较便宜可能带不了那么多人，就不直接公布ip地址了。看情况给吧。</p><h2 id="后续调整"><a href="#后续调整" class="headerlink" title="后续调整"></a>后续调整</h2><blockquote><p>今天群里的一个群友<a href="https://blog.idream.ink/">-zhou-</a>说高版本forge的时代已经过去了，我查找了一下资料确实如此。在1.12以前forge还是绝对的神，在1.12以后fabric就站起来，扩展性和稳定性都强于forge。  </p></blockquote><p>简要对比一下两个特点<br><strong>forge</strong><br>mod总多，功能强大，但更新缓慢<br><strong>fabric</strong><br>mod较少，但更新速度极快，赶得上版本更新速度  </p><blockquote><p>由于更换fabric之后，服务端和客户端都要进行相应改变为了方便，本服务器玩家进入服务器简要说明一下玩家需要做的操作。</p></blockquote><ol><li>在hmcl启动器版本列表中点击游戏版本进入游戏管理页面，删除forge，并前往mods文件夹删除所有.jar mod文件，再安装fabric1.16.4对应最新版本0.11.1安装速度较慢，耐心等待一会即可。安装完成后关闭hmcl。</li><li>下载mod<a href="https://pan.baidu.com/s/1CTYIgLUZXkyqEhOAFdwg2Q">通过网盘下载</a>提取码brqs或者找我私发给你。将下载好的mod放入mods文件夹中</li><li>打开游戏，按正常步骤进入即可<blockquote><p>每次找mod都很麻烦所以还是接近原版生存，没加改变游戏内容的mod，大多是辅助类的mod。</p></blockquote></li></ol><p><strong>mod说明：</strong></p><p> 1.fabric适配</p><pre><code>fabric-api-0.29.2+1.16.jar//api保证能正常运行modmenu-1.14.12+build.18.jar//mod列表，fabric和forge不同没有自带的mod列表</code></pre><p> 2.光影</p><pre><code>optifabric-1.8.16.jar//光影前置，fabric本身不可以和potifine兼容。需要安装该mod兼容。OptiFine_1.16.4_HD_U_G6.jar//光影</code></pre><blockquote><p>由于光影对电脑配置要求较高如无加光影的需要可以删除，我电脑开光影挺卡的，羡慕电脑好的人。  </p></blockquote><p> 3.皮肤</p><pre><code>    CustomSkinLoader_Fabric-14.13-SNAPSHOT-199.jar//该mod显示皮肤用</code></pre><p> 4.地图</p><pre><code>fabricmod_VoxelMap-1.10.15_for_1.16.5.jar</code></pre><p> 5.平滑加载</p><pre><code>smoothboot-fabric-1.16.4-1.4.0.jar//优化加载机制，缓解卡顿</code></pre><blockquote><p>渣机拯救者   </p></blockquote><p> 6.录屏</p><pre><code>replaymod-1.16.4-2.5.1.jar//通过该mod可实现流觞录屏截图</code></pre><p> 7.备装</p><pre><code>backslot-1.1.8.jar//多携带一把弓箭和一把剑有轻微bug慎用建议删除。</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="game" scheme="https://hesifan.top/categories/game/"/>
    
    
    <category term="mc" scheme="https://hesifan.top/tags/mc/"/>
    
  </entry>
  
  <entry>
    <title>hexo-matery添加站点统计页面</title>
    <link href="https://hesifan.top/2021/010525338.html"/>
    <id>https://hesifan.top/2021/010525338.html</id>
    <published>2021-01-05T11:41:00.000Z</published>
    <updated>2021-03-05T13:45:40.251Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>之前有不少铁子让我写一写教程，一直在折腾就没空写现在空了打算逐步开始写一写（本站大多数页面都是我从别人网站借鉴来的），写出来能帮助到有需要的好兄弟也是挺棒的。  </p></blockquote><h2 id="演示页面"><a href="#演示页面" class="headerlink" title="演示页面"></a>演示页面</h2><p>由于本站建站时间太短，数据过少，导致 [统计]&lt;<a href="https://hesifan.top/census">https://hesifan.top/census</a> &gt;效果并不好，可以去[大佬的站点]&lt;<a href="https://bestzuo.cn/s/statistics">https://bestzuo.cn/s/statistics</a> &gt;查看效果。</p><h2 id="百度统计"><a href="#百度统计" class="headerlink" title="百度统计"></a>百度统计</h2><p>去百度统计注册账号，添加站点会得到一段js代码以我的为例，每个人都不一样所以要自己注册。</p><pre><code>&lt;script&gt;    var _hmt = _hmt || [];    (function() {    var hm = document.createElement("script");    hm.src = "https://hm.baidu.com/hm.js?8723c5c2669a112d08b51b84e31ef4c2";    var s = document.getElementsByTagName("script")[0];     s.parentNode.insertBefore(hm, s);    })();    &lt;/script&gt;</code></pre><p>将这段js加入head.ejs里，上传百度统计就可以开始记录你站点各种信息了，注意如果你有跳过渲染的页面，该页面需要单独添加这段js代码。  </p><h2 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h2><p>1.在source文件夹下新建文件夹census，在该文件夹中新建一个名字为<code>index.md </code>文本文件<br>的文件内容为</p><pre><code>---title: censusdate: 2020-10-31 10:11:28type: "census"layout: "census"---</code></pre><p>2.在主题-config.yaml文件里菜单menu添加</p><pre><code>统计:    url: /census    icon: fa fa-layer-group</code></pre><p>3.在layout文件夹里新建一个census.ejs文本文件，用于后续写入htmlcss和js</p><blockquote><p>这也是matery主题新建页面通用步骤，将对应的文件名替换即可  </p></blockquote><h2 id="编辑census-ejs文件"><a href="#编辑census-ejs文件" class="headerlink" title="编辑census.ejs文件"></a>编辑census.ejs文件</h2><p>将以下内容，复制到census.ejs文件中需要修改的地方我已经注释了，对照着改就好建议等百度统计积累的时间长一点在添加不然像我一样数据太少不好看。需要自己按月输入数据，动态调用百度统计api有点难。</p><pre><code>&lt;%- partial('_partial/bg-cover') %&gt;&lt;script type="text/javascript" src="&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.js.echarts) %&gt;"&gt;&lt;/script&gt;&lt;main class="content"&gt;       &lt;div class="card"&gt;        &lt;div class="card-content"&gt;        &lt;div id="uv-container" style="min-width: 250px; height: 400px; margin-top: 50px; -webkit-tap-highlight-color: transparent; user-select: none; position: relative;" _echarts_instance_="ec_1609569953900"&gt;&lt;div style="position: relative; width: 800px; height: 400px; padding: 0px; margin: 0px; border-width: 0px; cursor: default;"&gt;&lt;canvas data-zr-dom-id="zr_0" width="1000" height="500" style="position: absolute; left: 0px; top: 0px; width: 800px; height: 400px; user-select: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); padding: 0px; margin: 0px; border-width: 0px;"&gt;&lt;/canvas&gt;&lt;/div&gt;&lt;div style="position: absolute; display: none; border-style: solid; white-space: nowrap; z-index: 9999999; transition: left 0.4s cubic-bezier(0.23, 1, 0.32, 1) 0s, top 0.4s cubic-bezier(0.23, 1, 0.32, 1) 0s; background-color: rgba(50, 50, 50, 0.7); border-width: 0px; border-color: rgb(51, 51, 51); border-radius: 4px; color: rgb(255, 255, 255); font: 14px / 21px &amp;quot;Microsoft YaHei&amp;quot;; padding: 5px; left: 146px; top: 150px; pointer-events: none;"&gt;二月&lt;br&gt;&lt;span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:#d223e7;"&gt;&lt;/span&gt;2020年访客数: -&lt;br&gt;&lt;span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:#3F77FE;"&gt;&lt;/span&gt;2021年访客数: 2,225&lt;/div&gt;&lt;/div&gt;        &lt;div id="pv-container" style="min-width: 250px; height: 400px; margin-top: 50px; -webkit-tap-highlight-color: transparent; user-select: none; position: relative;" _echarts_instance_="ec_1609569953901"&gt;&lt;div style="position: relative; width: 800px; height: 400px; padding: 0px; margin: 0px; border-width: 0px; cursor: default;"&gt;&lt;canvas data-zr-dom-id="zr_0" width="1000" height="500" style="position: absolute; left: 0px; top: 0px; width: 800px; height: 400px; user-select: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); padding: 0px; margin: 0px; border-width: 0px;"&gt;&lt;/canvas&gt;&lt;/div&gt;&lt;div style="position: absolute; display: none; border-style: solid; white-space: nowrap; z-index: 9999999; transition: left 0.4s cubic-bezier(0.23, 1, 0.32, 1) 0s, top 0.4s cubic-bezier(0.23, 1, 0.32, 1) 0s; background-color: rgba(50, 50, 50, 0.7); border-width: 0px; border-color: rgb(51, 51, 51); border-radius: 4px; color: rgb(255, 255, 255); font: 14px / 21px &amp;quot;Microsoft YaHei&amp;quot;; padding: 5px; left: 577px; top: 315px; pointer-events: none;"&gt;九月&lt;br&gt;&lt;span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:#01C2F9;"&gt;&lt;/span&gt;2020年访问量: 14,501&lt;br&gt;&lt;span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:#18D070;"&gt;&lt;/span&gt;2021年访问量: 9,436&lt;/div&gt;&lt;/div&gt;        &lt;div id="refer-container" style="min-width: 250px; height: 400px; margin-top: 50px; -webkit-tap-highlight-color: transparent; user-select: none; position: relative;" _echarts_instance_="ec_1609569953902"&gt;&lt;div style="position: relative; width: 800px; height: 400px; padding: 0px; margin: 0px; border-width: 0px; cursor: default;"&gt;&lt;canvas data-zr-dom-id="zr_0" width="1000" height="500" style="position: absolute; left: 0px; top: 0px; width: 800px; height: 400px; user-select: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); padding: 0px; margin: 0px; border-width: 0px;"&gt;&lt;/canvas&gt;&lt;/div&gt;&lt;div style="position: absolute; display: none; border-style: solid; white-space: nowrap; z-index: 9999999; transition: left 0.4s cubic-bezier(0.23, 1, 0.32, 1) 0s, top 0.4s cubic-bezier(0.23, 1, 0.32, 1) 0s; background-color: rgba(50, 50, 50, 0.7); border-width: 0px; border-color: rgb(51, 51, 51); border-radius: 4px; color: rgb(255, 255, 255); font: 14px / 21px &amp;quot;Microsoft YaHei&amp;quot;; padding: 5px; left: 538px; top: 206px; pointer-events: none;"&gt;访问来源 &lt;br&gt;直达: 16334 (52.67%)&lt;/div&gt;&lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;    &lt;script&gt;        var uvChart=echarts.init(document.getElementById('uv-container'),'shine');        var option={color:['#d223e7','#3F77FE','#01C2F9','#18D070'],title:{text:'站点访客数统计',subtext:'数据来源: 百度统计（自 2020/11/14 开始统计）',textStyle:{color:'#504b4d',}},tooltip:{trigger:'axis'},        legend:{data:['2020年访客数','2021年访客数'],bottom:0,left:'center',textStyle:{color:'#504b4d',}},//修改年份        toolbox:{show:true,feature:{mark:{show:true},magicType:{show:true,type:['line','bar','stack','tiled']},restore:{show:true},saveAsImage:{show:true}}},        calculable:true,xAxis:[{type:'category',boundaryGap:false,data:['一月','二月','三月','四月','五月','六月','七月','八月','九月','十月','十一月','十二月'],        axisLabel:{formatter:'{value}',textStyle:{color:'#929298'}}}],yAxis:[{type:'value',axisLabel:{formatter:'{value}',textStyle:{color:'#929298'}}}],        series:[{name:'2020年访客数',type:'line',smooth:true,itemStyle:{normal:{areaStyle:{type:'default'}}},        data:[null,null,null,null,null,null,null,null,null,null,379,702],//第一个年份对应的数据顺序对应月份        axisLabel:{formatter:'{value}',textStyle:{color:'#929298'}},},        {name:'2021年访客数',type:'line',smooth:true,itemStyle:{normal:{areaStyle:{type:'default'}}},        data:[122,null,null,null,null,null,null,null,null,null,null,null],//第二个年份对应的数据顺序对应月份        axisLabel:{formatter:'{value}',textStyle:{color:'#929298'}},}]};        uvChart.setOption(option);var pvChart=echarts.init(document.getElementById('pv-container'));        var pv_option={color:['#01C2F9','#18D070','#d223e7','#3F77FE'],        title:{text:'站点访问量统计',subtext:'数据来源: 百度统计（自 2020/11/14 开始统计）',        textStyle:{color:'#504b4d',}},legend:{data:['2020年访问量','2021年访问量'],//修改年份        bottom:0,left:'center',textStyle:{color:'#504b4d',}},        tooltip:{trigger:'axis'},toolbox:{show:true,feature:{mark:{show:true},        magicType:{show:true,type:['line','bar','stack','tiled']},        restore:{show:true},saveAsImage:{show:true}}},calculable:true,        xAxis:[{type:'category',boundaryGap:false,data:['一月','二月','三月','四月','五月','六月','七月','八月','九月','十月','十一月','十二月'],        axisLabel:{formatter:'{value}',textStyle:{color:'#929298'}}}],yAxis:[{type:'value',axisLabel:{formatter:'{value}',textStyle:{color:'#929298'}}}],        series:[{name:'2020年访问量',type:'line',stack:'总量',data:[null,null,null,null,null,null,null,null,null,null,2974,4362],axisLabel:{formatter:'{value}',//第一个年份对应的数据顺序对应月份        textStyle:{color:'#929298'}}},{name:'2021年访问量',type:'line',stack:'总量',data:[500,null,null,null,null,null,null,null,null,null,null,null],//第二个年份对应的数据顺序对应月份        axisLabel:{formatter:'{value}',textStyle:{color:'#929298'}}}]};        pvChart.setOption(pv_option);        var referChart=echarts.init(document.getElementById('refer-container'));        var refer_option={title:{text:'站点访客来源统计',itemGap:20,subtext:'数据来源: 百度统计（最近三个月的统计数据）',left:'right',textStyle:{color:'#504b4d',}},        tooltip:{trigger:'item',        formatter:'{a} &lt;br/&gt;{b}: {c} ({d}%)'},        legend:{orient:'vertical',left:10,data:['直达','友链','百度','Google','Bing'],//来源        textStyle:{color:'#929298',}},series:[{name:'访问来源',type:'pie',selectedMode:'single',radius:[0,'30%'],label:{position:'inner'},labelLine:{show:false},        data:[{value:5982,name:'直接访问',selected:true},{value:1756,name:'外链'},{value:238,name:'搜索'}]},//大类数据，修改value后面的值        {name:'访问来源',type:'pie',radius:['40%','55%'],        label:{formatter:'{a|{a}}{abg|}\n{hr|}\n  {b|{b}：}{c}  {per|{d}%}  ',backgroundColor:'#eee',borderColor:'#aaa',borderWidth:1,borderRadius:4,rich:{a:{color:'#999',lineHeight:22,align:'center'},hr:{borderColor:'#aaa',width:'100%',borderWidth:0.5,height:0},b:{fontSize:16,lineHeight:33},per:{color:'#eee',backgroundColor:'#334455',padding:[2,4],borderRadius:2}}},        data:[{value:5982,name:'直达'},{value:1756,name:'友链'},{value:126,name:'百度'},{value:92,name:'Google'},{value:19,name:'Bing'}]}]};//各个来源数据，修改value后面的值        referChart.setOption(refer_option);        &lt;/script&gt;&lt;/main&gt;</code></pre><p>对于非matery主题的人来说，去echarts官网<a href="https://echarts.apache.org/zh">https://echarts.apache.org/zh</a> 下载 echarts.js将第二行的引入js这段  </p><pre><code>&lt;script type="text/javascript" src="&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.js.echarts) %&gt;"&gt;&lt;/script&gt;</code></pre><p>替换为</p><pre><code>&lt;script src="echarts.min.js"&gt;&lt;/script&gt;</code></pre><p>echarts官网提供了详细的教程有空可以去学习一下挺棒的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="网站" scheme="https://hesifan.top/categories/%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="matery" scheme="https://hesifan.top/tags/matery/"/>
    
  </entry>
  
  <entry>
    <title>centos服务器手动安装PHP环境</title>
    <link href="https://hesifan.top/2021/010561027.html"/>
    <id>https://hesifan.top/2021/010561027.html</id>
    <published>2021-01-05T06:13:00.000Z</published>
    <updated>2021-03-05T13:50:36.001Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>为什么选择手动安装呢，因为不会用宝塔，虽然很多人都说宝塔好用，但我确实不太会用宝塔，还是选择手动安装吧。本文是我在安装过程中对网上教程的总结避坑，以及自己碰到的问题的总结。</p></blockquote><h2 id="安装顺序"><a href="#安装顺序" class="headerlink" title="安装顺序"></a>安装顺序</h2><p>最佳的安装顺序是先安装apache再安装mysql最后PHP，否则后面安装需要对应的依赖包，很麻烦，很容易因为版本的原因出现对应的错误mysqli未安装,GD库未安装等，我就是在处理依赖的时候遇到很多问题，后面发现只要按照顺序安装就没有那么麻烦。</p><h2 id="apache"><a href="#apache" class="headerlink" title="apache"></a>apache</h2><h3 id="安装apache"><a href="#安装apache" class="headerlink" title="安装apache"></a>安装apache</h3><pre><code>yum install httpd //根据提示，输入Y安装即可成功安装</code></pre><h3 id="修改默认端口"><a href="#修改默认端口" class="headerlink" title="修改默认端口"></a>修改默认端口</h3><p>apache默认的端口是80，而我的服务器之前已经安装了nginx占用了80端口启动apache就会报错。</p><p>apache的配置文件路径是<code>/etc/httpd/conf/httpd.conf</code>你可以选择使用vim修改，我是用的是winscp直接连接打开文件修改比较方便，将listen 80改成其他空的端口例如改成8080，记得要在防火墙放行你修改的端口。</p><h3 id="启动apache"><a href="#启动apache" class="headerlink" title="启动apache"></a>启动apache</h3><p>开启apache服务</p><pre><code>systemctl start httpd </code></pre><p>然后打开浏览器输入服务器ip地址加端口就可以出现apache的默认页面，这就代表安装完成了。</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>apache的配置文件路径是<code>/etc/httpd/conf/httpd.conf</code>你可以在配置文件中修改其他配置如默认站点根目录<code>var/www/html</code>,绑定域名等</p><p>其他命令</p><pre><code>systemctl stop httpd  //停止apache服务   systemctl restart httpd //重启apache服务，修改完配置文件需要重启apache以生效systemctl status httpd   //查看apache运行状态  </code></pre><h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><h3 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h3><blockquote><p>这里不得不来吐槽一句了，三个里面MySQL的安装是最慢的，最慢的一次5kb每秒就tm离谱这速度不要下一年啊。而且问题也比较多目前还有一些问题要解决。     </p></blockquote><p>下载mysql源安装包</p><pre><code>wget http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm</code></pre><p>安装mysql源</p><pre><code>yum localinstall mysql57-community-release-el7-8.noarch.rpm</code></pre><p>检查mysql源是否安装成功</p><pre><code>yum repolist enabled | grep "mysql.*-community.*"</code></pre><p>安装MySQL</p><pre><code>yum install mysql-community-server</code></pre><p>然后就慢慢等吧！！！！</p><h3 id="启动MySQL"><a href="#启动MySQL" class="headerlink" title="启动MySQL"></a>启动MySQL</h3><pre><code>systemctl start mysqld</code></pre><h3 id="设置开机自动启动"><a href="#设置开机自动启动" class="headerlink" title="设置开机自动启动"></a>设置开机自动启动</h3><pre><code>systemctl enable mysqldsystemctl daemon-reload</code></pre><h3 id="修改root默认密码"><a href="#修改root默认密码" class="headerlink" title="修改root默认密码"></a>修改root默认密码</h3><blockquote><p>这一步导致我重装过一次，让我又承受了一次缓慢安装的痛苦  </p></blockquote><p> 1.获取临时密码，MySQL5.7为root用户随机生成了一个密码</p><pre><code>grep 'temporary password' /var/log/mysqld.log </code></pre><p>会出现如下内容root@localhost: 后面的就是临时密码，要修改之后才能正常使用mysql</p><pre><code>[root@VM-4-14-centos ~]# grep 'temporary password' /var/log/mysqld.log    2021-01-04T01:03:56.594304Z 1 [Note] A temporary password is generated for root@localhost: P:0w2vuqP6I=</code></pre><p>2.通过临时密码登录MySQL，进行修改密码操作</p><pre><code>mysql -uroot -p</code></pre><p>使用临时密码登录后，不能进行其他的操作，不能直接在-p后输入密码否则会因为安全策略报错<br>3.修改密码</p><pre><code>ALTER USER 'root'@'localhost' IDENTIFIED BY 'yourpassword';</code></pre><p>注意：mysql5.7默认安装了密码安全检查插件（validate_password），默认密码检查策略要求密码必须包含：大小写字母、数字和特殊符号，并且长度不能少于8位。否则会提示ERROR 1819 (HY000): Your password does not satisfy the current policy requirements错误。<br>输入quit; 退出数据库。</p><h3 id="添加远程登录用户"><a href="#添加远程登录用户" class="headerlink" title="添加远程登录用户"></a>添加远程登录用户</h3><p>默认只允许root帐户在本地登录，如果要在其它机器上连接mysql，必须修改root允许远程连接，或者添加一个允许远程连接的帐户，为了安全起见，添加一个新的帐户，在这我修改配置：<br>登入mysql后，更改 “mysql” 数据库里的 “user” 表里的 “host” 项，从”localhost”改称”%”</p><pre><code>mysql -u root -pvmwaremysql&gt;use mysql;mysql&gt;update user set host = '%' where user = 'root';mysql&gt;select host, user from user;</code></pre><h3 id="配置默认编码为utf8"><a href="#配置默认编码为utf8" class="headerlink" title="配置默认编码为utf8"></a>配置默认编码为utf8</h3><p>修改/etc/my.cnf配置文件，在[mysqld]下添加编码配置，同样可以使用vim或者winscp直接修改如下所示：</p><pre><code>[mysqld]character_set_server=utf8init_connect='SET NAMES utf8'</code></pre><p>重启mysql服务以生效配置</p><pre><code>systemctl restart mysqld</code></pre><h3 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h3><p>默认配置文件路径：配置文件：/etc/my.cnf<br>日志文件：/var/log//var/log/mysqld.log<br>服务启动脚本：/usr/lib/systemd/system/mysqld.service socket<br>文件：/var/run/mysqld/mysqld.pid   </p><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><h3 id="安装PHP和PHP组件"><a href="#安装PHP和PHP组件" class="headerlink" title="安装PHP和PHP组件"></a>安装PHP和PHP组件</h3><p>安装命令：  </p><pre><code>yum install phpyum install php-mysql php-gd libjpeg* php-imap php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-mcrypt php-bcmath php-mhash libmcrypt  </code></pre><p>到此我们的apache、mysql、php都安装完了。再次重启一次apache和mysql  </p><pre><code>service httpd  restart    service mysqld restart    </code></pre><h2 id="卸载重装"><a href="#卸载重装" class="headerlink" title="卸载重装"></a>卸载重装</h2><blockquote><p>有些时候当遇到一些很久没能解决的问题的时候，重装也许可以解决问题。  </p></blockquote><h3 id="卸载apache"><a href="#卸载apache" class="headerlink" title="卸载apache"></a>卸载apache</h3><p>先停止httpd服务：</p><pre><code>systemctl stop httpd.service</code></pre><p>如果设置了开机启动则关掉</p><pre><code>systemctl disable httpd.service</code></pre><p>查看httpd依赖包</p><pre><code>rpm -qa | grep httpd</code></pre><p>上面命令返回结果：</p><pre><code>httpd-tools-2.4.6-45.el7.centos.4.x86_64httpd-2.4.6-45.el7.centos.4.x86_64</code></pre><p>挨个删除</p><pre><code>rpm -e httpd-tools-2.4.6-45.el7.centos.4.x86_64rpm -e httpd-2.4.6-45.el7.centos.4.x86_64</code></pre><blockquote><p>注意：根据你自己的查包结果删除。<br>如果一个删除失败，可能会报错另一个包在使用它，则先删除另外一个包  </p></blockquote><h3 id="卸载mysql"><a href="#卸载mysql" class="headerlink" title="卸载mysql"></a>卸载mysql</h3><p>1.删除MySQL组件的命令</p><pre><code>yum remove  mysql mysql-server mysql-libs mysql-server;</code></pre><p>2.查找跟MySQL相关的文件及文件夹</p><pre><code>find / -name mysql</code></pre><p>3.删除MySQL文件及文件夹</p><pre><code>rm -rf /var/lib/mysql</code></pre><p>4.查找已安装的MySQL组件</p><pre><code>rpm -qa|grep -i mysql</code></pre><p>5.RPM方式卸载已安装组件</p><pre><code>rpm -ev mysql57-community-release-el7-10</code></pre><h3 id="php卸载"><a href="#php卸载" class="headerlink" title="php卸载"></a>php卸载</h3><p>Centos7彻底删除PHP<br>查看php版本命令：</p><pre><code>php -v</code></pre><p>下面的命令是删除不干净的</p><pre><code>yum remove php</code></pre><p>因为使用这个命令以后再用</p><pre><code>php -v</code></pre><p>还是会看到有版本信息的。。。。。</p><p>必须强制删除，使用下面命令查看全部php软件包</p><pre><code>rpm -qa|grep php</code></pre><p>提示如下：</p><pre><code>php-pdo-5.1.6-27.el5_5.3php-mysql-5.1.6-27.el5_5.3php-xml-5.1.6-27.el5_5.3php-cli-5.1.6-27.el5_5.3php-common-5.1.6-27.el5_5.3php-gd-5.1.6-27.el5_5.3</code></pre><p>注意卸载要先卸载没有依赖的</p><p>pdo是mysql的依赖项；common是gd的依赖项；<br>例如：</p><pre><code>rpm -e php-pdo-5.1.6-27.el5_5.3error: Failed dependencies:        php-pdo is needed by (installed) php-mysql-5.1.6-27.el5_5.3.i386</code></pre><p>所以正确的卸载顺序是：</p><pre><code>rpm -e php-mysql-5.1.6-27.el5_5.3 rpm -e php-pdo-5.1.6-27.el5_5.3 rpm -e php-xml-5.1.6-27.el5_5.3 rpm -e php-cli-5.1.6-27.el5_5.3 rpm -e php-gd-5.1.6-27.el5_5.3 rpm -e php-common-5.1.6-27.el5_5.3 </code></pre><p>再用</p><pre><code> php -v</code></pre><p>没有版本信息就删好了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="网站" scheme="https://hesifan.top/categories/%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="php" scheme="https://hesifan.top/tags/php/"/>
    
    <category term="mysql" scheme="https://hesifan.top/tags/mysql/"/>
    
    <category term="服务器" scheme="https://hesifan.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="apache" scheme="https://hesifan.top/tags/apache/"/>
    
  </entry>
  
  <entry>
    <title>站点2020年度总结</title>
    <link href="https://hesifan.top/2020/123160831.html"/>
    <id>https://hesifan.top/2020/123160831.html</id>
    <published>2020-12-31T15:59:00.000Z</published>
    <updated>2021-01-20T16:35:52.185Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>虽然是2020年10月份才开始匆匆建站，但是我觉得还是有必要在总结一下这开始的第一年，开一个好头未来再接再励。大部分数据来自百度统计。 </p></blockquote><h2 id="访客"><a href="#访客" class="headerlink" title="访客"></a>访客</h2><ol><li>浏览量pv<br>百度统计（2020.11.14开始）数据：7336<br>卜算子统计（从建站开始统计）数据：14521<br>平均每日：153</li><li>访客数uv<br>百度统计（2020.11.14开始）数据：1081<br>卜算子统计（从建站开始统计）数据：5749<br>平均每日：22<h2 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h2></li><li>pc浏览量5679占 77% 访客数650占60% </li><li>pe浏览量1657占 23% 访客数431占40%<blockquote><p>可以看出本站访客以pc为主，pe适配做的有些不好有待加强。</p></blockquote><h2 id="地域"><a href="#地域" class="headerlink" title="地域"></a>地域</h2>今年还是没能点亮祖国地图算是一个遗憾<br><img src="https://7.dusays.com/2021/01/05/a976877f24794.png" alt="访客地域分布图">  <h2 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h2></li></ol><table><thead><tr><th align="left">来源</th><th align="center">pv</th><th align="right">uv</th></tr></thead><tbody><tr><td align="left">直接访问</td><td align="center">5471</td><td align="right">849</td></tr><tr><td align="left">外部链接</td><td align="center">1632</td><td align="right">247</td></tr><tr><td align="left">搜索引擎</td><td align="center">233</td><td align="right">33</td></tr></tbody></table><blockquote><p>通过数据表明要开始做seo了搜索引擎来源较少  </p></blockquote><h2 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h2><p>十月份在B站学习用hexo建站后踏上建站不归路，步步摸索至此，慢慢的完善丰富了本站页面。一路上认识不少志同道合的hxd也认识了一些大佬。就此短暂总结一下，截止2020.12.31本站共更新了29.9k字内容。希望明年再接再厉多多更新。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="总结" scheme="https://hesifan.top/categories/%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="https://hesifan.top/tags/%E6%80%BB%E7%BB%93/"/>
    
    <category term="站点" scheme="https://hesifan.top/tags/%E7%AB%99%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>我常用的一些快捷键</title>
    <link href="https://hesifan.top/2020/122050093.html"/>
    <id>https://hesifan.top/2020/122050093.html</id>
    <published>2020-12-20T03:34:00.000Z</published>
    <updated>2021-01-20T16:01:17.913Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><blockquote><p>剪贴板历史<br>Windows键+V 访问剪贴板历史，粘贴历史复制内容  </p></blockquote><blockquote><p>恢复不小心关闭的网页:<br>Ctrl+Shift+T</p></blockquote><h2 id="xshell"><a href="#xshell" class="headerlink" title="xshell"></a>xshell</h2><blockquote><p>复制粘贴<br>CTRL + ins shift + ins  </p></blockquote><blockquote><p>重新连接<br>shift + ctrl + R</p></blockquote><h2 id="winscp"><a href="#winscp" class="headerlink" title="winscp"></a>winscp</h2><blockquote><p>关闭会话<br>shift + CTRL + D  </p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="其他" scheme="https://hesifan.top/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="快捷键" scheme="https://hesifan.top/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title>解决hexo-matery主题站内搜索异常问题</title>
    <link href="https://hesifan.top/2020/111917267.html"/>
    <id>https://hesifan.top/2020/111917267.html</id>
    <published>2020-11-19T14:26:00.000Z</published>
    <updated>2021-03-05T13:46:00.254Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>在群里看到群友说搜索功能有问题，最开始我也没发现，搜索功能在主页没有问题在其他页面会因为添加这个页面的地址导致404.但是在观察友链其他人的网站没有发现问题，而我和群友的确实有问题。  </p></blockquote><h2 id="解决过程"><a href="#解决过程" class="headerlink" title="解决过程"></a>解决过程</h2><p>解决过程首先我怀疑是我的search.js文件的问题替换了友链其他人的，还是不行。<br>然后开始f12慢慢调试排查，我发现在searchlist里面显示的链接为不完整的链接如2020/111623576.html这样在主页没有问题在其他页面如 <a href="https://hesifan.top/contact/">https://hesifan.top/contact/</a>  就会因为补全为 <a href="https://hesifan.top/contact/2020/111623576.html">https://hesifan.top/contact/2020/111623576.html</a> 导致404，我就开始改search.js文件将增加了一个 <code>/</code></p><pre><code>if (isMatch) {                        str += "&lt;li&gt;&lt;a href='/" + data_url + "' class='search-result-title'&gt;" + data_title + "&lt;/a&gt;";</code></pre><p>hexo d 之后正常，应该算是解决了吧，暂时还未出错。<br>贴上改后完整的js文件  </p><pre><code>var searchFunc = function (path, search_id, content_id) {    'use strict';    $.ajax({        url: path,        dataType: "xml",        success: function (xmlResponse) {            // get the contents from search data            var datas = $("entry", xmlResponse).map(function () {                return {                    title: $("title", this).text(),                    content: $("content", this).text(),                    url: $("url", this).text()                };            }).get();            var $input = document.getElementById(search_id);            var $resultContent = document.getElementById(content_id);            $input.addEventListener('input', function () {                var str = '&lt;ul class=\"search-result-list\"&gt;';                var keywords = this.value.trim().toLowerCase().split(/[\s\-]+/);                $resultContent.innerHTML = "";                if (this.value.trim().length &lt;= 0) {                    return;                }                // perform local searching                datas.forEach(function (data) {                    var isMatch = true;                    var content_index = [];                    var data_title = data.title.trim().toLowerCase();                    var data_content = data.content.trim().replace(/&lt;[^&gt;]+&gt;/g, "").toLowerCase();                    var data_url = data.url;                    var index_title = -1;                    var index_content = -1;                    var first_occur = -1;                    // only match artiles with not empty titles and contents                    if (data_title != '' &amp;&amp; data_content != '') {                        keywords.forEach(function (keyword, i) {                            index_title = data_title.indexOf(keyword);                            index_content = data_content.indexOf(keyword);                            if (index_title &lt; 0 &amp;&amp; index_content &lt; 0) {                                isMatch = false;                            } else {                                if (index_content &lt; 0) {                                    index_content = 0;                                }                                if (i == 0) {                                    first_occur = index_content;                                }                            }                        });                    }                    // show search results                    if (isMatch) {                        str += "&lt;li&gt;&lt;a href='/" + data_url + "' class='search-result-title'&gt;" + data_title + "&lt;/a&gt;";                        var content = data.content.trim().replace(/&lt;[^&gt;]+&gt;/g, "");                        if (first_occur &gt;= 0) {                            // cut out 100 characters                            var start = first_occur - 20;                            var end = first_occur + 80;                            if (start &lt; 0) {                                start = 0;                            }                            if (start == 0) {                                end = 100;                            }                            if (end &gt; content.length) {                                end = content.length;                            }                            var match_content = content.substr(start, end);                            // highlight all keywords                            keywords.forEach(function (keyword) {                                var regS = new RegExp(keyword, "gi");                                match_content = match_content.replace(regS, "&lt;em class=\"search-keyword\"&gt;" + keyword + "&lt;/em&gt;");                            });                            str += "&lt;p class=\"search-result\"&gt;" + match_content + "...&lt;/p&gt;"                        }                        str += "&lt;/li&gt;";                    }                });                str += "&lt;/ul&gt;";                $resultContent.innerHTML = str;            });        }    });}</code></pre><h2 id="思考原因"><a href="#思考原因" class="headerlink" title="思考原因"></a>思考原因</h2><p>这里是胡乱猜测，可能是因为我使用的生成链接是全数字，我发现其他人是随机或者拼音都没问题。  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="网站" scheme="https://hesifan.top/categories/%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="hexo" scheme="https://hesifan.top/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>关于我的实验室</title>
    <link href="https://hesifan.top/2020/111623576.html"/>
    <id>https://hesifan.top/2020/111623576.html</id>
    <published>2020-11-16T13:06:00.000Z</published>
    <updated>2021-03-05T13:46:50.149Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>关于我的实验室：<br>1.实验室内大部分页面都是我平时浏览大佬的博客发现的有趣的页面，然后用F12扒下来的。<br>2.这些页面大多为开源项目，可以按照其说明自由引用，本人崇尚开源精神，但是你在把别人页面的时候最好保留原作者的相关信息这是对原作者最基本的尊重，当然你可以注释掉原作者加上自己的信息但请不要删掉原作者留下的信息。<br>3.你如果对我实验室里的某个页面感兴趣欢迎联系我要源码。<br>4.这个教程是matery主题的，其他主题类比操作，小白向。  </p></blockquote><h2 id="直接跳过hexo渲染添加的单页"><a href="#直接跳过hexo渲染添加的单页" class="headerlink" title="直接跳过hexo渲染添加的单页"></a>直接跳过hexo渲染添加的单页</h2><h3 id="1-跳过渲染"><a href="#1-跳过渲染" class="headerlink" title="1.跳过渲染"></a>1.跳过渲染</h3><p>博客根目录yaml文件里找到<code>skip_render:</code>这个是设置跳过渲染的文件或者文件夹的配置项<br>格式示例</p><pre><code>skip_render:   - 'ex/*'  - 'ex/**'</code></pre><p>注意缩进和空格，解释一下：<code>'ex/*'</code> 表示在目录 source/ex夹 下的文件全部跳过渲染，<code>'ex/**'</code> 表示在目录 source/ex/文件夹下的文件全部跳过渲染（例如页面的 js、css 在另一个文件夹中）。这里有点重复了，只为了你能看明白。<br>当然如果是单一HTML不涉及过于复杂的css js的可以直接通过在html文件前加如下片段跳过渲染.</p><pre><code>---layout: false---</code></pre><p>建议统一使用第一种稳定不会出错，第二种可以使用在谷歌或者百度的验证文件中比较方便。  </p><h3 id="2-创建文件夹"><a href="#2-创建文件夹" class="headerlink" title="2.创建文件夹"></a>2.创建文件夹</h3><p>在source文件夹里创建文件夹放入页面源码，如我的实验室里的mikutap 烟花秀 我的flag 雷达 音乐隧道 液体 樱花雨 都是通过这个方法构造的，你可以直接问我要源码，<code>也可以根据下面的教程自行扒取。</code>  </p><h3 id="3-hexo三连即可"><a href="#3-hexo三连即可" class="headerlink" title="3.hexo三连即可"></a>3.hexo三连即可</h3><p>检查有没有成功添加有没有什么错误，没有就OK啦。  </p><h2 id="如何扒大佬网站上的页面（狗头保命）"><a href="#如何扒大佬网站上的页面（狗头保命）" class="headerlink" title="如何扒大佬网站上的页面（狗头保命）"></a>如何扒大佬网站上的页面（狗头保命）</h2><h3 id="1-f12检查进入开发者页面"><a href="#1-f12检查进入开发者页面" class="headerlink" title="1.f12检查进入开发者页面"></a>1.f12检查进入开发者页面</h3><h3 id="2-右键下载"><a href="#2-右键下载" class="headerlink" title="2.右键下载"></a>2.右键下载</h3><p>source右键下载对应html文件css文件js文件到本地文件夹，一般简单的页面只有html文件，复杂一点的页面包含单独css文件js文件。  </p><blockquote><p>注意事项：<br>1.要创建相同的文件夹目录路径如f12source路径如下test/css/stely.css那么你在本地下载的路径也要保持一致在本地应该也为test/css/stely.css<br>当然你可以在HTML文件里面改css js文件路径。<br>2.注意检查html文件里涉及的css，js文件是否齐全否则一定会有问题。<br>3.注意检查有时候你需要的文件可能在cdn里  </p></blockquote><p>hexo三连，检查没有错误就可以啦，有错误就只能慢慢找了。  </p><h3 id="3-扒取同主题大佬页面"><a href="#3-扒取同主题大佬页面" class="headerlink" title="3.扒取同主题大佬页面"></a>3.扒取同主题大佬页面</h3><p>当你需要和你相同主题的大佬的某个页面的内容是可以选择该段文字或者图片右键检查，在elements中复制片段到对应你自己的页面的该位置，注意如果有css文件也要一起扒下来放在主题的css文件中。  </p><h2 id="关于谷歌小恐龙"><a href="#关于谷歌小恐龙" class="headerlink" title="关于谷歌小恐龙"></a>关于谷歌小恐龙</h2><p>由于谷歌恐龙和实验室里其他页面差异较大将在另一篇文章我的matery主题折腾日志里介绍。  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="网站" scheme="https://hesifan.top/categories/%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="hexo" scheme="https://hesifan.top/tags/hexo/"/>
    
    <category term="实验室" scheme="https://hesifan.top/tags/%E5%AE%9E%E9%AA%8C%E5%AE%A4/"/>
    
  </entry>
  
  <entry>
    <title>给你的网站添加小锁头（安装ssl证书）</title>
    <link href="https://hesifan.top/2020/102948118.html"/>
    <id>https://hesifan.top/2020/102948118.html</id>
    <published>2020-10-29T13:25:00.000Z</published>
    <updated>2021-03-05T13:47:04.955Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>之前一直没能给我的网站安装上小锁头，作为一个有强迫症的boy怎么能没有一个锁头呢，安装过程虽然有些曲折但是其实很简单的，只在没部署到服务器上时难度确实很大，主要原因在于GitHub提供的域名本身的证书会和你自己安装的证书冲突导致出现证书信息不一致等问题，较难解决就一直搁置了。</p></blockquote><h2 id="http和https的区别："><a href="#http和https的区别：" class="headerlink" title="http和https的区别："></a>http和https的区别：</h2><p>未安装ssl证书的网站采用http协议用户和站点服务器之间数据传输未加密容易被其他攻击者盗取信息浏览器会提示不安全，其实问题不大没有利益冲突谁会来盗取你站点的信息，如果人家有技术想盗去你信息，加了ssl证书也没意义。<br>安装ssl证书的好处浏览器会提示用户安全，用户在和服务器信息交换时进行加密更加安全，拥有高贵的小锁头，但是网页加载速度可能会变慢个人感觉，而且https有利于seo会拥有更高的排名。  </p><h2 id="centos-nginx服务器安装ssl证书："><a href="#centos-nginx服务器安装ssl证书：" class="headerlink" title="centos nginx服务器安装ssl证书："></a>centos nginx服务器安装ssl证书：</h2><blockquote><p>由于我自己目前使用的时centos nginx的服务器所以就简介一下安装过程。  </p></blockquote><ol><li>向域名商申请免费的ssl证书</li><li>下载ssl证书里面有对应服务器的密匙文件</li><li>将密匙文件复制到nginx安装路径里新建一个文件夹cert用于存放这两个文件。有时候并不会像域名商提供的文档里的默认安装路径，而是你自己的安装路径比如腾讯提供的路径是usr/local/nginx/conf而我自己的路径却是etc/nginx  </li><li>最重要的一步就是修改配置文件nginx.conf主要修改你自己密匙文件路径位置和网站根目录  </li></ol><pre><code>#你的这段代码可能已经存在你只需要将前面注释的#号去除并修改对应信息即可Settings for a TLS enabled server.    server {        listen       443 ssl http2 default_server;        listen       [::]:443 ssl http2 default_server;        server_name  _;        root         /home/hexo;            #网站根目录        ssl_certificate "/etc/nginx/cert/1_www.hesifan.top_bundle.crt";  #填你自己的路径文件名        ssl_certificate_key "/etc/nginx/cert/2_www.hesifan.top.key";         #填你自己的路径文件名        ssl_session_cache shared:SSL:1m;        ssl_session_timeout  10m;        ssl_ciphers HIGH:!aNULL:!MD5;        ssl_prefer_server_ciphers on;#        # Load configuration files for the default server block.        include /etc/nginx/default.d/*.conf;        location / {       }        error_page 404 /404.html;         location = /404.html {        }         error_page 500 502 503 504 /50x.html;        location = /50x.html {        }    }    }  </code></pre><blockquote><p>可选：设置HTTP请求自动跳转HTTPS。<br>在需要跳转的HTTP站点下添加以下rewrite语句，实现HTTP访问自动跳转到HTTPS页面。这个是添加在nginx.conf文件里关于http站点的设定里的而不是新加在HTTPs设定后面  </p></blockquote><pre><code>server { listen 443; server_name www.hesifan.top; #将www.hesifan.top修改为您证书绑定的域名，例如：www.hesifan.top。rewrite ^(.*)$ https://$host$1 permanent;   #将所有HTTP请求通过rewrite重定向到HTTPS。 location / {index index.html index.htm;}}</code></pre><p>5.重启nginx服务器</p><pre><code>systemctl restart nginx.service  </code></pre><p>6.访问新的地址<a href="https://hesifan.top/">https://hesifan.top</a> 无误即可<br>7.这是我nginx文件全部相关信息  </p><pre><code>http {    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '                      '$status $body_bytes_sent "$http_referer" '                      '"$http_user_agent" "$http_x_forwarded_for"';    access_log  /var/log/nginx/access.log  main;    sendfile            on;    tcp_nopush          on;    tcp_nodelay         on;    keepalive_timeout   65;    types_hash_max_size 2048;    include             /etc/nginx/mime.types;    default_type        application/octet-stream;    # Load modular configuration files from the /etc/nginx/conf.d directory.    # See http://nginx.org/en/docs/ngx_core_module.html#include    # for more information.    include /etc/nginx/conf.d/*.conf;    server {        listen       80 default_server;        listen       [::]:80 default_server;        server_name www.hesifan.top_;        root         /home/hexo;        listen 443;        rewrite ^(.*)$ https://$host$1 permanent;   #将所有HTTP请求通过rewrite重定向到HTTPS。        # Load configuration files for the default server block.        include /etc/nginx/default.d/*.conf;        location / {        }        error_page 404 /404.html;        location = /404.html {        }        error_page 500 502 503 504 /50x.html;        location = /50x.html {        }    }# Settings for a TLS enabled server.    server {        listen       443 ssl http2 default_server;        listen       [::]:443 ssl http2 default_server;        server_name  _;        root         /home/hexo;        ssl_certificate "/etc/nginx/cert/1_www.hesifan.top_bundle.crt";        ssl_certificate_key "/etc/nginx/cert/2_www.hesifan.top.key";        ssl_session_cache shared:SSL:1m;        ssl_session_timeout  10m;        ssl_ciphers HIGH:!aNULL:!MD5;        ssl_prefer_server_ciphers on;#        # Load configuration files for the default server block.        include /etc/nginx/default.d/*.conf;        location / {       }        error_page 404 /404.html;         location = /404.html {        }         error_page 500 502 503 504 /50x.html;        location = /50x.html {        }    }}</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="网站" scheme="https://hesifan.top/categories/%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="服务器" scheme="https://hesifan.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="ssl" scheme="https://hesifan.top/tags/ssl/"/>
    
  </entry>
  
  <entry>
    <title>送给自己的话</title>
    <link href="https://hesifan.top/2020/102646933.html"/>
    <id>https://hesifan.top/2020/102646933.html</id>
    <published>2020-10-26T07:29:00.000Z</published>
    <updated>2020-12-01T11:32:35.137Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>人生难免有时迷茫困顿失去航向，难免有时有些感触，难免有些想法，在这里写下想要对自己说的话，别人写给我的话。  </p></blockquote><hr><p>我希望上天一直对我不公平，像以前那样，让我过的不如意，这样，我能更坚强。——友人赠 </p><hr><p>世界上只有一种英雄主义，就是发现了生活的真相，依旧热爱它。</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="碎语" scheme="https://hesifan.top/tags/%E7%A2%8E%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>c语言笔记</title>
    <link href="https://hesifan.top/2020/102449769.html"/>
    <id>https://hesifan.top/2020/102449769.html</id>
    <published>2020-10-24T13:56:00.000Z</published>
    <updated>2021-03-28T15:29:35.998Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="C语言课程准备"><a href="#C语言课程准备" class="headerlink" title="C语言课程准备"></a>C语言课程准备</h2><h3 id="1-博客"><a href="#1-博客" class="headerlink" title="1. 博客"></a>1. 博客</h3><pre><code>    a. 写博客是对所学知识的总结    b.  写博客是记录学习的过程和心得，给面试官了解你的机会增加面试谈资    c. 注册博客（技术博客）        i. Csdn（用户多，但多为学生）        ii. 51cto（推荐）        iii. 博客园        iv. 开源中国</code></pre><h3 id="2-GitHub"><a href="#2-GitHub" class="headerlink" title="2. GitHub"></a>2. GitHub</h3><pre><code>    a. GitHub注册账户创建代码仓库例如c-code自己写代码上传，公开后其他人可以调用    b. 简历中可以贴上GitHub简介可以查看每天代码记录一天代码就是一个绿点，日积月累</code></pre><h3 id="3-笔记软件OneNote"><a href="#3-笔记软件OneNote" class="headerlink" title="3. 笔记软件OneNote"></a>3. 笔记软件OneNote</h3><pre><code>a. 方便检索b. 便于携带c. 不易丢失</code></pre><h3 id="4-思维导图Xmind"><a href="#4-思维导图Xmind" class="headerlink" title="4. 思维导图Xmind"></a>4. 思维导图Xmind</h3><pre><code>    a. 便于总结串联知识    b. 生动形象展示知识点</code></pre><h3 id="5-编程"><a href="#5-编程" class="headerlink" title="5. 编程"></a>5. 编程</h3><pre><code>    a. 语言:C/C++/Java    b. 算法    c. 数据结构Ds    d. 操作系统    e. 计算机网络   </code></pre><h2 id="C语言初识"><a href="#C语言初识" class="headerlink" title="C语言初识"></a>C语言初识</h2><h3 id="1-什么是C语言"><a href="#1-什么是C语言" class="headerlink" title="1. 什么是C语言"></a>1. 什么是C语言</h3><pre><code>    a. C语言是一种计算机程序设计语言。它既有高级语言的特点，又具有汇编语言的特点。它可以作为系统设计语言，编写工作系统应用程序，也可以作为应用程序设计语言，编写不依赖计算机硬件的应用程序    b. 语言发展    二进制语言---&gt;B语言----&gt;C语言----&gt;C++ java    c. C语言标准        i. C89 /C90 （ISO国际标准）很接近        ii. C99/ C11    （不少编译器不支持）    d. 常见C语言编译器    Clang / Gcc /win-tc/SUBLIME/MSVC/Turbo C</code></pre><h3 id="2-第一个C语言程序"><a href="#2-第一个C语言程序" class="headerlink" title="2. 第一个C语言程序"></a>2. 第一个C语言程序</h3><h4 id="写c代码"><a href="#写c代码" class="headerlink" title="写c代码"></a>写c代码</h4><p>1.创建工程</p><p>2.添加源文件<br>.c 源文件<br>.h 头文件<br>3.写代码<br>基本框架</p><pre><code>#include &lt;stdio.h&gt;int main(){printf("hello world\n");return 0;}</code></pre><blockquote><p>main()主函数–程序的入口，一个c语言代码不能没有main函数，且有仅有一个main函数。<br>int 整型 main前面的int表示main函数调用之后返回一个整数值<br>printf 打印函数 print function<br>库函数–C语言提供给我们使用的函数<br>调用#include<br>#include &lt;stdio.h&gt;<br>std-标准 standard input output<br>stdio-标准输入输出</p></blockquote><p>使用#define  _CRT_SECURE_NO_WARNINGS 1屏蔽vc对某些函数不安全报错。</p><h3 id="3-数据类型"><a href="#3-数据类型" class="headerlink" title="3.数据类型"></a>3.数据类型</h3><pre><code>chart //字符类型int //整型short //短整型long //长整型long long//更长整形float//单精度浮点数double//双精度浮点数</code></pre><h4 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h4><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span>  </span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">char</span> ch<span class="token operator">=</span><span class="token string">'h'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//向内存申请空间存放变量</span><span class="token keyword">short</span> num1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//向内存申请两个字节存放1</span><span class="token keyword">long</span> num2<span class="token operator">=</span><span class="token number">2021</span><span class="token punctuation">;</span><span class="token keyword">float</span> f<span class="token operator">=</span><span class="token number">3.1</span><span class="token punctuation">;</span><span class="token keyword">double</span> d<span class="token operator">=</span><span class="token number">3.14</span><span class="token punctuation">;</span><span class="token keyword">int</span> age<span class="token operator">=</span><span class="token number">19</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%c\n"</span><span class="token punctuation">,</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>num1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>num2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"%f\n"</span><span class="token punctuation">,</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"%lf\n"</span><span class="token punctuation">,</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><blockquote><p>chart 为单个字符不是字符串<br>%c 打印字符<br>%d 打印整型<br>%f 打印浮点型<br>%lf 打印双精度浮点数<br>%p 打印地址  </p><p>%s打印字符串</p></blockquote><h4 id="int-short-long的区别"><a href="#int-short-long的区别" class="headerlink" title="int short long的区别"></a>int short long的区别</h4><h5 id="1、定义不同"><a href="#1、定义不同" class="headerlink" title="1、定义不同"></a>1、定义不同</h5><p>int类型称为整型；</p><p>short类型称为短整型；</p><p>long类型称为长整型；</p><h5 id="2、占用字节数不同"><a href="#2、占用字节数不同" class="headerlink" title="2、占用字节数不同"></a>2、占用字节数不同</h5><p>short int型变量两个字节(两个字节)；</p><p>int类型四个字节(32位机中)；</p><p>long int取值为8个字节(32位机中)；</p><h5 id="3、数据范围不同"><a href="#3、数据范围不同" class="headerlink" title="3、数据范围不同"></a>3、数据范围不同</h5><p>short int型变量取值为-(2的16次方)+1 到 (2的15次方)-1；</p><p>int类型变量取值为-(2的32次方)+1 到 (2的31次方)-1；</p><p>long类型变量取值为-(2的64次方)+1 到 (2的63次方)-1；</p><h5 id="扩展资料"><a href="#扩展资料" class="headerlink" title="扩展资料"></a>扩展资料</h5><p>1、具体占用几个字节C语言并没有规定，C语言做了宽泛的限制：</p><p>1）short int类型至少占用2个字节。<br>2）int类型建议为一个机器字长。32位环境下机器字长为4字节，64位环境下机器字长为8字节。</p><p>3）short类型的长度不能大于 int，long类型的长度不能小于 int。</p><h4 id="float和double区别"><a href="#float和double区别" class="headerlink" title="float和double区别"></a>float和double区别</h4><h5 id="区别："><a href="#区别：" class="headerlink" title="区别："></a><strong>区别</strong>：</h5><p>1、精度不一样，float是单精度，double是双精度；</p><p>2、表示小数的范围不一样，double能表示的范围比float大；</p><p>3、double在内存中，占8个字节，float在内存中，占4个字节。</p><h5 id="float："><a href="#float：" class="headerlink" title="float："></a><strong>float：</strong></h5><p>浮点型数据类型，FLOAT 数据类型用于存储单精度浮点数或双精度浮点数。浮点数使用 IEEE（电气和电子工程师协会）格式。浮点类型的单精度值具有 4 个字节，包括一个符号位、一个 8 位 二进制指数和一个 23 位尾数。由于尾数的高顺序位始终为 1，因此它不是以数字形式存储的。此表示形式为 float 类型提供了一个大约在 -3.4E+38 ~ 3.4E+38 之间的范围。</p><h5 id="double："><a href="#double：" class="headerlink" title="double："></a><strong>double：</strong></h5><p>双精度浮点型，此数据类型与单精度数据类型(float)相似，但精确度比float高，编译时所占的内存空间依不同的编译器而有所不同，是double float数据类型，C/C++中表示实型变量的一种变量类型。</p><h5 id="扩展资料："><a href="#扩展资料：" class="headerlink" title="扩展资料："></a>扩展资料：</h5><p>浮点型数据</p><p>1、float型</p><p>编译系统为每一个float型变量分配4个字节，数值以规范化的二进制数指数形式存放在存储单元中。</p><p>2、double型</p><p>为了扩大能表示的数值范围，用8个字节存储一个double型数据，可以得到15位有效数字。</p><p>3、long double型</p><p>不同的编译系统对long double型的处理方法不同，Visual C++6.0对long double型和double一样处理，分配8个字节。</p><h4 id="每种类型的大小"><a href="#每种类型的大小" class="headerlink" title="每种类型的大小"></a>每种类型的大小</h4><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//1byte</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//4byte</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//2byte</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//4或8byte</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//8byte</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//4byte</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//8byte</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><blockquote><p>sizeof计算内存大小  </p></blockquote><p>计算机中计量存储容量计量单位：</p><pre><code>bit - 比特位 储存二进制0 1byte - 字节 一个字节等于八个比特位kb mb gb tb pb</code></pre><h3 id="4-变量与常量"><a href="#4-变量与常量" class="headerlink" title="4.变量与常量"></a>4.变量与常量</h3><h4 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h4><p>类型 + 变量名 + 赋值  </p><pre class=" language-c"><code class="language-c"><span class="token keyword">short</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">;</span><span class="token keyword">float</span> weight<span class="token operator">=</span><span class="token number">100.1f</span><span class="token punctuation">;</span>chart ch<span class="token operator">=</span><span class="token string">'w'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//f明确强调该值为单精度浮点值，防止因精度问题报错</span></code></pre><h4 id="变量分类"><a href="#变量分类" class="headerlink" title="变量分类"></a>变量分类</h4><p>变量分类：全局变量和局部变量</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> num1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//全局变量</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">int</span> num2<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//局部变量</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>num2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>全局变量：定义在代码块<code>{}</code>之外的变量<br>局部变量：定义在代码块<code>{}</code>之内的变量</p><blockquote><p>全局变量和局部变量最好不用相同的变量名容易误会产生bug，当重复时已局部变量为准，优先使用局部变量。  </p></blockquote><h4 id="变量的使用"><a href="#变量的使用" class="headerlink" title="变量的使用"></a>变量的使用</h4><p>以两数相加为例：</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">int</span> num1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> num2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> sum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>num1<span class="token punctuation">,</span><span class="token operator">&amp;</span>num2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//int sum=0;</span>sum<span class="token operator">=</span>num1<span class="token operator">+</span>num2<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><blockquote><p>scanf输入数据-使用输入函数<br>&amp;取地址（传址）变量储存内存地址<br>C语言语法规定，变量要在当前代码框的最前面定义，不能需要变量时直接定义如上若在注释处定义变量sum就会报错缺少；号。 </p></blockquote><p><strong>补充资料：</strong></p><p>为什么scanf函数在vc编译器中不安全？</p><p>vs的编译器一些函数如果调用不当会造成内存泄漏、非法访问、溢出等问题，因此会出这么个警告，scanf就是其中之一 不用理会他，或者把警告关闭即可，scanf只有在参数有%s的时候才有不安全的问题，还是可避免的。</p><h4 id="变量作用域和生命周期"><a href="#变量作用域和生命周期" class="headerlink" title="变量作用域和生命周期"></a>变量作用域和生命周期</h4><h5 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h5><blockquote><p>作用域（scope），程序设计概念，通常来说，一段程序所用到的变量并不是总是有效/可用的，而限定这个变量的可用性的代码范围就是这个变量的作用域。  </p></blockquote><p>1.局部变量的作用域是变量所在代码块范围内。</p><p>2.全局变量的作用域是整个工程。  </p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">extern</span> <span class="token keyword">int</span> global<span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"global=%d\n"</span><span class="token punctuation">,</span>global<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><blockquote><p>extern  声明外部符号</p><p>当所使用的变量为同工程外部源文件全局变量时只需要使用extern声明即可使用。</p></blockquote><h5 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h5><blockquote><p>变量的生命周期指的是变量的创建到到变量的销毁之间的一个时间段。</p></blockquote><p>1.局部变量的生命周期是进入作用域生命周期开始，出作用域生命周期结束。</p><p>2.全局变量的生命周期是整个程序的生命周期。</p><p>3.变量作用域和生命周期是相辅相成的。</p><h4 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h4><p>C语言中的常量和变量的定义有所差异。</p><p>C语言的常量分为以下几种：</p><ul><li>字面常量</li><li>const修饰的常变量</li><li>#define定义的标识符常量</li><li>枚举常量</li></ul><h5 id="字面常量"><a href="#字面常量" class="headerlink" title="字面常量"></a>字面常量</h5><p>直观写出的值</p><h5 id="const修饰的常变量"><a href="#const修饰的常变量" class="headerlink" title="const修饰的常变量"></a>const修饰的常变量</h5><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">const</span> <span class="token keyword">int</span> num<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//num=8;此时再修改变量值就会报错</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><blockquote><p>const 常属性，当给变量加上const，此变量值就不可修改相当于一个“常量”，其本质是一个具有常属性的变量。</p></blockquote><h5 id="define定义的标识符常量"><a href="#define定义的标识符常量" class="headerlink" title="#define定义的标识符常量"></a>#define定义的标识符常量</h5><p>当需要使用常量时可以使用#define定义标识符常量。</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> MAX 10</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">int</span> arr<span class="token punctuation">[</span>MAX<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>MAX<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//10</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h5 id="枚举常量"><a href="#枚举常量" class="headerlink" title="枚举常量"></a>枚举常量</h5><p>枚举常量：可以一一列举的值。枚举关键字-<strong>enum</strong></p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">enum</span> Sex<span class="token punctuation">{</span>MALE<span class="token punctuation">,</span>FEMALE<span class="token punctuation">,</span>SECRET<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//MALE,FEMALE,SECRET即为枚举常量</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">enum</span> Sex sex<span class="token operator">=</span>MALE<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>MALE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>FEMALE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>SECRET<span class="token punctuation">)</span><span class="token punctuation">;</span>sex<span class="token operator">=</span>SECRET<span class="token punctuation">;</span>return0<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><blockquote><p>枚举变量不能更改，枚举类型创建的变量是可以改变的。</p></blockquote><h3 id="5-字符串，转义符，注释"><a href="#5-字符串，转义符，注释" class="headerlink" title="5.字符串，转义符，注释"></a>5.字符串，转义符，注释</h3><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p><strong>“hello world\n”</strong></p><p>这种有双引号（double quote）引起来的一串字符称为字符串字面值（string literal）简称字符串。</p><blockquote><p>注： 字符串的结束标志是一个\0的转义字符，在计算字符串长度的时候\0是结束标志，不算做字符串内容。</p></blockquote><p>C语言里面没有专门的字符串类型。在C语言中，字符串是被当做字符数组来处理的。</p><p> <strong>字符数组初始化</strong></p><pre class=" language-c"><code class="language-c"><span class="token keyword">char</span> arr1<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"hsf"</span><span class="token punctuation">;</span><span class="token keyword">char</span> arr2<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'h'</span><span class="token punctuation">,</span><span class="token string">'s'</span><span class="token punctuation">,</span><span class="token string">'f'</span><span class="token punctuation">,</span><span class="token string">'\0'</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>字符数组初始化时可以直接使用字符串字面常量进行初始化此方式不需要添加\0结束默认有一个隐藏的\0结束字符串。使用{}初始化字符数组时需要添加\0结束字符串，否则会出现数组越界产生随机值，越界后的值是无意义的。</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">char</span> arr1<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"hsf"</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> arr2<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'h'</span><span class="token punctuation">,</span><span class="token string">'s'</span><span class="token punctuation">,</span><span class="token string">'f'</span><span class="token punctuation">,</span><span class="token string">'\0'</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span><span class="token function">strlen</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//3</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span><span class="token function">strlen</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//3</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><blockquote><p>strlen string length字符串长度检测函数，使用需要引入string.h文件。</p><p>若使用{}初始化字符数组不添加结束转义符将会打印出无意义的随机值。</p></blockquote><h4 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h4><p>转义是将有多种含义的字符进行转换。 </p><table><thead><tr><th>转义字符</th><th>释义</th></tr></thead><tbody><tr><td>?</td><td>在书写连续多个问号时使用，防止他们被解析为三字母词</td></tr><tr><td>\‘</td><td>用于表示字符常量’</td></tr><tr><td>\“</td><td>用于表示字符串内部的双引号</td></tr><tr><td><code>\\</code></td><td>用于表示一个反斜杠，防止他被解释为一个转义序列符</td></tr><tr><td>\a</td><td>警告字符，蜂鸣</td></tr><tr><td>\b</td><td>退格符</td></tr><tr><td>\f</td><td>换页</td></tr><tr><td>\n</td><td>换行</td></tr><tr><td>\r</td><td>回车</td></tr><tr><td>\t</td><td>水平制表符</td></tr><tr><td>\v</td><td>垂直制表符</td></tr><tr><td>\ddd</td><td>ddd表示一个1-3个八进制数字如\130X</td></tr><tr><td>\xdd</td><td>dd表示一个1-2个十六进制数字</td></tr><tr><td></td><td></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习" scheme="https://hesifan.top/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="C语言" scheme="https://hesifan.top/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="笔记" scheme="https://hesifan.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>ps笔记</title>
    <link href="https://hesifan.top/2020/102459229.html"/>
    <id>https://hesifan.top/2020/102459229.html</id>
    <published>2020-10-24T13:44:00.000Z</published>
    <updated>2021-03-05T13:47:45.107Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="ps1工作区"><a href="#ps1工作区" class="headerlink" title="ps1工作区"></a>ps1工作区</h2><h3 id="1-保存自己工作区"><a href="#1-保存自己工作区" class="headerlink" title="1. 保存自己工作区"></a>1. 保存自己工作区</h3><h3 id="2-打开方法"><a href="#2-打开方法" class="headerlink" title="2. 打开方法"></a>2. 打开方法</h3><pre><code>    a. 直接打开    b. 拖动    c. 图片打开方式ps</code></pre><h3 id="3-一个工作簿打开多个图片，第二张起文件中选择置入嵌入对象"><a href="#3-一个工作簿打开多个图片，第二张起文件中选择置入嵌入对象" class="headerlink" title="3. 一个工作簿打开多个图片，第二张起文件中选择置入嵌入对象"></a>3. 一个工作簿打开多个图片，第二张起文件中选择置入嵌入对象</h3><h3 id="4-新建画布用于海报图片的设计"><a href="#4-新建画布用于海报图片的设计" class="headerlink" title="4. 新建画布用于海报图片的设计"></a>4. 新建画布用于海报图片的设计</h3><pre><code>    a. 确定大小（常用像素为单位）一般整个电脑1920*1080    b. 分辨率ppi（决定清晰度）        i. 不用于打印，电脑手机等电子设备72ppi        ii. 印刷打印，300ppi    c. 颜色模式        i. RGB三色光用于电子设备        ii. CMYK四种印刷染料的简称，用于印刷</code></pre><h3 id="5-常用保存格式"><a href="#5-常用保存格式" class="headerlink" title="5. 常用保存格式"></a>5. 常用保存格式</h3><pre><code>    a. Psd pdd 可以保存图层，便于以后修改    b. jpg图片常用格式    c. png与jpg相比可以识别透明图层，jpg格式会自动填充颜色    d. TIFF喷绘写真专用    e. 导出时降低品质目的减小内存，无特殊要求时保持最高品质  </code></pre><h2 id="ps2图层概念及选择工具"><a href="#ps2图层概念及选择工具" class="headerlink" title="ps2图层概念及选择工具"></a>ps2图层概念及选择工具</h2><h3 id="1-图层"><a href="#1-图层" class="headerlink" title="1. 图层"></a>1. 图层</h3><pre><code>    a. 图层概念图像效果由各个图层依次顺序叠加而成    b. 复制图层CTRL+D 右键单击文字空白复制图层    c. 删除图层delete    d. 新建图层右下角工具栏    e. 填充颜色左工具栏前景色，alt+delete填充颜色    f. 按住图层拖动调整图层顺序</code></pre><h3 id="2-选择工具（使用工具先设置参数）"><a href="#2-选择工具（使用工具先设置参数）" class="headerlink" title="2. 选择工具（使用工具先设置参数）"></a>2. 选择工具（使用工具先设置参数）</h3><pre><code>    a. 目的移动图层上某个内容,先选择图层，再移动    b. 选择工具窗口栏参数        i. 自动选择便于选择内容可以自动识别内容所在图层，默认开启。快捷键Ctrl        ii. 显示变换控件，可以在图层内容外显示变换框以调节内容大小角度透明度等参数，        但是一般关闭，开启容易改变图像需要使用时先选择图层用快捷键CTRL+T开启，        调整好参数后双击内容保存或在窗口栏保存        注：新版本ps默认等比放缩，按住shift可自由变换，老版相反        iii. 组,可以将多个图层放到一个组，这时选择组即选择该组全部图层，共同调整        多选图层按CTRL点击图层名称或后面留白，不能点击缩略图        iv. 对齐和分布，对齐是横向校准，分布是纵向校准，默认按选中分区校准，        可调为画布为基准  </code></pre><h2 id="ps3-选区概念及选区工具"><a href="#ps3-选区概念及选区工具" class="headerlink" title="ps3 选区概念及选区工具"></a>ps3 选区概念及选区工具</h2><h3 id="1-选区"><a href="#1-选区" class="headerlink" title="1. 选区"></a>1. 选区</h3><pre><code>    a. 选区作用 只对特定区域进行编辑调整    b. 选中区域有虚线闪烁框    c. 先选择目标所在图层再拷贝内容</code></pre><h3 id="2-羽化和消除锯齿"><a href="#2-羽化和消除锯齿" class="headerlink" title="2. 羽化和消除锯齿"></a>2. 羽化和消除锯齿</h3><pre><code>    a.  羽化和消除锯齿是为了与背景更自然的融合    b. 羽化窗口栏默认关闭，需要使用时打开调整    而消除锯齿默认打开</code></pre><h3 id="3-矩形选框工具和椭圆选框工具"><a href="#3-矩形选框工具和椭圆选框工具" class="headerlink" title="3. 矩形选框工具和椭圆选框工具"></a>3. 矩形选框工具和椭圆选框工具</h3><pre><code>    a. 正圆与正方形按住shift拖动，按alt拖动可以定点改变大小    b. 已选区后，shift拖动加选区， CTRL拖动减选区     shift+CTRL交叉选区，CTRL+d取消选区    c. 利用椭圆选框工具抠圆可利用alt定点放大和右键自由变换选取</code></pre><h3 id="4-单行画框工具和单列画框工具"><a href="#4-单行画框工具和单列画框工具" class="headerlink" title="4. 单行画框工具和单列画框工具"></a>4. 单行画框工具和单列画框工具</h3><pre><code>    a. 作用便于在图层上画线，先选区，再填色</code></pre><h3 id="5-套索工具多边形索工具和磁力套索工具"><a href="#5-套索工具多边形索工具和磁力套索工具" class="headerlink" title="5. 套索工具多边形索工具和磁力套索工具"></a>5. 套索工具多边形索工具和磁力套索工具</h3><pre><code>    a. 套索工具可以方便的选取不规则区域，但精度不高    b. 多边形索工具方便选取直线规则多边形    c. 随鼠标移动自动按色差识别选择内容，色差较小区域处    手动点击辅助引导    d. alt+滚轮调节大小  空格鼠标控制位置    backspace删除节点  alt切换套索工具    </code></pre><h2 id="ps4快速选区工具及魔棒工具"><a href="#ps4快速选区工具及魔棒工具" class="headerlink" title="ps4快速选区工具及魔棒工具"></a>ps4快速选区工具及魔棒工具</h2><h3 id="1-快速选择工具"><a href="#1-快速选择工具" class="headerlink" title="1. 快速选择工具"></a>1. 快速选择工具</h3><pre><code>    a. 对所有图层取样自动识别内所在图层方便选取，默认开启    b. 自动增强虚化边框减少生硬感过渡    c. 选择主体自动选择画面主体部分，需要自己调整，初学阶段建议关闭    d. alt+右键按住拖动可以改变工具大小，减少选区alt</code></pre><h3 id="2-魔棒工具"><a href="#2-魔棒工具" class="headerlink" title="2. 魔棒工具"></a>2. 魔棒工具</h3><pre><code>    a. 参数设置默认连续，取样点，对所有图层取样，容差20容差控制单次选取大小    b. 自动选择图片中颜色相近的部分，然后反选扣取内容，适合纯色背景抠图</code></pre><h3 id="3-可以配合多种选区工具选区"><a href="#3-可以配合多种选区工具选区" class="headerlink" title="3. 可以配合多种选区工具选区"></a>3. 可以配合多种选区工具选区</h3><h3 id="4-选择并遮住"><a href="#4-选择并遮住" class="headerlink" title="4. 选择并遮住"></a>4. 选择并遮住</h3><pre><code>    a. 在抠图后往往边缘会出现锯齿状，杂色，粗糙，这时可以用选择并遮住微调    b. 基础参数设置黑白底，不透明度100%    c. 羽化和边缘检测功能很少用，容易产生杂色    d. 平滑根据图片效果自主决定百分比    e. 对比度和移动边缘后期再学习    f. 调整边缘画笔工具自动识别微调    g. 净化颜色去除杂色根据图片效果决定参数</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="学习" scheme="https://hesifan.top/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="笔记" scheme="https://hesifan.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="ps" scheme="https://hesifan.top/tags/ps/"/>
    
    <category term="adobe" scheme="https://hesifan.top/tags/adobe/"/>
    
  </entry>
  
  <entry>
    <title>文摘</title>
    <link href="https://hesifan.top/2020/102425339.html"/>
    <id>https://hesifan.top/2020/102425339.html</id>
    <published>2020-10-24T10:46:00.000Z</published>
    <updated>2021-01-01T14:36:47.063Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>世界上第一位百万富翁洛克菲勒对他儿子说我不相信天赐的好运气，但我靠规划平步青云。生活没有一夜暴富的美梦，也不必最好的年纪委屈自己，更多我们是要分清想要和必要，在合理的规划中行止由心得偿所愿。 2020.10.24</p><hr><p>时也命也运也，天有不测风云，人有旦夕祸福。蜈蚣百足，行不及蛇,灵鸡有翼，飞不如鸦。马有千里之程，无人不能自往；人有凌云之志，非运不能腾达。文章盖世，孔子困于陈蔡；武略超群，太公垂钓于渭水。盗跖年幼，不是善良之辈；颜回命短，实非凶恶之徒。尧舜至圣，反生不肖之子；瞽叟顽呆，却生大圣之儿。张良原是布衣，萧何称谓县吏。晏子身无五尺，能做齐国首相；孔明居卧草庐，作了蜀汉军师。韩信手无缚鸡之力，封了汉朝大将；冯唐有安邦之志，到老半官无封；楚王虽雄，难免乌江自刎；汉王虽弱，却有万里江山。满腹经纶，白发不第；才疏学浅，少年登科。有先贫而后富，有先富而后贫。蛟龙未遇，潜身于鱼虾之间；君子失时，拱手于小人之下。天不得时，日月无光；地不得时，草木不长；水不得时，风浪不止；人不得时，利运不通。盖人生在世，富贵不能移，贫贱不能欺。此乃天地循环，终而复始者也。——郭德纲时运赋              2020.10.28</p><hr><p>如果你来访我，我不在，请和我门外的花坐一会儿，它们很温暖，我注视它们很多很多日子了。它们开得不茂盛，想起来什么说什么，没有话说时，尽管长着碧叶。汪曾祺《人间草木》2020.10.30    </p><hr><p>林深时见鹿，海蓝时见鲸，梦醒时见你。<br>可实际:<br>林深时雾起，海蓝时浪涌，梦醒时夜续。<br>不见鹿，不见鲸，也不见你。<br>但终究:<br>鹿踏雾而来，鲸随浪而涌。<br>你没回头又怎知我不在。  2020.11.02    </p><hr><p>那一天我二十一岁，在我一生的黄金时代，我有好多奢望。我想爱，想吃，还想在一瞬间变成天上半明半暗的云。可是我过二十一岁生日时没有预见到这一点。我觉得自己会永远生猛下去，什么也锤不了我。–王小波 《黄金时代》 2020.11.03  </p><hr><p>仅一夜之间，我的心判若两人” 他自人山人海中来 原来只为给我一场空欢喜 你来时携风带雨 我无处可避 你走时乱了四季我 久病难医。2020.11.05</p><hr><p>“ 每个人的生命里，都有最艰难的那一年，将人生变得美好而辽阔。” —— 《岛上书店》2020.11.08  </p><hr><p>两处相思同淋雪，也算此生共白头。冬去枯骨尘如是，春来尽做连理枝。鸟雀对鸣和和睦，好比我等再无忧。2020.11.11</p><hr><p>对不爱的东西锱铢必较，对爱的一掷千金，这才是钱的正确使用方式 2020.11.12 </p><hr><p>落榜复读，偶遇转校女孩，惊为天人，遂追求，历经半载，如愿。虽终日书信传情，夜半通幽，亦榜上有名。时值奥运之年，吾亲赴鸟巢行工瓦之事，两月酷暑搏伊人一笑，畅！其中种种，美不胜收。然事与愿违，伊人家境颇丰，狮城留学，至今未归。前日于旧友偶闻其已婚配，门当户对，落叶不归根。吾，百无一用 。2020.11.13 </p><hr><p>白月光并不是年少的她发出来的光，而是年少的你看到她的时候眼里的光！2020.11.14  </p><hr><p>一见钟情只不过是见色起意，日久生情不过是权衡利弊，爱情这东西，始于颜值，陷于才华，忠于肉体，迷于声音，最后，折于物质，败于现实。2020.11.14  </p><hr><p>到了后来，那个人其实已经不是某个独特的人，而是承载着某种情绪的载体。是所有美好幻想凑成的粉红色泡泡，记忆中那个得不到的人，永远年轻活力，承载一切少年幻想。  2020.11.14</p><hr><p>而初美所摇撼的恰恰就是我身上长眠未醒的“我自身的一部分”。当我恍然大悟时，一时悲枪之极。<br>《挪威的森林》  2020.11.15</p><hr><p>它类似一种少年时代的憧憬，一种从来不曾实现而且永远不可能实现的憧憬。这种直欲燃烧般的天真烂漫的憧憬，我在很早以前就已遗忘在什么地方了，甚至在很长时间里我连它曾在我心中存在过都未曾记起。2020.11.15</p><hr><p>忽有故人心上过，回首山河已是秋。<br>两处相思同淋雪，此生也算共白头。    2020.11.16</p><hr><p>青丝幽幽系行舟 落花依旧漫水流 山河有幸同历雪 应是此生共白头  2020.11.16</p><hr><p>转眼就是2020最后一天，这一年见过山雾弥漫，见过漫天星河，愿新的一年面对流俗，拥有骄傲，面对广阔世界，万物更新，旧疾当愈，愿来年胸中有丘壑，目光存山河。</p><p>感谢这一年你带给我的精彩，陪我见星辰，陪我见尘埃，新的一年，希望你所求如愿，前行坦途，长夜终有共享，闪闪发亮人海中有知己，共赴远方，朝暮与年岁并往，我愿与你一同行至天光。</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="文化素养" scheme="https://hesifan.top/categories/%E6%96%87%E5%8C%96%E7%B4%A0%E5%85%BB/"/>
    
    
    <category term="文摘" scheme="https://hesifan.top/tags/%E6%96%87%E6%91%98/"/>
    
  </entry>
  
  <entry>
    <title>hexo部署到centos服务器</title>
    <link href="https://hesifan.top/2020/102417267.html"/>
    <id>https://hesifan.top/2020/102417267.html</id>
    <published>2020-10-24T09:01:00.000Z</published>
    <updated>2021-03-05T13:48:06.679Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="将hexo部署到服务器"><a href="#将hexo部署到服务器" class="headerlink" title="将hexo部署到服务器"></a>将hexo部署到服务器</h1><h2 id="系统centos-7-6-64bit"><a href="#系统centos-7-6-64bit" class="headerlink" title="系统centos 7.6 64bit"></a>系统centos 7.6 64bit</h2><h2 id="环境-git-nginx"><a href="#环境-git-nginx" class="headerlink" title="环境 git nginx"></a>环境 git nginx</h2><h2 id="git安装与配置"><a href="#git安装与配置" class="headerlink" title="git安装与配置"></a>git安装与配置</h2><h3 id="1-安装依赖库和编译工具"><a href="#1-安装依赖库和编译工具" class="headerlink" title="1. 安装依赖库和编译工具"></a>1. 安装依赖库和编译工具</h3><pre><code>  yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</code></pre><pre><code> Is this ok [y/d/N]:  </code></pre><p> 输入y继续安装，后面一样  </p><h3 id="2-安装编译工具："><a href="#2-安装编译工具：" class="headerlink" title="2. 安装编译工具："></a>2. 安装编译工具：</h3><pre><code>  yum install gcc perl-ExtUtils-MakeMaker package </code></pre><h2 id="下载-git并解压编译安装"><a href="#下载-git并解压编译安装" class="headerlink" title="下载 git并解压编译安装"></a>下载 git并解压编译安装</h2><h3 id="1-查看服务器已有的git版本"><a href="#1-查看服务器已有的git版本" class="headerlink" title="1. 查看服务器已有的git版本"></a>1. 查看服务器已有的git版本</h3><pre><code>git --version</code></pre><pre><code>git version 1.8.3.1</code></pre><h3 id="2-将陈旧版本的git删除"><a href="#2-将陈旧版本的git删除" class="headerlink" title="2. 将陈旧版本的git删除"></a>2. 将陈旧版本的git删除</h3><pre><code>yum remove git </code></pre><h3 id="3-选择一个目录来存放下载下来的-git-安装包。这里选择了-usr-local-src-目录"><a href="#3-选择一个目录来存放下载下来的-git-安装包。这里选择了-usr-local-src-目录" class="headerlink" title="3.选择一个目录来存放下载下来的 git 安装包。这里选择了/usr/local/src 目录"></a>3.选择一个目录来存放下载下来的 git 安装包。这里选择了/usr/local/src 目录</h3><pre><code>cd /usr/local/src   </code></pre><h3 id="4-下载最新版git到-usr-local-src，可以在官网找到版本，目前最新版本是2-26-0。"><a href="#4-下载最新版git到-usr-local-src，可以在官网找到版本，目前最新版本是2-26-0。" class="headerlink" title="4. 下载最新版git到/usr/local/src，可以在官网找到版本，目前最新版本是2.26.0。"></a>4. 下载最新版git到/usr/local/src，可以在官网找到版本，目前最新版本是2.26.0。</h3><pre><code>wget http://ftp.ntu.edu.tw/software/scm/git/git-2.26.0.tar.gz  </code></pre><h3 id="5-解压到当前目录"><a href="#5-解压到当前目录" class="headerlink" title="5. 解压到当前目录"></a>5. 解压到当前目录</h3><pre><code>tar -zvxf git-2.26.0.tar.gz  </code></pre><h3 id="6-进入-git-2-26-0-tar-gz-目录下"><a href="#6-进入-git-2-26-0-tar-gz-目录下" class="headerlink" title="6. 进入 git-2.26.0.tar.gz 目录下"></a>6. 进入 git-2.26.0.tar.gz 目录下</h3><pre><code>cd git-2.26.0</code></pre><h3 id="7-执行编译"><a href="#7-执行编译" class="headerlink" title="7. 执行编译"></a>7. 执行编译</h3><pre><code>make prefix=/usr/local/git all  </code></pre><h3 id="8-安装-git-到-usr-local-git-目录下"><a href="#8-安装-git-到-usr-local-git-目录下" class="headerlink" title="8.安装 git 到 /usr/local/git 目录下"></a>8.安装 git 到 /usr/local/git 目录下</h3><pre><code>make prefix=/usr/local/git install  </code></pre><h2 id="配置-git-环境变量"><a href="#配置-git-环境变量" class="headerlink" title="配置 git 环境变量"></a>配置 git 环境变量</h2><h3 id="1-打开环境变量配置文件"><a href="#1-打开环境变量配置文件" class="headerlink" title="1.打开环境变量配置文件"></a>1.打开环境变量配置文件</h3><pre><code>vim /etc/profile  </code></pre><p>  按i进入编辑模式，按向下键到底部，添加下面两行命令：   </p><pre><code>PATH=$PATH:/usr/local/git/bin   # git 的目录export PATH  </code></pre><p>  按esc退出，按:wq保存编辑。(注意是先:再是wq)  </p><h3 id="2-使-git-环境变量生效"><a href="#2-使-git-环境变量生效" class="headerlink" title="2.使 git 环境变量生效"></a>2.使 git 环境变量生效</h3><pre><code> source /etc/profile</code></pre><h3 id="3-验证安装完成，查看-git-的版本号"><a href="#3-验证安装完成，查看-git-的版本号" class="headerlink" title="3.验证安装完成，查看 git 的版本号"></a>3.验证安装完成，查看 git 的版本号</h3><pre><code>git --version</code></pre><p>这时候我们的git版本已经变成了：</p><pre><code>git version 2.26.01</code></pre><h2 id="创建-git-用户"><a href="#创建-git-用户" class="headerlink" title="创建 git 用户"></a>创建 git 用户</h2><h3 id="1-创建git用户"><a href="#1-创建git用户" class="headerlink" title="1.创建git用户"></a>1.创建git用户</h3><pre><code>adduser git</code></pre><h3 id="2-获取权限"><a href="#2-获取权限" class="headerlink" title="2.获取权限"></a>2.获取权限</h3><pre><code>chmod 740 /etc/sudoersvim /etc/sudoers</code></pre><p>按 i 键进入文件的编辑模式，按向下键找到如下字段</p><pre><code>root    ALL=(ALL)       ALL</code></pre><p>在其后面增加一句：</p><pre><code>git     ALL=(ALL)       ALL</code></pre><p>按 Esc 键退出编辑模式，输入:wq 保存退出。（先输入:，然后输入wq回车）</p><h3 id="3-退回权限"><a href="#3-退回权限" class="headerlink" title="3.退回权限"></a>3.退回权限</h3><pre><code>chmod 400 /etc/sudoers  </code></pre><h2 id="配置密钥"><a href="#配置密钥" class="headerlink" title="配置密钥"></a>配置密钥</h2><h3 id="1-将密钥保存在服务器-之前有密钥的直接复制就可以"><a href="#1-将密钥保存在服务器-之前有密钥的直接复制就可以" class="headerlink" title="1.将密钥保存在服务器(之前有密钥的直接复制就可以)"></a>1.将密钥保存在服务器(之前有密钥的直接复制就可以)</h3><p>将id_rsa.pub里面的密钥复制,在服务器运行下面命令，创建.ssh文件夹</p><pre><code>su gitmkdir ~/.ssh</code></pre><p>创建.ssh/authorized_keys文件，打开authorized_keys文件并将刚才在本地机器复制的内容拷贝其中并保存</p><pre><code>vim ~/.ssh/authorized_keys</code></pre><p>按i进入编辑模式粘贴完按 Esc 键退出编辑模式，输入:wq 保存退出。（先输入:，然后输入wq回车）</p><h3 id="2-修改权限"><a href="#2-修改权限" class="headerlink" title="2.修改权限"></a>2.修改权限</h3><pre><code>chmod 755 ~chmod 700 ~/.sshchmod 600 ~/.ssh/authorized_keys</code></pre><h3 id="3-测试本地连接服务器"><a href="#3-测试本地连接服务器" class="headerlink" title="3.测试本地连接服务器"></a>3.测试本地连接服务器</h3><p>在本地电脑git bash here</p><pre><code>//yourIp为远程服务器的ip地址ssh -v git@yourIp  </code></pre><pre><code>git@vm_0_centos~</code></pre><h2 id="创建git仓库"><a href="#创建git仓库" class="headerlink" title="创建git仓库"></a>创建git仓库</h2><h3 id="1-切换到root用户，创建一个目录用于存储网站的根目录"><a href="#1-切换到root用户，创建一个目录用于存储网站的根目录" class="headerlink" title="1.切换到root用户，创建一个目录用于存储网站的根目录"></a>1.切换到root用户，创建一个目录用于存储网站的根目录</h3><pre><code>su root</code></pre><h3 id="2-创建网站的根目录"><a href="#2-创建网站的根目录" class="headerlink" title="2.创建网站的根目录"></a>2.创建网站的根目录</h3><pre><code>mkdir /home/hexo</code></pre><h3 id="3给予权限"><a href="#3给予权限" class="headerlink" title="3给予权限"></a>3给予权限</h3><pre><code>chown git:git -R /home/hexo</code></pre><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><h3 id="1-安装配置Nginx"><a href="#1-安装配置Nginx" class="headerlink" title="1.安装配置Nginx"></a>1.安装配置Nginx</h3><p>安装Nginx  </p><pre><code>yum install -y nginx</code></pre><p>配置Nginx</p><pre><code>nginx -t</code></pre><p>使用vim打开nginx.conf文件</p><pre><code>vim /etc/nginx/nginx.conf</code></pre><p>按i进入编辑模式粘贴完按 Esc 键退出编辑模式，输入:wq 保存退出。（先输入:，然后输入wq回车）</p><pre><code>server {        listen       80 default_server;        listen       [::]:80 default_server;        server_name  www.muyiio.com;   //你的博客域名        root         /home/hexo;       //git仓库目录    # Load configuration files for the default server block.    include /etc/nginx/default.d/*.conf;    location / {    }j    error_page 404 /404.html;        location = /40x.html {    }    error_page 500 502 503 504 /50x.html;        location = /50x.html {    }}</code></pre><h3 id="2-启动Nginx"><a href="#2-启动Nginx" class="headerlink" title="2.启动Nginx"></a>2.启动Nginx</h3><pre><code>systemctl start nginx.service</code></pre><h3 id="3-重启Nginx"><a href="#3-重启Nginx" class="headerlink" title="3.重启Nginx"></a>3.重启Nginx</h3><pre><code>systemctl restart nginx.service</code></pre><h2 id="自动化部署"><a href="#自动化部署" class="headerlink" title="自动化部署"></a>自动化部署</h2><h3 id="1-获取root权限"><a href="#1-获取root权限" class="headerlink" title="1.获取root权限"></a>1.获取root权限</h3><pre><code>su root</code></pre><h3 id="2-建立git仓库"><a href="#2-建立git仓库" class="headerlink" title="2.建立git仓库"></a>2.建立git仓库</h3><pre><code>cd /home/gitgit init --bare blog.git</code></pre><h3 id="3-修改blog-git权限"><a href="#3-修改blog-git权限" class="headerlink" title="3.修改blog.git权限"></a>3.修改blog.git权限</h3><pre><code>chown git:git -R blog.git</code></pre><h3 id="4-在-home-hexo-blog-git-下，有一个自动生成的-hooks-文件夹，我们创建一个新的-git-钩子-post-receive，用于自动部署。"><a href="#4-在-home-hexo-blog-git-下，有一个自动生成的-hooks-文件夹，我们创建一个新的-git-钩子-post-receive，用于自动部署。" class="headerlink" title="4.在 /home/hexo/blog.git 下，有一个自动生成的 hooks 文件夹，我们创建一个新的 git 钩子 post-receive，用于自动部署。"></a>4.在 /home/hexo/blog.git 下，有一个自动生成的 hooks 文件夹，我们创建一个新的 git 钩子 post-receive，用于自动部署。</h3><pre><code>vim blog.git/hooks/post-receive</code></pre><p>按 i 键进入文件的编辑模式，在该文件中添加两行代码（将下边的代码粘贴进去)，指定 Git 的工作树（源代码）和 Git 目录</p><pre class=" language-#!/bin/bash"><code class="language-#!/bin/bash">git --work-tree=/home/hexo --git-dir=/home/git/blog.git checkout -f </code></pre><p>按 Esc 键退出编辑模式，输入:wq 保存退出。（先输入：，然后输入wq回车）</p><h3 id="5-修改文件权限，使得其可执行。"><a href="#5-修改文件权限，使得其可执行。" class="headerlink" title="5.修改文件权限，使得其可执行。"></a>5.修改文件权限，使得其可执行。</h3><pre><code>chmod +x /home/git/blog.git/hooks/post-receive  </code></pre><h2 id="配置本地Hexo"><a href="#配置本地Hexo" class="headerlink" title="配置本地Hexo"></a>配置本地Hexo</h2><h3 id="1-博客根目录-config下增加"><a href="#1-博客根目录-config下增加" class="headerlink" title="1.博客根目录_config下增加"></a>1.博客根目录_config下增加</h3><pre><code>deploy:    type: git    repo: root@***(服务器ip,内网外网都行):/home/git/blog.git    #仓库地址    branch: master    #分支</code></pre><h3 id="2-部署"><a href="#2-部署" class="headerlink" title="2.部署"></a>2.部署</h3><pre><code>hexo cleanhexo ghexo d</code></pre><p>输入hexo d的时候，会要求你输入自己的服务器密码</p><pre><code>Branch 'master' set up to track remote branch 'master' from 'https://e.coding.net/godxiaolon/godxiaolon.git'.On branch masternothing to commit, working tree cleanroot@119.25.56.82's password:Enumerating objects: 182, done.Counting objects: 100% (182/182), done.Delta compression using up to 12 threadsCompressing objects: 100% (61/61), done.Writing objects: 100% (95/95), 73.08 KiB | 3.18 MiB/s, done.Total 95 (delta 45), reused 0 (delta 0)remote: hooks/post-receive: line 1: t: command not foundTo 118.25.27.52:/home/git/hexoBlog.git   8df3691..7d63b39  HEAD -&gt; masterBranch 'master' set up to track remote branch 'master' from 'root@118.25.27.52:/home/git/hexoBlog.git'.INFO  Deploy done: git</code></pre><p>输入密码不会有显示，输完回车就可以</p><h3 id="3-如果出现bash-git-receive-pack-command-not-found-则运行："><a href="#3-如果出现bash-git-receive-pack-command-not-found-则运行：" class="headerlink" title="3.如果出现bash: git-receive-pack: command not found,则运行："></a>3.如果出现bash: git-receive-pack: command not found,则运行：</h3><pre><code>sudo ln -s /usr/local/git/bin/git-receive-pack  /usr/bin/git-receive-pack</code></pre><h3 id="4-访问服务器ip，看看有没有成功"><a href="#4-访问服务器ip，看看有没有成功" class="headerlink" title="4.访问服务器ip，看看有没有成功"></a>4.访问服务器ip，看看有没有成功</h3><h3 id="5-补充"><a href="#5-补充" class="headerlink" title="5.补充"></a>5.补充</h3><p>在同一个服务器第二次部署hexo时要将C盘.ssh文件夹中kown_host中服务器主机记录删掉否则会报错两次信息不同。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="网站" scheme="https://hesifan.top/categories/%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="服务器" scheme="https://hesifan.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="hexo" scheme="https://hesifan.top/tags/hexo/"/>
    
  </entry>
  
</feed>
